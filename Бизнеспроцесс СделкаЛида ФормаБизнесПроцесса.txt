
Процедура ПредлдожениеПриИзменении(Элемент)
	Работодатель=Предлдожение.Контрагент;
КонецПроцедуры

Процедура ЛидНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ФормаВыбора = Справочники.Контрагенты.ПолучитьФормуВыбора();
	ФормаВыбора.Отбор.ОсновнойВидДеятельности.Установить(Справочники.ВидыДеятельностиКонтрагентов.НайтиПоКоду("000000003"));
	ФормаВыбора.ЭлементыФормы.СправочникСписок.ИерархическийПросмотр=Ложь;
	Элемент.Значение=ФормаВыбора.ОткрытьМодально();
КонецПроцедуры

Процедура РаботодательНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ФормаВыбора = Справочники.Контрагенты.ПолучитьФормуВыбора();
	ФормаВыбора.Отбор.ОсновнойВидДеятельности.Установить(Справочники.ВидыДеятельностиКонтрагентов.НайтиПоКоду("000000002"));
	ФормаВыбора.ЭлементыФормы.СправочникСписок.ИерархическийПросмотр=Ложь;
	Элемент.Значение=ФормаВыбора.ОткрытьМодально();
КонецПроцедуры

Процедура ПредлдожениеНачалоВыбора(Элемент, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Работодатель) тогда
		СтандартнаяОбработка=Ложь;
		ФормаВыбора = Документы.СделкиРаботодателей.ПолучитьФормуВыбора();
		ФормаВыбора.Отбор.Контрагент.Установить(Работодатель);
		Элемент.Значение=ФормаВыбора.ОткрытьМодально();
	КонецЕсли;
КонецПроцедуры

Процедура ПриОткрытии()
	Если ЭтоНовый() тогда
		ОтветственныйОПУ=глЗначениеПеременной("глТекущийПользователь");
		//СуммаООО		= 25*32; 
		//СуммаФОП        = 275*32; 
		//СуммаФОП2	    = 400*32; 
		//РассчитатьСумму();
		ОрганизацияООО	= Справочники.Организации.НайтиПоКоду("000000001");
		ОрганизацияФОП	= Справочники.Организации.НайтиПоКоду("000000002");
		ДатаНачалаРаботы=ТекущаяДата();
		ДатаДогООО=ТекущаяДата();
		ДатаДогФОП=ТекущаяДата();
	КонецЕсли;
	УстановитьВидимость();
	СписокКнопокФайлов = Новый СписокЗначений;
	СписокКнопокФайлов.Добавить(ЭлементыФормы.ДействияФормы.Кнопки.Файлы);
	СписокКнопокФайлов.Добавить(ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.Файлы);
	РаботаСФайлами.ПолучитьКартинкуКнопкиОткрытияФайлов(Ссылка, СписокКнопокФайлов);
КонецПроцедуры

Процедура УстановитьВидимость()
	Если не Стартован тогда
		ЭлементыФормы.Панель.Страницы.Начальная.Видимость=Истина;
		ЭлементыФормы.Панель.Страницы.Счета1Транш.Видимость=Ложь;
		ЭлементыФормы.Панель.Страницы.Счета2Транш.Видимость=Ложь;
		ЭлементыФормы.Панель.Страницы.Оплата1Транш.Видимость=Ложь;
		ЭлементыФормы.Панель.Страницы.Оплата2Транш.Видимость=Ложь;
	//ИначеЕсли Стартован И Задачи.ЗадачиПользователя.	
	КонецЕсли;
	Задачи.отбор.БизнесПроцесс.Установить(Ссылка);
	Этаформа.ЭлементыФормы.Услуги1йТранш.ОтборСтрок.Этап.Значение=1;
	Этаформа.ЭлементыФормы.Услуги1йТранш.ОтборСтрок.Этап.Использование=Истина;
	
	Этаформа.ЭлементыФормы.Оплата1йТранш.ОтборСтрок.Этап.Значение=1;
	Этаформа.ЭлементыФормы.Оплата1йТранш.ОтборСтрок.Этап.Использование=Истина;
	
	Этаформа.ЭлементыФормы.Счета2йТранш.ОтборСтрок.Этап.Значение=2;
	Этаформа.ЭлементыФормы.Счета2йТранш.ОтборСтрок.Этап.Использование=Истина;
	
	Этаформа.ЭлементыФормы.Оплата2йТранш.ОтборСтрок.Этап.Значение=2;
	Этаформа.ЭлементыФормы.Оплата2йТранш.ОтборСтрок.Этап.Использование=Истина;
	
	
КонецПроцедуры

Процедура ОбновлениеОтображения()
	//Если ЗначениеЗаполнено(ОплатаООО) тогда
	//	ЭлементыФормы.НадписьСуммаСовпадаетООО.Значение=?(ОплатаООО.СуммаДокумента=СуммаООО,"Сумма соответствует.","Сумма НЕ соответствует.");
	//	ЭлементыФормы.НадписьСуммаСовпадаетООО.ЦветТекста=?(ОплатаООО.СуммаДокумента=СуммаООО,WebЦвета.Черный,WebЦвета.КрасноФиолетовый);
	//Иначе	
	//	ЭлементыФормы.НадписьСуммаСовпадаетООО.Значение="";
	//КонецЕсли;
	//Если ЗначениеЗаполнено(ОплатаФОП) тогда
	//	ЭлементыФормы.НадписьСуммаСовпадаетФОП.Значение=?(ОплатаФОП.СуммаДокумента=СуммаФОП,"Сумма соответствует.","Сумма НЕ соответствует.");
	//	ЭлементыФормы.НадписьСуммаСовпадаетФОП.ЦветТекста=?(ОплатаФОП.СуммаДокумента=СуммаФОП,WebЦвета.Черный,WebЦвета.КрасноФиолетовый);
	//Иначе	
	//	ЭлементыФормы.НадписьСуммаСовпадаетФОП.Значение="";
	//КонецЕсли;
	//Если ЗначениеЗаполнено(СчетФОП2) тогда
	//	ЭлементыФормы.НадписьСуммаСовпадаетФОП2.Значение=?(ОплатаФОП2.СуммаДокумента=СуммаФОП2,"Сумма соответствует.","Сумма НЕ соответствует.");
	//	ЭлементыФормы.НадписьСуммаСовпадаетФОП2.ЦветТекста=?(ОплатаФОП2.СуммаДокумента=СуммаФОП2,WebЦвета.Черный,WebЦвета.КрасноФиолетовый);
	//Иначе	
	//	ЭлементыФормы.НадписьСуммаСовпадаетФОП2.Значение="";
	//КонецЕсли;
КонецПроцедуры

Процедура ДатаПриИзменении(Элемент)
	ДатаНачалаРаботы=НачалоДня(Элемент.Значение);
КонецПроцедуры

Процедура ДействияФормыКартаМаршрута(Кнопка)
	РаботаСБизнесПроцессами.ОткрытьКартумаршрута(Ссылка);
КонецПроцедуры // ДействияФормыКартаМаршрута()

Процедура КнопкаПечатьДоговорОООНажатие(Элемент)
	СтруктураКурсаВзаиморасчетов = МодульВалютногоУчета.ПолучитьКурсВалюты(Справочники.Валюты.НайтиПоКоду("978"), ДатаНачалаРаботы);
	ДополнительныеФункции.ПечатьДоговорТОВ(Лид,СуммаООО,ТарифныйПакет,СтруктураКурсаВзаиморасчетов.Курс/СтруктураКурсаВзаиморасчетов.Кратность);
	РаспечатанДоговорООО=Истина;
КонецПроцедуры

Процедура КнопкаПечатьДоговорФопНажатие(Элемент)
	Если не ЗначениеЗаполнено(ДоговорФОП) или 
		не ЗначениеЗаполнено(ДатаДогФОП) тогда
		Предупреждение("Не заполнены реквизиты договора, "+Символы.ПС+" печать не возможна!" ,300,"Внимание!" );
		возврат;
	КонецЕсли;	
	
	Записать();
	ДополнительныеФункции.НайтиДоговор(ОрганизацияФОП,Лид,Ссылка);	
	СуммаТр11=0;
	СуммаТр21=0;
	СуммаТр22=0;
	Для Каждого стр из Услуги Цикл
		Если стр.Организация=ОрганизацияФОП тогда
			Если стр.Этап=1 и стр.Номенклатура.Код="00000000007"  тогда
				СуммаТр11=стр.Сумма;
			ИначеЕсли стр.Этап=1 и стр.Номенклатура.Код<>"00000000007"  тогда
				СуммаТр21=стр.Сумма;
			ИначеЕсли  стр.Этап=2 тогда	
				СуммаТр22=стр.Сумма;
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
	ДополнительныеФункции.ПечатьДоговорФОП(Лид,ОрганизацияФОП,СуммаТр11,СуммаТр21);
	ДополнительныеФункции.ПечатьДод2ФОП(Лид,ОрганизацияФОП,ТарифныйПакет,СуммаТр22);
	РаспечатанДоговорФОП=Истина;
КонецПроцедуры

Процедура КнопкаПечатьСчетОООНажатие(Элемент)
	СчетООО.ПолучитьОбъект().Печать("Счет",1,Ложь);
	РаспечатанСчетООО=Истина;
КонецПроцедуры

Процедура КнопкаПечатьСчетФОПНажатие(Элемент)
	СчетФОП.ПолучитьОбъект().Печать("Счет",1,Ложь);	
	РаспечатанСчетФОП=Истина;
КонецПроцедуры


Процедура СуммаФОП2ПриИзменении(Элемент)
	РассчитатьСумму();
КонецПроцедуры

Процедура РассчитатьСумму()
	СуммаСделки		= СуммаООО+СуммаФОП+СуммаФОП2;
КонецПроцедуры


Процедура СуммаФОППриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры


Процедура СуммаОООПриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры


Процедура ТарифныйПакетНачалоВыбора(Элемент, СтандартнаяОбработка)
		//ФормаВыбора = Справочники.Номенклатура.ПолучитьФормуВыбора();
		//Запрос = Новый Запрос;
		//Запрос.Текст = 
		//"ВЫБРАТЬ
		//|	Номенклатура.Ссылка КАК Док
		//|ИЗ
		//|	Справочник.Номенклатура КАК Номенклатура
		//|ГДЕ
		//|	Номенклатура.Родитель = &Родитель
		//|	И Номенклатура.ПометкаУдаления = ЛОЖЬ";
		//
		//Запрос.УстановитьПараметр("Родитель", Справочники.Номенклатура.НайтиПоКоду("00000000006"));
		//Список= новый СписокЗначений();
		//Список.ЗагрузитьЗначения(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Док"));
		//
		//Если Список.Количество()>0 Тогда
		//	СтандартнаяОбработка=ложь;
		//	ФормаВыбора.Отбор.Ссылка.ВидСравнения=ВидСравнения.ВСписке;
		//	ФормаВыбора.Отбор.Ссылка.Использование=Истина;
		//	ФормаВыбора.Отбор.Ссылка.Значение=Список;
		//	ФормаВыбора.ЭлементыФормы.СправочникСписок.ИерархическийПросмотр=Ложь;
		//	Элемент.Значение=ФормаВыбора.ОткрытьМодально();
		//КонецЕсли;	
КонецПроцедуры


Процедура ОплатаОООНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ФормаВыбора = Документы.ПлатежноеПоручениеВходящее.ПолучитьФормуВыбора();
	ФормаВыбора.Отбор.Организация.Установить(ОрганизацияООО);
	ФормаВыбора.Отбор.Контрагент.Установить(Лид);
	Элемент.Значение=ФормаВыбора.ОткрытьМодально();//***AL 180926 ### .ОткрытьМодально();
КонецПроцедуры


Процедура ОплатаФОПНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ФормаВыбора = Документы.ПлатежноеПоручениеВходящее.ПолучитьФормуВыбора();
	ФормаВыбора.Отбор.Организация.Установить(ОрганизацияФОП);
	ФормаВыбора.Отбор.Контрагент.Установить(Лид);
	Элемент.Значение=ФормаВыбора.ОткрытьМодально();//***AL 180926 ### .ОткрытьМодально();
КонецПроцедуры

Процедура ДатаНачалаРаботыНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	ВыбранноеВремя = ДополнительныеФункции.ВыборДатыВремениИзВыпадающегоСписка(Элемент, СтандартнаяОбработка, ЭтаФорма);
	Если ВыбранноеВремя <> Неопределено Тогда
		ДатаНачала = ВыбранноеВремя.Значение;
	КонецЕсли;
КонецПроцедуры


Процедура КнопкаПечатьСчетФОП2Нажатие(Элемент)
	СчетФОП.ПолучитьОбъект().Печать("Счет",1,Ложь);	
	РаспечатанСчетФОП=Истина;
КонецПроцедуры


Процедура ТарифныйПакетПриИзменении(Элемент)
	ЗаполнитьУслугами();
КонецПроцедуры


Процедура ЗаполнитьУслугиНажатие(Элемент)
	ЗаполнитьУслугами();
КонецПроцедуры

Процедура ЗаполнитьУслугами()
	Если Услуги.Количество()>0  тогда
		ТекстВопроса = "Очистить услуги?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да, Метаданные().Имя);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			 Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если не ЗначениеЗаполнено(ТарифныйПакет) тогда
		Предупреждение("Не заполнен <<Тарифный пакет>>!",300,"Внимание!" );
		Возврат;
	КонецЕсли;
	
	Если не ЗначениеЗаполнено(ТипЦены) тогда
		ТипЦены=Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000001");
	КонецЕсли;	
	
	Услуги.Очистить();
	ДобавитьУслугу(Справочники.Номенклатура.НайтиПоКоду("00000000007")); //*** Пакет ФОП  дод. 1
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Номенклатура.Ссылка КАК Услуга
		|ИЗ
		|	Справочник.Номенклатура КАК Номенклатура
		|ГДЕ
		|	Номенклатура.НоменклатурнаяГруппа = &НоменклатурнаяГруппа
		|	И Номенклатура.ПометкаУдаления = ЛОЖЬ
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура.Наименование";
	Запрос.УстановитьПараметр("НоменклатурнаяГруппа", ЭтотОбъект.ТарифныйПакет);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ДобавитьУслугу(ВыборкаДетальныеЗаписи.Услуга);
	КонецЦикла;
	ДобавитьУслугу(Справочники.Номенклатура.НайтиПоКоду("00000000009")); //*** Пакет  услуг по договору ООО	
КонецПроцедуры


Процедура ДобавитьУслугу(Услуга)
	Если Услуга = неопределено тогда 
		возврат;
	КонецЕсли;	
	му= Услуги.Добавить();
	му.Номенклатура	=Услуга;
	му.Количество	=1;
	СтруктураКурсаВзаиморасчетов = МодульВалютногоУчета.ПолучитьКурсВалюты(Справочники.Валюты.НайтиПоКоду("978"), ДатаНачалаРаботы);
	му.Курс			= 	СтруктураКурсаВзаиморасчетов.Курс/СтруктураКурсаВзаиморасчетов.Кратность;
	му.КурсДня		=	му.Курс;
	му.Пункт		=	му.НомерСтроки;
	му.Цена			=   Ценообразование.ПолучитьЦенуНоменклатуры(му.Номенклатура,,ТипЦены);
	му.ЦенаПрайса	=	му.Цена;
	му.Сумма		=   му.Количество*му.Цена*му.Курс;
	му.Организация  =   ?(му.Номенклатура.код="00000000009",ОрганизацияООО,ОрганизацияФОП);
	му.Описание		=   му.Номенклатура.ДополнительноеОписаниеНоменклатуры;
	му.Этап			= 	НайтиТранш(му.Номенклатура);
КонецПроцедуры

Процедура УслугиНоменклатураПриИзменении(Элемент)
	му=ЭлементыФормы.Услуги.ТекущиеДанные;
	му.Цена			=   Ценообразование.ПолучитьЦенуНоменклатуры(му.Номенклатура,,ТипЦены);	
	му.ЦенаПрайса	=	му.Цена;
	РасчитатьСуммы(му);
КонецПроцедуры

Процедура РасчитатьСуммы(му)
	му.Сумма		=   му.Количество*му.Цена*му.Курс;
КонецПроцедуры

Функция НайтиТранш(Товар)
	Этап=0;
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|    ЗначенияСвойствОбъектов.Объект КАК Объект,
	|    ЗначенияСвойствОбъектов.Свойство КАК Свойство,
	|    ЗначенияСвойствОбъектов.Значение КАК Значение
	|ИЗ
	|    РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|    ЗначенияСвойствОбъектов.Объект 		= &Объект
	|    И ЗначенияСвойствОбъектов.Свойство.Код	= &КодСвойства" );
	Запрос.УстановитьПараметр("Объект", Товар);
	Запрос.УстановитьПараметр("КодСвойства", "000000001");
	вт=Запрос.Выполнить();
	Если не вт.Пустой() тогда
		вг=вт.Выбрать();
		вг.Следующий();
		Этап=вг.значение;
	КонецЕсли;
	возврат Этап;
КонецФункции


Процедура Услуги1йТраншПередНачаломДобавления(Элемент, Отказ, Копирование)
	отказ=истина;
КонецПроцедуры


Процедура Услуги1йТраншПередУдалением(Элемент, Отказ)
	отказ=истина;
КонецПроцедуры


Процедура ПанельПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
КонецПроцедуры


Процедура Оплата1йТраншПередНачаломДобавления(Элемент, Отказ, Копирование)
	отказ=истина;
КонецПроцедуры


Процедура Оплата1йТраншПередУдалением(Элемент, Отказ)
	отказ=истина;
КонецПроцедуры


Процедура Счета2йТраншПередНачаломДобавления(Элемент, Отказ, Копирование)
	отказ=истина;
КонецПроцедуры


Процедура Счета2йТраншПередУдалением(Элемент, Отказ)
	отказ=истина;
КонецПроцедуры


Процедура Оплата2йТраншПередНачаломДобавления(Элемент, Отказ, Копирование)
	отказ=истина;
КонецПроцедуры


Процедура Оплата2йТраншПередУдалением(Элемент, Отказ)
	отказ=истина;
КонецПроцедуры

Процедура Услуги1йТраншАктНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ФормаВыбора = Документы.РеализацияТоваровУслуг.ПолучитьФормуВыбора("ФормаВыбора");
	ФормаВыбора.Отбор.Организация.Установить(ЭлементыФормы.Услуги1йТранш.ТекущиеДанные.Организация);
	ФормаВыбора.Отбор.Контрагент.Установить(Лид);
	Элемент.Значение=ФормаВыбора.ОткрытьМодально();//***AL 180926 ### .ОткрытьМодально();	
КонецПроцедуры

Процедура Услуги1йТраншСчетНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ФормаВыбора = Документы.СчетНаОплатуПокупателю.ПолучитьФормуВыбора("ФормаВыбора");
	ФормаВыбора.Отбор.Организация.Установить(ЭлементыФормы.Услуги1йТранш.ТекущиеДанные.Организация);
	ФормаВыбора.Отбор.Контрагент.Установить(Лид);
	Элемент.Значение=ФормаВыбора.ОткрытьМодально();	
КонецПроцедуры


Процедура Оплата1йТраншОплатаНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
//***
	ФормаВыбора = ЖурналыДокументов.ПлатежныеДокументы.ПолучитьФорму("ФормаСписка");
	ФормаВыбора.РежимВыбора = Истина;
	ФормаВыбора.Отбор.Организация.Установить(ЭлементыФормы.Оплата1йТранш.ТекущиеДанные.Организация);
	ФормаВыбора.Отбор.Контрагент.Установить(Лид);
	Элемент.Значение=ФормаВыбора.ОткрытьМодально();//***AL 180926 ### .ОткрытьМодально();	
КонецПроцедуры


Процедура Счета2йТраншАктНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ФормаВыбора = Документы.РеализацияТоваровУслуг.ПолучитьФормуВыбора("ФормаВыбора");
	ФормаВыбора.Отбор.Организация.Установить(ЭлементыФормы.Счета2йТранш.ТекущиеДанные.Организация);
	ФормаВыбора.Отбор.Контрагент.Установить(Лид);
	Элемент.Значение=ФормаВыбора.ОткрытьМодально();//***AL 180926 ### .ОткрытьМодально();	
КонецПроцедуры


Процедура Счета2йТраншСчетНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ФормаВыбора = Документы.СчетНаОплатуПокупателю.ПолучитьФормуВыбора("ФормаВыбора");
	ФормаВыбора.Отбор.Организация.Установить(ЭлементыФормы.Счета2йТранш.ТекущиеДанные.Организация);
	ФормаВыбора.Отбор.Контрагент.Установить(Лид);
	Элемент.Значение=ФормаВыбора.ОткрытьМодально();//***AL 180926 ### .ОткрытьМодально();	
КонецПроцедуры


Процедура Оплата2йТраншОплатаНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ФормаВыбора = ЖурналыДокументов.ПлатежныеДокументы.ПолучитьФорму("ФормаСписка");
	ФормаВыбора.РежимВыбора = Истина;
	ФормаВыбора.Отбор.Организация.Установить(ЭлементыФормы.Оплата2йТранш.ТекущиеДанные.Организация);
	ФормаВыбора.Отбор.Контрагент.Установить(Лид);
	Элемент.Значение=ФормаВыбора.ОткрытьМодально();//***AL 180926 ### .ОткрытьМодально();	
КонецПроцедуры


Процедура КнопкаПечатьДоговорТОВНажатие(Элемент)
	Если не ЗначениеЗаполнено(ДоговорООО) или 
		не ЗначениеЗаполнено(ДатаДогООО) тогда
		Предупреждение("Не заполнены реквизиты договора, "+Символы.ПС+" печать не возможна!" ,300,"Внимание!" );
		возврат;
	КонецЕсли;	
Записать();	
ДополнительныеФункции.НайтиДоговор(ОрганизацияООО,Лид,Ссылка);	
СтруктураКурсаВзаиморасчетов = МодульВалютногоУчета.ПолучитьКурсВалюты(Справочники.Валюты.НайтиПоКоду("978"), ДатаНачалаРаботы);
ДополнительныеФункции.ПечатьДоговорТОВ(Лид,СуммаООО,ТарифныйПакет,СтруктураКурсаВзаиморасчетов.Курс/СтруктураКурсаВзаиморасчетов.Кратность);
РаспечатанДоговорООО=Истина;	
КонецПроцедуры

Процедура ДействияФормыПечатьДокументов(Кнопка)
	Если ЭлементыФормы.Услуги1йТранш.ТекущиеДанные<>неопределено тогда
		ТекСтр=ЭлементыФормы.Услуги1йТранш.ТекущиеДанные;
		Если ЭлементыФормы.Услуги1йТранш.ТекущаяКолонка.Имя="Счет" И ЗначениеЗаполнено(ТекСтр.Счет) тогда
			ТекСтр.Счет.ПолучитьОбъект().Печать("Счет",1,Ложь);
		ИначеЕсли 	ЭлементыФормы.Услуги1йТранш.ТекущаяКолонка.Имя="Акт"  И ЗначениеЗаполнено(ТекСтр.Акт) тогда
		 	 ТекСтр.Акт.ПолучитьОбъект().Печать("Акт",1,Ложь);
   	 	КонецЕсли;	  
	 ИначеЕсли ЭлементыФормы.Счета2йТранш.ТекущиеДанные<>неопределено тогда
		ТекСтр=ЭлементыФормы.Счета2йТранш.ТекущиеДанные;
		Если ЭлементыФормы.Услуги2йТранш.ТекущаяКолонка.Имя="Счет" И ЗначениеЗаполнено(ТекСтр.Счет) тогда
			ТекСтр.Счет.ПолучитьОбъект().Печать("Счет",1,Ложь);
		ИначеЕсли 	ЭлементыФормы.Услуги2йТранш.ТекущаяКолонка.Имя="Акт"  И ЗначениеЗаполнено(ТекСтр.Акт) тогда
		 	 ТекСтр.Акт.ПолучитьОбъект().Печать("Акт",1,Ложь);
   	 	КонецЕсли;	  		 
	КонецЕсли;	
КонецПроцедуры

Процедура ОрганизацияФОППриИзменении(Элемент)
	ЗаполнитьУслугами();	
КонецПроцедуры

// Обработчик события Нажатие элемента формы ДействияФормы.Файлы.
//
Процедура ДействияФормыФайлы(Кнопка)
	
	Если НЕ РаботаСДиалогами.ЗаписатьНовыйОбъектВФорме(ЭтаФорма) Тогда
		Возврат;
	КонецЕсли;

	СтруктураДляСпискаИзображдений = Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, Ссылка, Ложь, Ложь);
	СтруктураДляСпискаДополнительныхФайлов = Новый Структура("ОтборОбъектИспользование, ОтборОбъектЗначение, ДоступностьОтбораОбъекта, ВидимостьКолонкиОбъекта", Истина, Ссылка, Ложь, Ложь);
	ОбязательныеОтборы = Новый Структура("Объект", Ссылка);
	
	РаботаСФайлами.ОткрытьФормуСпискаФайловИИзображений(СтруктураДляСпискаИзображдений, СтруктураДляСпискаДополнительныхФайлов, ОбязательныеОтборы, ЭтаФорма);

КонецПроцедуры


Процедура ОбработкаВыбора(ЗначениеВыбора, Источник)
	Если ТипЗнч(ЗначениеВыбора) = Тип("Строка") Тогда
		Если ЗначениеВыбора = "ИзмененСписокСправочникаХранилищеДопИнформации" Тогда
			СписокКнопокФайлов = Новый СписокЗначений;
			СписокКнопокФайлов.Добавить(ЭлементыФормы.ДействияФормы.Кнопки.Файлы);
			СписокКнопокФайлов.Добавить(ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.Файлы);
			РаботаСФайлами.ПолучитьКартинкуКнопкиОткрытияФайлов(Ссылка, СписокКнопокФайлов);
		КонецЕсли;
	ИначеЕсли ТипЗнч(ЗначениеВыбора) = Тип("СправочникСсылка.ХранилищеДополнительнойИнформации") Тогда
		СписокКнопокФайлов = Новый СписокЗначений;
		СписокКнопокФайлов.Добавить(ЭлементыФормы.ДействияФормы.Кнопки.Файлы);
		СписокКнопокФайлов.Добавить(ЭлементыФормы.ДействияФормы.Кнопки.Подменю.Кнопки.Файлы);
		РаботаСФайлами.ПолучитьКартинкуКнопкиОткрытияФайлов(Ссылка, СписокКнопокФайлов);
	КонецЕсли;
КонецПроцедуры


Процедура ЗавершенПриИзменении(Элемент)
	Если Элемент.Значение тогда
		ТекстВопроса = "Вы уверены что сделку надо завершить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет, Метаданные().Имя);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
		ЭтотОбъект.КтоЗавершил=глЗначениеПеременной("глТекущийПользователь");
		ЭтотОбъект.ЗавершенПринудительно=Истина;
		ЗавершениеСделкиЛида();
	КонецЕсли;
КонецПроцедуры


Процедура СделкаПроваленаПриИзменении(Элемент)
	Если Элемент.Значение тогда
		ТекстВопроса = "Вы уверены что сделку надо завершить?";
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет, Метаданные().Имя);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			 Элемент.Значение=Ложь;
			Возврат;
		КонецЕсли;
		ЭтотОбъект.КтоЗавершил=глЗначениеПеременной("глТекущийПользователь");
		ЭтотОбъект.Завершен=Истина;
		ЭтотОбъект.ЗавершенПринудительно=Истина;
		ЗавершениеСделкиЛида();
		ЭтотОбъект.Записать();
	КонецЕсли;
КонецПроцедуры

Процедура ЗавершениеСделкиЛида()
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗадачиПользователя.Ссылка
		|ИЗ
		|	Задача.ЗадачиПользователя КАК ЗадачиПользователя
		|ГДЕ
		|	ЗадачиПользователя.ПометкаУдаления = ЛОЖЬ
		|	И ЗадачиПользователя.Выполнена = ЛОЖЬ
		|	И ЗадачиПользователя.БизнесПроцесс.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		Если не РезультатЗапроса.Пустой() тогда
			ТекстВопроса = "По этой сделке есть не закрытые задачи. Пометить их на удаление?";
			Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет, Метаданные().Имя);
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				Возврат;
			КонецЕсли;			
			ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				мо=ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
				мо.ПометкаУдаления=Истина;
				мо.Записать();
			КонецЦикла;
		КонецЕсли;	
КонецПроцедуры
