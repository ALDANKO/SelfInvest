// объект для поиска данных

Процедура ПриОткрытии()
	НачПериодаСрокаЗадач = НачалоДня(ТекущаяДата());
	КонПериодаСрокаЗадач = КонецДня(ТекущаяДата());
 	УстановитьФильтры();	
	ЭлементыФормы.ФлажокЗадачиПоОбъекту.Заголовок="По лиду";
	ЭлементыФормы.ФлажокЗадачиНеВыполненные.Заголовок="Не закрытые задачи";
	ЭлементыФормы.ФлажокЗадачиНеВыполненные.Значение=Истина;
	ЭлементыФормы.ФлажокСобытияПоОбъекту.Заголовок="По лиду";	
	ЭлементыФормы.ФлажокСобытияПоОбъекту.Значение=Ложь;
	
	ЭлементыФормы.НачСобытия.Значение=НачалоНедели(ТекущаяДата()-7*24*3600);
	ЭлементыФормы.КонСобытия.Значение=КонецДня(ТекущаяДата());
	ЭлементыФормы.КоманднаяПанельЛиды.Кнопки.ОтобратьДляСделок.Пометка=Ложь;
КонецПроцедуры

Процедура УстановитьФильтры()
	Лиды.Отбор.ОсновнойВидДеятельности.Установить(Справочники.ВидыДеятельностиКонтрагентов.НайтиПоКоду("000000003"));
	Лиды.Отбор.ЭтоГРуппа.Установить(Ложь);
	Лиды.Порядок.Установить("Наименование Возр"); 
	ЭлементыФормы.Лиды.НастройкаОтбора.ОсновнойВидДеятельности.Доступность=Ложь;
	ЭлементыФормы.Лиды.ИерархическийПросмотр=Ложь;
	
	Работодатели.Отбор.ОсновнойВидДеятельности.Установить(Справочники.ВидыДеятельностиКонтрагентов.НайтиПоКоду("000000002"));
	Работодатели.Отбор.ЭтоГРуппа.Установить(Ложь);
	Работодатели.Порядок.Установить("Наименование Возр"); 
	ЭлементыФормы.Работодатели.НастройкаОтбора.ОсновнойВидДеятельности.Доступность=Ложь;
	ЭлементыФормы.Работодатели.ИерархическийПросмотр=Ложь;
	
	ЭлементыФормы.Задачи.ОтображениеЗадач=РежимСпискаЗадач.ПоИсполнителю;
	ЭлементыФормы.КоманднаяПанельЗадач.Кнопки.Исполнитель.Кнопки.ЗадачиДляВсех.Пометка=Ложь;
	ЭлементыФормы.КоманднаяПанельЗадач.Кнопки.Исполнитель.Кнопки.ЗадачиДляМеня.Пометка=Истина;
	ЭлементыФормы.КоманднаяПанельЗадач.Кнопки.Исполнитель.Кнопки.ЗадачиДляОтдела.Пометка=Ложь;
	
	События.Отбор.Ответственный.Установить(глЗначениеПеременной("глТекущийПользователь"));
	ЭлементыФормы.КоманднаяПанельСобытий.Кнопки.Ответственный.Кнопки.СобытияМои.Пометка=Истина;
	ЭлементыФормы.КоманднаяПанельСобытий.Кнопки.Ответственный.Кнопки.СобытияДляВсех.Пометка=Ложь;
	ЭлементыФормы.КоманднаяПанельСобытий.Кнопки.Ответственный.Кнопки.СобытияОтдела.Пометка=Ложь;
	
	События.Порядок.Установить("НачалоСобытия Возр"); 
	ЭлементыФормы.СостоянияСобытий.Значение=Перечисления.СостоянияСобытий.Запланировано;
	События.Отбор.СостояниеСобытия.Установить(ЭлементыФормы.СостоянияСобытий.Значение);
	События.Отбор.Контрагент.Использование = Истина;
	События.Отбор.Контрагент.Значение=Справочники.Контрагенты.ПустаяСсылка();
	События.Отбор.Контрагент.ВидСравнения=ВидСравнения.НеРавно;
	
	ЭлементыФормы.События.НастройкаОтбора.Найти("СостояниеСобытия").Доступность=Ложь;
	

	Если не ЗначениеЗаполнено(ЭлементыФормы.Сезон.Значение) тогда
		Лиды.Отбор.Сезон.Использование = Ложь;
	Иначе
		Лиды.Отбор.Сезон.Установить(ЭлементыФормы.Сезон.Значение);
	КонецЕсли;
		

	
КонецПроцедуры

//Процедура ВыбПериодНажатие1(Элемент)
//	//НастройкаПериода = Новый НастройкаПериода;
//	//НастройкаПериода.УстановитьПериод(НачПериода, ?(КонПериода='0001-01-01', КонПериода, КонецДня(КонПериода)));
//	//НастройкаПериода.РедактироватьКакИнтервал = Истина;
//	//НастройкаПериода.РедактироватьКакПериод = Истина;
//	//НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
//	//Если НастройкаПериода.Редактировать() Тогда
//	//	НачПериода = НастройкаПериода.ПолучитьДатуНачала();
//	//	КонПериода = НастройкаПериода.ПолучитьДатуОкончания();
//	//КонецЕсли;
//КонецПроцедуры

//Процедура КонПериодаПриИзменении(Элемент)
//	//НачПериода = НачалоДня(КонПериода);
//КонецПроцедуры

Процедура СобытияПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	    //***AL 180925 ### 
	Если ОформлениеСтроки.Ячейки.Найти("СостояниеСобытия")<>Неопределено тогда 
		ОформлениеСтроки.Ячейки.СостояниеСобытия.ОтображатьФлажок   = Ложь;
		ОформлениеСтроки.Ячейки.СостояниеСобытия.ОтображатьКартинку = Истина;
		ОформлениеСтроки.Ячейки.СостояниеСобытия.ОтображатьТекст    = Ложь;
		Если ДанныеСтроки.СостояниеСобытия = Перечисления.СостоянияСобытий.Завершено Тогда
			ОформлениеСтроки.Ячейки.СостояниеСобытия.ИндексКартинки = 4;
		ИначеЕсли ДанныеСтроки.СостояниеСобытия = Перечисления.СостоянияСобытий.Запланировано Тогда
			ОформлениеСтроки.Ячейки.СостояниеСобытия.ИндексКартинки = 6;
		ИначеЕсли ДанныеСтроки.СостояниеСобытия = Перечисления.СостоянияСобытий.Отменено Тогда
			ОформлениеСтроки.Ячейки.СостояниеСобытия.ИндексКартинки = 5;
		КонецЕсли; 
	КонецЕсли; //***AL 180925 ### 
	
	Если ОформлениеСтроки.Ячейки.Найти("Важность")<>Неопределено тогда 
		ОформлениеСтроки.Ячейки.Важность.ОтображатьФлажок   = Ложь;
		ОформлениеСтроки.Ячейки.Важность.ОтображатьКартинку = Истина;
		ОформлениеСтроки.Ячейки.Важность.ОтображатьТекст    = Ложь;
		Если ДанныеСтроки.Важность = Перечисления.Важность.Высокая Тогда
			ОформлениеСтроки.Ячейки.Важность.ИндексКартинки = 0;
		ИначеЕсли ДанныеСтроки.Важность = Перечисления.Важность.Низкая Тогда
			ОформлениеСтроки.Ячейки.Важность.ИндексКартинки = 1;
		КонецЕсли; 
	КонецЕсли; //***AL 180925 ### 
	Если ОформлениеСтроки.Ячейки.Найти("ВидСобытия")<>Неопределено тогда 
		ОформлениеСтроки.Ячейки.ВидСобытия.ОтображатьФлажок   = Ложь;
		ОформлениеСтроки.Ячейки.ВидСобытия.ОтображатьКартинку = Истина;
		ОформлениеСтроки.Ячейки.ВидСобытия.ОтображатьТекст    = Ложь;
		
		//ОформлениеСтроки.Ячейки.ВидСобытия.ИндексКартинки     = УправлениеКонтактами.ОпределитьИндексКартинкиВидаСобытия(ДанныеСтроки.ВидСобытия,ДанныеСтроки.ВидСобытия);
		Если ДанныеСтроки.ВидСобытия=Перечисления.ВидыСобытий.ЛичнаяВстреча Тогда
			ОформлениеСтроки.Ячейки.ВидСобытия.ИндексКартинки = 2;
		ИначеЕсли ДанныеСтроки.ВидСобытия=Перечисления.ВидыСобытий.ПочтовоеПисьмо Тогда 
			ОформлениеСтроки.Ячейки.ВидСобытия.ИндексКартинки = 4;
		ИначеЕсли ДанныеСтроки.ВидСобытия=Перечисления.ВидыСобытий.ТелефонныйЗвонок Тогда 
			ОформлениеСтроки.Ячейки.ВидСобытия.ИндексКартинки = 1;
		ИначеЕсли ДанныеСтроки.ВидСобытия=Перечисления.ВидыСобытий.ЭлектронноеПисьмо Тогда 
			ОформлениеСтроки.Ячейки.ВидСобытия.ИндексКартинки = 3;
		Иначе
			ОформлениеСтроки.Ячейки.ВидСобытия.ИндексКартинки = 8;
		КонецЕсли; 
		
	КонецЕсли; //***AL 180925 ### 
	Если ОформлениеСтроки.Ячейки.Найти("ТипСобытия")<>Неопределено тогда 
		ОформлениеСтроки.Ячейки.ТипСобытия.ОтображатьФлажок   = Ложь;
		ОформлениеСтроки.Ячейки.ТипСобытия.ОтображатьКартинку = Истина;
		ОформлениеСтроки.Ячейки.ТипСобытия.ОтображатьТекст    = Ложь;
		Если ДанныеСтроки.ТипСобытия=Перечисления.ВходящееИсходящееСобытие.Входящее Тогда
			ОформлениеСтроки.Ячейки.ТипСобытия.ИндексКартинки = 1;
		Иначе
			ОформлениеСтроки.Ячейки.ТипСобытия.ИндексКартинки = 0;
		КонецЕсли; 
	КонецЕсли; //***AL 180925 ### 
	
КонецПроцедуры

Процедура ЗадачиПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
	Если ОформлениеСтроки.Ячейки.Найти("Выполнена")<>Неопределено тогда 
		ОформлениеСтроки.Ячейки.Выполнена.ОтображатьФлажок   = Ложь;
		ОформлениеСтроки.Ячейки.Выполнена.ОтображатьКартинку = Истина;
		ОформлениеСтроки.Ячейки.Выполнена.ОтображатьТекст    = Ложь;
		Если ДанныеСтроки.Выполнена Тогда
			ОформлениеСтроки.Ячейки.Выполнена.ИндексКартинки = 3;
		ИначеЕсли 	ДанныеСтроки.ПометкаУдаления тогда
			ОформлениеСтроки.Ячейки.Выполнена.ИндексКартинки = 4;
		Иначе
			ОформлениеСтроки.Ячейки.Выполнена.ИндексКартинки = 0;
		КонецЕсли; 
		
	КонецЕсли; //***AL 180925 ### 
КонецПроцедуры

Процедура ЛидыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа)
	мЛид=Справочники.Контрагенты.СоздатьЭлемент();
	мЛид.Родитель=Справочники.Контрагенты.НайтиПоКоду("000000002");
	мЛид.ДатаВвода=ТекущаяДата();
	мЛид.СтатусЛида=Перечисления.СтатусСостоянияЛида.НеОбработан;
	мф=мЛид.ПолучитьФорму("ФормаЭлемента",ЭтаФорма);
	мф.ОткрытьМодально();
	Отказ=Истина;
КонецПроцедуры

Процедура РаботодателиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа)
	мРд=Справочники.Контрагенты.СоздатьЭлемент();
	мРд.Родитель=Справочники.Контрагенты.НайтиПоКоду("000000001");
	мРд.ДатаВвода=ТекущаяДата();
	мф=мРд.ПолучитьФорму("ФормаЭлемента",ЭтаФорма);
	мф.ОткрытьМодально();
	Отказ=Истина;
КонецПроцедуры

Процедура ДействияФормыКартаМаршрута(Кнопка)
	ТекущиеДанные = ЭлементыФормы.Задачи.ТекущиеДанные;
	Если Не ТекущиеДанные = Неопределено Тогда
		Если ЗначениеЗаполнено(ТекущиеДанные.Ссылка.БизнесПроцесс) Тогда
			РаботаСБизнесПроцессами.ОткрытьКартумаршрута(ТекущиеДанные.Ссылка.БизнесПроцесс);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры 

//Процедура ДействияФормыОтображениеВсехЗадач(Кнопка)
//	Если ЭлементыФормы.Задачи.ОтображениеЗадач=РежимСпискаЗадач.ВсеЗадачи тогда
//		ЭлементыФормы.Задачи.ОтображениеЗадач=РежимСпискаЗадач.ПоИсполнителю;
//		ЭлементыФормы.КоманднаяПанельЗадач.Кнопки.ОтображениеВсехЗадач.Текст="Мои задачи";
//	Иначе
//		ЭлементыФормы.Задачи.ОтображениеЗадач=РежимСпискаЗадач.ВсеЗадачи;
//		ЭлементыФормы.КоманднаяПанельЗадач.Кнопки.ОтображениеВсехЗадач.Текст="Все задачи";
//	КонецЕсли;	
//КонецПроцедуры

Процедура КоманднаяПанельЗадачЗадачиДляВсех(Кнопка)
		Задачи.Отбор.Подразделение.Использование= Ложь;
		ЭлементыФормы.Задачи.ОтображениеЗадач=РежимСпискаЗадач.ВсеЗадачи;
		ФильтрЗадачи();
		ЭлементыФормы.КоманднаяПанельЗадач.Кнопки.Исполнитель.Кнопки.ЗадачиДляВсех.Пометка=Истина;
		ЭлементыФормы.КоманднаяПанельЗадач.Кнопки.Исполнитель.Кнопки.ЗадачиДляМеня.Пометка=Ложь;
		ЭлементыФормы.КоманднаяПанельЗадач.Кнопки.Исполнитель.Кнопки.ЗадачиДляОтдела.Пометка=Ложь;
КонецПроцедуры

Процедура КоманднаяПанельЗадачЗадачиДляМеня(Кнопка)
		Задачи.Отбор.Подразделение.Использование= Ложь;
		ЭлементыФормы.Задачи.ОтображениеЗадач=РежимСпискаЗадач.ПоИсполнителю;
		ФильтрЗадачи();
		ЭлементыФормы.КоманднаяПанельЗадач.Кнопки.Исполнитель.Кнопки.ЗадачиДляВсех.Пометка=Ложь;
		ЭлементыФормы.КоманднаяПанельЗадач.Кнопки.Исполнитель.Кнопки.ЗадачиДляМеня.Пометка=Истина;
		ЭлементыФормы.КоманднаяПанельЗадач.Кнопки.Исполнитель.Кнопки.ЗадачиДляОтдела.Пометка=Ложь;
КонецПроцедуры

Процедура КоманднаяПанельЗадачЗадачиДляОтдела(Кнопка)
		ЭлементыФормы.Задачи.ОтображениеЗадач=РежимСпискаЗадач.ВсеЗадачи;
		Задачи.Отбор.Подразделение.Установить(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновноеПодразделение"));
		ФильтрЗадачи();
		ЭлементыФормы.КоманднаяПанельЗадач.Кнопки.Исполнитель.Кнопки.ЗадачиДляВсех.Пометка=Ложь;
		ЭлементыФормы.КоманднаяПанельЗадач.Кнопки.Исполнитель.Кнопки.ЗадачиДляМеня.Пометка=Ложь;
		ЭлементыФормы.КоманднаяПанельЗадач.Кнопки.Исполнитель.Кнопки.ЗадачиДляОтдела.Пометка=Истина;
КонецПроцедуры

Процедура ВыбПериодНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериодаСрокаЗадач, ?(КонПериодаСрокаЗадач='0001-01-01', КонПериодаСрокаЗадач, КонецДня(КонПериодаСрокаЗадач)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериодаСрокаЗадач = НастройкаПериода.ПолучитьДатуНачала();
		КонПериодаСрокаЗадач = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
КонецПроцедуры

Процедура ВыбПериодСрокаЗадачНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачПериодаСрокаЗадач, ?(КонПериодаСрокаЗадач='0001-01-01', КонПериодаСрокаЗадач, КонецДня(КонПериодаСрокаЗадач)));
	Если НастройкаПериода.Редактировать() Тогда
		НачПериодаСрокаЗадач = НастройкаПериода.ПолучитьДатуНачала();
		КонПериодаСрокаЗадач = НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
	ЭлементыФормы.ФлажокСрокИсполненияЗадач.Значение=Истина;
	//ЗадачиПоСроку(ЭлементыФормы.ФлажокСрокИсполненияЗадач.Значение);
	ФильтрЗадачи();
КонецПроцедуры

Процедура КонПериодаСрокаЗадачПриИзменении(Элемент)
 	Если КонПериодаСрокаЗадач< НачПериодаСрокаЗадач тогда
		НачПериодаСрокаЗадач = НачалоДня(КонПериодаСрокаЗадач);
	КонецЕсли;
	ФильтрЗадачи();
КонецПроцедуры

Процедура ФлажокСрокИсполненияЗадачПриИзменении(Элемент)
	ФильтрЗадачи();
КонецПроцедуры

Процедура ЗадачиПоСроку(ЗначФл)
	Если ЗначФл тогда
		Задачи.отбор.СрокИсполнения.Использование=Истина;
		Задачи.отбор.СрокИсполнения.ВидСравнения=ВидСравнения.ИнтервалВключаяГраницы;
		Задачи.отбор.СрокИсполнения.ЗначениеС=НачалоДня(НачПериодаСрокаЗадач);
		Задачи.отбор.СрокИсполнения.ЗначениеПО=НачалоДня(КонПериодаСрокаЗадач);
	ИНаче
		Задачи.отбор.СрокИсполнения.Использование=Ложь;
	КонецЕсли;
КонецПроцедуры

Процедура ОбновлениеОтображения()

КонецПроцедуры

Процедура ФлажокЗадачиПоОбъектуПриИзменении(Элемент)
	Задачи.отбор.Объект.Использование=Ложь;
	Задачи.отбор.БизнесПроцесс.Использование=Ложь;
	//***AL 181015 ### 
	ЭлементыФормы.Задачи.ОтображениеЗадач=РежимСпискаЗадач.ВсеЗадачи;
	ФильтрЗадачи();

	Если ЭлементыФормы.ПанельЛевая.ТекущаяСтраница=ЭлементыФормы.ПанельЛевая.Страницы.Лиды тогда
		ЭлементыФормы.ФлажокЗадачиПоОбъекту.Заголовок="По лиду";
		Если ЭлементыФормы.ФлажокЗадачиПоОбъекту.Значение тогда
			Задачи.отбор.Объект.Значение=ЭлементыФормы.Лиды.ТекущаяСтрока.ссылка;
			Задачи.отбор.Объект.Использование=Истина;
		ИНаче
			Задачи.отбор.Объект.Использование=Ложь;
		КонецЕсли;
	ИначеЕсли ЭлементыФормы.ПанельЛевая.ТекущаяСтраница=ЭлементыФормы.ПанельЛевая.Страницы.Работодатели тогда
		ЭлементыФормы.ФлажокЗадачиПоОбъекту.Заголовок="По Работодателю";
		Если ЭлементыФормы.ФлажокЗадачиПоОбъекту.Значение тогда
			Задачи.отбор.Объект.Значение=ЭлементыФормы.Работодатели.ТекущаяСтрока.ссылка;
			Задачи.отбор.Объект.Использование=Истина;
		ИНаче
			Задачи.отбор.Объект.Использование=Ложь;
		КонецЕсли;
	ИначеЕсли ЭлементыФормы.ПанельЛевая.ТекущаяСтраница=ЭлементыФормы.ПанельЛевая.Страницы.СделкиЛидов тогда
		ЭлементыФормы.ФлажокЗадачиПоОбъекту.Заголовок="По сделке лида";
		Если ЭлементыФормы.ФлажокЗадачиПоОбъекту.Значение тогда
		Задачи.отбор.БизнесПроцесс.ВидСравнения=ВидСравнения.Равно;
		Задачи.отбор.БизнесПроцесс.Значение=ЭлементыФормы.СделкиЛидов.ТекущаяСтрока.ссылка;
		Задачи.отбор.БизнесПроцесс.Использование=Истина;
		ИНаче
			Задачи.отбор.БизнесПроцесс.Использование=Ложь;
		КонецЕсли;
	ИначеЕсли ЭлементыФормы.ПанельЛевая.ТекущаяСтраница=ЭлементыФормы.ПанельЛевая.Страницы.ЗаявкиКандидатов тогда
		ЭлементыФормы.ФлажокЗадачиПоОбъекту.Заголовок="По заявке кандидата";
		Если ЭлементыФормы.ФлажокЗадачиПоОбъекту.Значение тогда
		Задачи.отбор.Объект.Значение=ЭлементыФормы.ЗаявкиКандидатов.ТекущаяСтрока.ссылка;
		Задачи.отбор.Объект.Использование=Истина;
		ИНаче
			Задачи.отбор.Объект.Использование=Ложь;
		КонецЕсли;
	Иначе 
		ЭлементыФормы.ФлажокЗадачиПоОбъекту.Видимость=Ложь;
	КонецЕсли;		
КонецПроцедуры

Процедура ПанельЛеваяПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Задачи.отбор.Объект.Использование=Ложь;
	Задачи.отбор.БизнесПроцесс.Использование=Ложь;
	ЭлементыФормы.ФлажокЗадачиПоОбъекту.Значение=Ложь;
	ЭлементыФормы.ФлажокСобытияПоОбъекту.Значение=Ложь;
	Если ЭлементыФормы.ПанельЛевая.ТекущаяСтраница=ЭлементыФормы.ПанельЛевая.Страницы.Лиды тогда
		ЭлементыФормы.ФлажокЗадачиПоОбъекту.Заголовок="По лиду";
		ЭлементыФормы.ФлажокСобытияПоОбъекту.Заголовок="По лиду";
	ИначеЕсли ЭлементыФормы.ПанельЛевая.ТекущаяСтраница=ЭлементыФормы.ПанельЛевая.Страницы.Работодатели тогда
		ЭлементыФормы.ФлажокЗадачиПоОбъекту.Заголовок="По Работодателю";
		ЭлементыФормы.ФлажокСобытияПоОбъекту.Заголовок="По Работодателю";
	ИначеЕсли ЭлементыФормы.ПанельЛевая.ТекущаяСтраница=ЭлементыФормы.ПанельЛевая.Страницы.СделкиЛидов тогда
		ЭлементыФормы.ФлажокЗадачиПоОбъекту.Заголовок="По сделке лида";
		ЭлементыФормы.ФлажокСобытияПоОбъекту.Заголовок="По лиду сделки";
	ИначеЕсли ЭлементыФормы.ПанельЛевая.ТекущаяСтраница=ЭлементыФормы.ПанельЛевая.Страницы.ЗаявкиКандидатов тогда
		ЭлементыФормы.ФлажокЗадачиПоОбъекту.Заголовок="По заявке кандидата";
		ЭлементыФормы.ФлажокСобытияПоОбъекту.Заголовок="По заявке кандидата";
	//Иначе 
	//	ЭлементыФормы.ФлажокЗадачиПоОбъекту.Видимость=Ложь;
	КонецЕсли;	
КонецПроцедуры

Процедура ФлажокЗадачиНеВыполненныеПриИзменении(Элемент)
	ФильтрЗадачи();
КонецПроцедуры

Процедура НачПериодаСрокаЗадачПриИзменении(Элемент)
	ФильтрЗадачи();
КонецПроцедуры

Процедура КоманднаяПанельСобытийСобытияДляВсех(Кнопка)
	События.Отбор.Ответственный.Использование=Ложь;
	ЭлементыФормы.КоманднаяПанельСобытий.Кнопки.Ответственный.Кнопки.СобытияМои.Пометка=Ложь;
	ЭлементыФормы.КоманднаяПанельСобытий.Кнопки.Ответственный.Кнопки.СобытияДляВсех.Пометка=Истина;
	ЭлементыФормы.КоманднаяПанельСобытий.Кнопки.Ответственный.Кнопки.СобытияОтдела.Пометка=Ложь;
КонецПроцедуры

Процедура КоманднаяПанельСобытийСобытияОтдела(Кнопка)
	МП=УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновноеПодразделение");
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиПользователей.Пользователь КАК Юзер
		|ИЗ
		|	РегистрСведений.НастройкиПользователей КАК НастройкиПользователей
		|ГДЕ
		|	НастройкиПользователей.Настройка = &Настройка
		|	И НастройкиПользователей.Значение = &Подразделение";
	
	Запрос.УстановитьПараметр("Подразделение", МП);
	Запрос.УстановитьПараметр("Настройка",ПланыВидовХарактеристик.НастройкиПользователей.НайтиПоКоду("000000005"));//*** Основное подразделение
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	сз=новый СписокЗначений;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		сз.Добавить(ВыборкаДетальныеЗаписи.Юзер);
	КонецЦикла;
	События.Отбор.Ответственный.Использование	= Истина;	
	События.Отбор.Ответственный.ВидСравнения	= ВидСравнения.ВСписке;
	События.Отбор.Ответственный.Значение		= сз;
	
	ЭлементыФормы.КоманднаяПанельСобытий.Кнопки.Ответственный.Кнопки.СобытияМои.Пометка=Ложь;
	ЭлементыФормы.КоманднаяПанельСобытий.Кнопки.Ответственный.Кнопки.СобытияДляВсех.Пометка=Ложь;
	ЭлементыФормы.КоманднаяПанельСобытий.Кнопки.Ответственный.Кнопки.СобытияОтдела.Пометка=Истина;
КонецПроцедуры

Процедура КоманднаяПанельСобытийСобытияМои(Кнопка)
	
	//События.Отбор.Подразделение.Установить(УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновноеПодразделение"));
	События.Отбор.Ответственный.Установить(глЗначениеПеременной("глТекущийПользователь"));
	ЭлементыФормы.КоманднаяПанельСобытий.Кнопки.Ответственный.Кнопки.СобытияМои.Пометка=Истина;
	ЭлементыФормы.КоманднаяПанельСобытий.Кнопки.Ответственный.Кнопки.СобытияДляВсех.Пометка=Ложь;
	ЭлементыФормы.КоманднаяПанельСобытий.Кнопки.Ответственный.Кнопки.СобытияОтдела.Пометка=Ложь;
КонецПроцедуры

Процедура ФлажокСобытияПоОбъектуПриИзменении(Элемент)
	Если не Элемент.Значение  тогда
		События.Отбор.Контрагент.Использование = Ложь;
		События.Отбор.Контрагент.Использование = Истина;
		События.Отбор.Контрагент.Значение=Справочники.Контрагенты.ПустаяСсылка();
		События.Отбор.Контрагент.ВидСравнения=ВидСравнения.НеРавно;
	Иначе
		Если ЭлементыФормы.ПанельЛевая.ТекущаяСтраница=ЭлементыФормы.ПанельЛевая.Страницы.Лиды 
			И ЭлементыФормы.ФлажокСобытияПоОбъекту.Значение  тогда
			ЭлементыФормы.ФлажокСобытияПоОбъекту.Заголовок="По лиду";
			События.отбор.Контрагент.Значение=ЭлементыФормы.Лиды.ТекущаяСтрока.ссылка;
			События.отбор.Контрагент.Использование=Истина;
		ИначеЕсли ЭлементыФормы.ПанельЛевая.ТекущаяСтраница=ЭлементыФормы.ПанельЛевая.Страницы.Работодатели 
			И ЭлементыФормы.ФлажокСобытияПоОбъекту.Значение тогда
			ЭлементыФормы.ФлажокСобытияПоОбъекту.Заголовок="По Работодателю";
			События.отбор.Контрагент.Значение=ЭлементыФормы.Работодатели.ТекущаяСтрока.ссылка;
			События.отбор.Контрагент.Использование=Истина;
		ИначеЕсли ЭлементыФормы.ПанельЛевая.ТекущаяСтраница=ЭлементыФормы.ПанельЛевая.Страницы.СделкиЛидов 
			И ЭлементыФормы.ФлажокСобытияПоОбъекту.Значение тогда
			ЭлементыФормы.ФлажокСобытияПоОбъекту.Заголовок="По лиду сделки";
			События.отбор.Контрагент.Значение=ЭлементыФормы.СделкиЛидов.ТекущаяСтрока.Лид.Ссылка;
			События.отбор.Контрагент.Использование=Истина;
		ИначеЕсли ЭлементыФормы.ПанельЛевая.ТекущаяСтраница=ЭлементыФормы.ПанельЛевая.Страницы.ЗаявкиКандидатов 
			И ЭлементыФормы.ФлажокСобытияПоОбъекту.Значение тогда
			ЭлементыФормы.ФлажокСобытияПоОбъекту.Заголовок="По кандидату";
			События.отбор.Основание.Значение=ЭлементыФормы.ЗаявкиКандидатов.ТекущаяСтрока.Ссылка;
			События.отбор.Основание.Использование=Истина;
		Иначе 
			События.Отбор.Контрагент.Использование = Ложь;
			События.Отбор.Контрагент.Использование = Истина;
			События.Отбор.Контрагент.Значение=Справочники.Контрагенты.ПустаяСсылка();
			События.Отбор.Контрагент.ВидСравнения=ВидСравнения.НеРавно;
		КонецЕсли;		
	КонецЕсли;		
КонецПроцедуры

Процедура КнопкаВыбораПериодаСобытияНажатие(Элемент)
	НастройкаПериода = Новый НастройкаПериода;
	НастройкаПериода.РедактироватьКакИнтервал = Истина;
	НастройкаПериода.РедактироватьКакПериод = Истина;
	НастройкаПериода.ВариантНастройки = ВариантНастройкиПериода.Период;
	НастройкаПериода.УстановитьПериод(НачСобытия, ?(КонСобытия='0001-01-01', КонСобытия, КонецДня(КонСобытия)));
	Если НастройкаПериода.Редактировать() Тогда
		НачСобытия= НастройкаПериода.ПолучитьДатуНачала();
		КонСобытия= НастройкаПериода.ПолучитьДатуОкончания();
	КонецЕсли;
	ОтобратьПоДатамСобытия();
КонецПроцедуры

Процедура ЗначениеОтбораСпискаКонтрагентовПриИзменении(Элемент)
	Если Элемент=Неопределено или ПустаяСтрока(Элемент.Значение) тогда
		Лиды.Отбор.Ссылка.Использование = Ложь;
	Иначе	
	c_Поиска=СокрЛП(Элемент.Значение);
	СпКА = новый СписокЗначений;
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Контрагенты.Ссылка
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.Родитель = &Родитель
		|	И Контрагенты.Наименование ПОДОБНО &СтрокаПоиска";
		
		Запрос.УстановитьПараметр("Родитель", Справочники.Контрагенты.НайтиПоКоду("000000002"));
		Запрос.УстановитьПараметр("СтрокаПоиска", "%"+c_Поиска+"%");
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СпКА.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЦикла;
		Лиды.Отбор.Ссылка.ВидСравнения	= ВидСравнения.ВСписке;
		Лиды.Отбор.Ссылка.Значение      = СпКА;
		Лиды.Отбор.Ссылка.Использование = Истина;
	КонецЕсли;
КонецПроцедуры

Процедура ПолеТелефонаПриИзменении(Элемент)
	Если Элемент=Неопределено или ПустаяСтрока(Элемент.Значение) тогда
		Лиды.Отбор.Ссылка.Использование = Ложь;
		ЭлементыФормы.НадписьПолеТелефона.Заголовок="Телефон/e-mail:";		
	Иначе	
		c_Поиска=СокрЛП(Элемент.Значение);
		ЭтоТелефон=ДополнительныеФункции.ЭтоНомерТелефона(c_Поиска);
		Если ЭтоТелефон тогда
			СтрокаПоиска=Э_ТелефонияBinotel.Э_ПреобразоватьНомерТелефонаБезРазделителей(c_Поиска);			
			ЭлементыФормы.НадписьПолеТелефона.Заголовок="Телефон:";
		Иначе
			СтрокаПоиска=СокрЛП(Элемент.Значение);
			ЭлементыФормы.НадписьПолеТелефона.Заголовок="E-mail:";
		КонецЕсли;
		
		СпКА = новый СписокЗначений;
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтактнаяИнформация.Объект КАК Ссылка
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Тип = &ТипКА 
		|	И ТИПЗНАЧЕНИЯ(КонтактнаяИнформация.Объект) = ТИП(Справочник.Контрагенты) И КонтактнаяИнформация.Объект.Родитель=&Группа
		|	И КонтактнаяИнформация."+?(ЭтоТелефон,"CRM_НомерТелефона","Представление")+" ПОДОБНО &СтрокаПоиска";
		
		Запрос.УстановитьПараметр("ТипКА", ?(ЭтоТелефон,Перечисления.ТипыКонтактнойИнформации.Телефон,
		Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты));
		Запрос.УстановитьПараметр("СтрокаПоиска", "%"+СокрЛП(СтрокаПоиска)+"%");
		Запрос.УстановитьПараметр("Группа",Справочники.Контрагенты.НайтиПоКоду("000000002"));
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СпКА.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
			//ЭлементыФормы.СправочникСписок.ИерархическийПросмотр=Истина;
		КонецЦикла;
		Лиды.Отбор.Ссылка.ВидСравнения	= ВидСравнения.ВСписке;
		Лиды.Отбор.Ссылка.Значение      = СпКА;
		Лиды.Отбор.Ссылка.Использование = Истина;
	КонецЕсли;
КонецПроцедуры


Процедура ЗначениеОтбораСпискаКонтрагентов1ПриИзменении(Элемент)
	Если Элемент=Неопределено или ПустаяСтрока(Элемент.Значение) тогда
		СделкиЛидов.Отбор.Ссылка.Использование = Ложь;
	Иначе	
	c_Поиска=СокрЛП(Элемент.Значение);
	СпКА = новый СписокЗначений;
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СделкаЛида.Ссылка
		|ИЗ
		|	БизнесПроцесс.СделкаЛида КАК СделкаЛида
		|ГДЕ
		|	СделкаЛида.Лид.Наименование ПОДОБНО &СтрокаПоиска";
		
		Запрос.УстановитьПараметр("СтрокаПоиска", "%"+c_Поиска+"%");
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СпКА.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЦикла;
		СделкиЛидов.Отбор.Ссылка.ВидСравнения	= ВидСравнения.ВСписке;
		СделкиЛидов.Отбор.Ссылка.Значение      = СпКА;
		СделкиЛидов.Отбор.Ссылка.Использование = Истина;
	КонецЕсли;
КонецПроцедуры


Процедура ПолеТелефона1ПриИзменении(Элемент)
	Если Элемент=Неопределено или ПустаяСтрока(Элемент.Значение) тогда
		СделкиЛидов.Отбор.Лид.Использование = Ложь;
		ЭлементыФормы.НадписьПолеТелефона1.Заголовок="Телефон/e-mail:";
	Иначе	
		c_Поиска=СокрЛП(Элемент.Значение);
		ЭтоТелефон=ДополнительныеФункции.ЭтоНомерТелефона(c_Поиска);
		Если ЭтоТелефон тогда
			СтрокаПоиска=Э_ТелефонияBinotel.Э_ПреобразоватьНомерТелефонаБезРазделителей(c_Поиска);			
			ЭлементыФормы.НадписьПолеТелефона1.Заголовок="Телефон";
		Иначе
			СтрокаПоиска=СокрЛП(Элемент.Значение);
			ЭлементыФормы.НадписьПолеТелефона1.Заголовок="E-mail";
		КонецЕсли;
		
		СпКА = новый СписокЗначений;
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтактнаяИнформация.Объект КАК Ссылка
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Тип = &ТипКА
		|	И ТИПЗНАЧЕНИЯ(КонтактнаяИнформация.Объект) = ТИП(Справочник.Контрагенты) И КонтактнаяИнформация.Объект.Родитель=&Группа
		|	И КонтактнаяИнформация."+?(ЭтоТелефон,"CRM_НомерТелефона","Представление")+" ПОДОБНО &СтрокаПоиска";
		
		Запрос.УстановитьПараметр("ТипКА", ?(ЭтоТелефон,Перечисления.ТипыКонтактнойИнформации.Телефон,
		Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты));
		Запрос.УстановитьПараметр("СтрокаПоиска", "%"+СокрЛП(СтрокаПоиска)+"%");
		Запрос.УстановитьПараметр("Группа",Справочники.Контрагенты.НайтиПоКоду("000000002"));
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СпКА.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЦикла;
		СделкиЛидов.Отбор.Лид.ВидСравнения	= ВидСравнения.ВСписке;
		СделкиЛидов.Отбор.Лид.Значение      = СпКА;
		СделкиЛидов.Отбор.Лид.Использование = Истина;
	КонецЕсли;
КонецПроцедуры


Процедура КлиентНажатие(Элемент)
КонецПроцедуры


Процедура СезонПриИзменении(Элемент)
	Если не ЗначениеЗаполнено(Элемент.Значение) тогда
		Лиды.Отбор.Сезон.Использование = Ложь;
	Иначе
		Лиды.Отбор.Сезон.Установить(Элемент.Значение);
	КонецЕсли;
КонецПроцедуры


Процедура Сезон1ПриИзменении(Элемент)
	Если не ЗначениеЗаполнено(Элемент.Значение) тогда
		Работодатели.Отбор.Сезон.Использование = Ложь;
	Иначе
		Работодатели.Отбор.Сезон.Установить(Элемент.Значение);
	КонецЕсли;
КонецПроцедуры


Процедура КоманднаяПанельСделокЛидовОткрытьЛид(Кнопка)
 	тс=ЭлементыФормы.СделкиЛидов.ТекущиеДанные;
	МО=тс.Ссылка.Лид.ПолучитьОбъект().ПолучитьФорму("ФормаЭлемента");
	МО.Открыть();
КонецПроцедуры


Процедура Сезон2ПриИзменении(Элемент)
	Если не ЗначениеЗаполнено(Элемент.Значение) тогда
		СделкиЛидов.Отбор.Сезон.Использование = Ложь;
	Иначе
		СделкиЛидов.Отбор.Сезон.Установить(Элемент.Значение);
	КонецЕсли;	
КонецПроцедуры


Процедура Сезон3ПриИзменении(Элемент)
	Если не ЗначениеЗаполнено(Элемент.Значение) тогда
		СделкиРаботодателей.Отбор.Сезон.Использование = Ложь;
	Иначе
		СделкиРаботодателей.Отбор.Сезон.Установить(Элемент.Значение);
	КонецЕсли;	
КонецПроцедуры


Процедура ЗначениеОтбораСпискаКонтрагентов3ПриИзменении(Элемент)
	Если Элемент=Неопределено или ПустаяСтрока(Элемент.Значение) тогда
		СделкиРаботодателей.Отбор.Контрагент.Использование = Ложь;
	Иначе	
	c_Поиска=СокрЛП(Элемент.Значение);
	СпКА = новый СписокЗначений;
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Контрагенты.Ссылка
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.Родитель = &Родитель
		|	И Контрагенты.Наименование ПОДОБНО &СтрокаПоиска";
		
		Запрос.УстановитьПараметр("Родитель", Справочники.Контрагенты.НайтиПоКоду("000000001"));
		Запрос.УстановитьПараметр("СтрокаПоиска", "%"+c_Поиска+"%");
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СпКА.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЦикла;
		СделкиРаботодателей.Отбор.Контрагент.ВидСравнения	= ВидСравнения.ВСписке;
		СделкиРаботодателей.Отбор.Контрагент.Значение      = СпКА;
		СделкиРаботодателей.Отбор.Контрагент.Использование = Истина;
	КонецЕсли;
КонецПроцедуры


Процедура ПолеТелефона3ПриИзменении(Элемент)
	Если Элемент=Неопределено или ПустаяСтрока(Элемент.Значение) тогда
		СделкиРаботодателей.Отбор.Контрагент.Использование = Ложь;
		ЭлементыФормы.НадписьПолеТелефона3.Заголовок="Телефон/e-mail:";
	Иначе	
		c_Поиска=СокрЛП(Элемент.Значение);
		ЭтоТелефон=ДополнительныеФункции.ЭтоНомерТелефона(c_Поиска);
		Если ЭтоТелефон тогда
			СтрокаПоиска=Э_ТелефонияBinotel.Э_ПреобразоватьНомерТелефонаБезРазделителей(c_Поиска);			
			ЭлементыФормы.НадписьПолеТелефона3.Заголовок="Телефон";
		Иначе
			СтрокаПоиска=СокрЛП(Элемент.Значение);
			ЭлементыФормы.НадписьПолеТелефона3.Заголовок="E-mail";
		КонецЕсли;
		
		СпКА = новый СписокЗначений;
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтактнаяИнформация.Объект КАК Ссылка
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Тип = &ТипКА
		|	И ТИПЗНАЧЕНИЯ(КонтактнаяИнформация.Объект) = ТИП(Справочник.Контрагенты) И КонтактнаяИнформация.Объект.Родитель=&Группа
		|	И КонтактнаяИнформация."+?(ЭтоТелефон,"CRM_НомерТелефона","Представление")+" ПОДОБНО &СтрокаПоиска";
		
		Запрос.УстановитьПараметр("ТипКА", ?(ЭтоТелефон,Перечисления.ТипыКонтактнойИнформации.Телефон,
		Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты));
		Запрос.УстановитьПараметр("СтрокаПоиска", "%"+СокрЛП(СтрокаПоиска)+"%");
		Запрос.УстановитьПараметр("Группа",Справочники.Контрагенты.НайтиПоКоду("000000001"));
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СпКА.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЦикла;
		СделкиРаботодателей.Отбор.Контрагент.ВидСравнения	= ВидСравнения.ВСписке;
		СделкиРаботодателей.Отбор.Контрагент.Значение      = СпКА;
		СделкиРаботодателей.Отбор.Контрагент.Использование = Истина;
	КонецЕсли;
КонецПроцедуры


Процедура ЗначениеОтбораСпискаКонтрагентов2ПриИзменении(Элемент)
	Если Элемент=Неопределено или ПустаяСтрока(Элемент.Значение) тогда
		Работодатели.Отбор.Ссылка.Использование = Ложь;
	Иначе	
	c_Поиска=СокрЛП(Элемент.Значение);
	СпКА = новый СписокЗначений;
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Контрагенты.Ссылка
		|ИЗ
		|	Справочник.Контрагенты КАК Контрагенты
		|ГДЕ
		|	Контрагенты.Родитель = &Родитель
		|	И Контрагенты.Наименование ПОДОБНО &СтрокаПоиска";
		
		Запрос.УстановитьПараметр("Родитель", Справочники.Контрагенты.НайтиПоКоду("000000001"));
		Запрос.УстановитьПараметр("СтрокаПоиска", "%"+c_Поиска+"%");
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СпКА.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
		КонецЦикла;
		Работодатели.Отбор.Ссылка.ВидСравнения	= ВидСравнения.ВСписке;
		Работодатели.Отбор.Ссылка.Значение      = СпКА;
		Работодатели.Отбор.Ссылка.Использование = Истина;
	КонецЕсли;
	
КонецПроцедуры


Процедура ПолеТелефона2ПриИзменении(Элемент)
	Если Элемент=Неопределено или ПустаяСтрока(Элемент.Значение) тогда
		Работодатели.Отбор.Ссылка.Использование = Ложь;
		ЭлементыФормы.НадписьПолеТелефона.Заголовок="Телефон/e-mail:";		
	Иначе	
		c_Поиска=СокрЛП(Элемент.Значение);
		ЭтоТелефон=ДополнительныеФункции.ЭтоНомерТелефона(c_Поиска);
		Если ЭтоТелефон тогда
			СтрокаПоиска=Э_ТелефонияBinotel.Э_ПреобразоватьНомерТелефонаБезРазделителей(c_Поиска);			
			ЭлементыФормы.НадписьПолеТелефона.Заголовок="Телефон:";
		Иначе
			СтрокаПоиска=СокрЛП(Элемент.Значение);
			ЭлементыФормы.НадписьПолеТелефона.Заголовок="E-mail:";
		КонецЕсли;
		
		СпКА = новый СписокЗначений;
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтактнаяИнформация.Объект КАК Ссылка
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Тип = &ТипКА 
		|	И ТИПЗНАЧЕНИЯ(КонтактнаяИнформация.Объект) = ТИП(Справочник.Контрагенты) И КонтактнаяИнформация.Объект.Родитель=&Группа
		|	И КонтактнаяИнформация."+?(ЭтоТелефон,"CRM_НомерТелефона","Представление")+" ПОДОБНО &СтрокаПоиска";
		
		Запрос.УстановитьПараметр("ТипКА", ?(ЭтоТелефон,Перечисления.ТипыКонтактнойИнформации.Телефон,
		Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты));
		Запрос.УстановитьПараметр("СтрокаПоиска", "%"+СокрЛП(СтрокаПоиска)+"%");
		Запрос.УстановитьПараметр("Группа",Справочники.Контрагенты.НайтиПоКоду("000000001"));
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СпКА.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
			//ЭлементыФормы.СправочникСписок.ИерархическийПросмотр=Истина;
		КонецЦикла;
		Работодатели.Отбор.Ссылка.ВидСравнения	= ВидСравнения.ВСписке;
		Работодатели.Отбор.Ссылка.Значение      = СпКА;
		Работодатели.Отбор.Ссылка.Использование = Истина;
	КонецЕсли;
КонецПроцедуры


Процедура НачСобытияПриИзменении(Элемент)
	Если ЭлементыФормы.КонСобытия.Значение<Элемент.Значение тогда
		ЭлементыФормы.КонСобытия.Значение=КонецДня(Элемент.Значение); 
	КонецЕсли;	
	ОтобратьПоДатамСобытия();
КонецПроцедуры

Процедура КонСобытияПриИзменении(Элемент)
	Если ЭлементыФормы.НачСобытия.Значение>Элемент.Значение тогда
		 ЭлементыФормы.НачСобытия.Значение=НачалоДня(Элемент.Значение); 
	КонецЕсли;	
	 
	 
	ОтобратьПоДатамСобытия();
КонецПроцедуры

Процедура ОтобратьПоДатамСобытия()
	События.Отбор.НачалоСобытия.ВидСравнения=ВидСравнения.ИнтервалВключаяГраницы;
	События.Отбор.НачалоСобытия.ЗначениеС=НачалоДня(ЭлементыФормы.НачСобытия.Значение);
	События.Отбор.НачалоСобытия.ЗначениеПо=КонецДня(ЭлементыФормы.КонСобытия.Значение);
	События.Отбор.НачалоСобытия.Использование = Истина;
КонецПроцедуры

//***AL 181015 ### 
Процедура ФильтрЗадачи()
	Если ЭлементыФормы.ФлажокЗадачиНеВыполненные.Значение тогда
		ЭлементыФормы.ФлажокЗадачиНеВыполненные.Заголовок="Не закрытые задачи";	
		Задачи.отбор.Выполнена.Использование=Истина;
		Задачи.отбор.Выполнена.Значение=Ложь;
	Иначе	
		ЭлементыФормы.ФлажокЗадачиНеВыполненные.Заголовок="Все задачи";	
		Задачи.отбор.Выполнена.Использование=Ложь;
	КонецЕсли;	
	ЗадачиПоСроку(ЭлементыФормы.ФлажокСрокИсполненияЗадач.Значение);
	
КонецПроцедуры

Процедура КоманднаяПанельЛидыОтобратьДляСделок(Кнопка)
	ЭлементыФормы.КоманднаяПанельЛиды.Кнопки.ОтобратьДляСделок.Пометка=не ЭлементыФормы.КоманднаяПанельЛиды.Кнопки.ОтобратьДляСделок.Пометка;
	Если Лиды.Отбор.Ссылка.Использование тогда
		Лиды.Отбор.Ссылка.Использование=Ложь;
		возврат;
	КонецЕсли;
	мф=ПолучитьОбщуюФорму("ФильтрНаЛидов");
	РезВыбора=мф.ОткрытьМодально();
	Если РезВыбора=Неопределено тогда
		ЭлементыФормы.КоманднаяПанельЛиды.Кнопки.ОтобратьДляСделок.Пометка=Ложь;
		возврат;
	КонецЕсли;
	ОтобратьЛидов(РезВыбора.Права,
	РезВыбора.Пол,РезВыбора.Англ,РезВыбора.Нем,РезВыбора.Сезон,РезВыбора.СтатусЛида);
КонецПроцедуры

Процедура ОтобратьЛидов(Права,Пол,Англ,Нем,Сезон,СтатусЛида)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Контрагенты.Ссылка КАК Док,
		|	Контрагенты.УровеньЗнанияАнглийскогоЯзыка,
		|	Контрагенты.УровеньЗнанияНемецкогоЯзыка,
		|	КонтрагентыВодительскиеПрава.КатегорииВодительскихПрав,
		|	Контрагенты.ПолФизическихЛиц,
		|	Контрагенты.Сезон,
		|	Контрагенты.НаправлениеДеятельности
		|ИЗ
		|	Справочник.Контрагенты.ВодительскиеПрава КАК КонтрагентыВодительскиеПрава
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
		|		ПО КонтрагентыВодительскиеПрава.Ссылка = Контрагенты.Ссылка
		|ГДЕ
		|	ВЫБОР
		|			КОГДА &КатегорииВодительскихПрав = НЕОПРЕДЕЛЕНО
		|					ИЛИ &КатегорииВодительскихПрав = ЗНАЧЕНИЕ(Перечисление.КатегорииВодительскихПрав.ПустаяСсылка)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ КонтрагентыВодительскиеПрава.КатегорииВодительскихПрав = &КатегорииВодительскихПрав
		|		КОНЕЦ
		|	И ВЫБОР
		|			КОГДА &УровеньЗнанияАнглийскогоЯзыка = 0
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ Контрагенты.УровеньЗнанияАнглийскогоЯзыка.Порядок <= &УровеньЗнанияАнглийскогоЯзыка
		|		КОНЕЦ
		|	И ВЫБОР
		|			КОГДА &УровеньЗнанияНемецкогоЯзыка = 0
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ Контрагенты.УровеньЗнанияНемецкогоЯзыка.Порядок <= &УровеньЗнанияНемецкогоЯзыка
		|		КОНЕЦ
		|	И ВЫБОР
		|			КОГДА &Сезон = НЕОПРЕДЕЛЕНО
		|					ИЛИ &Сезон = ЗНАЧЕНИЕ(Справочник.СезоныРабот.ПустаяСсылка)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ Контрагенты.Сезон = &Сезон
		|		КОНЕЦ
		|	И Контрагенты.Родитель = &Группа
		|	И ВЫБОР
		|			КОГДА &Пол = НЕОПРЕДЕЛЕНО
		|					ИЛИ &Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическихЛиц.ПустаяСсылка)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ Контрагенты.ПолФизическихЛиц = &Пол
		|		КОНЕЦ
		|	И ВЫБОР
		|			КОГДА &СтатусЛида = НЕОПРЕДЕЛЕНО
		|					ИЛИ &СтатусЛида = ЗНАЧЕНИЕ(Перечисление.СтатусСостоянияЛида.ПустаяСсылка)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ Контрагенты.СтатусЛида = &СтатусЛида
		|		КОНЕЦ";
	
		
	Запрос.УстановитьПараметр("КатегорииВодительскихПрав", Права);
	Запрос.УстановитьПараметр("Пол", Пол);
	Запрос.УстановитьПараметр("УровеньЗнанияАнглийскогоЯзыка",?(Англ=Перечисления.УровниЗнанияАнглийскогоЯзыка.ПустаяСсылка(),0,Перечисления.УровниЗнанияАнглийскогоЯзыка.Индекс(Англ)));
	Запрос.УстановитьПараметр("УровеньЗнанияНемецкогоЯзыка", ?(Нем=Перечисления.УровниЗнанияНемецкогоЯзыка.ПустаяСсылка(),0,Перечисления.УровниЗнанияНемецкогоЯзыка.Индекс(Нем)));
	Запрос.УстановитьПараметр("Сезон", Сезон);
	Запрос.УстановитьПараметр("Группа", Справочники.Контрагенты.НайтиПоКоду("000000002"));
	Запрос.УстановитьПараметр("СтатусЛида",СтатусЛида);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Док=новый СписокЗначений; 
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Док.Добавить(ВыборкаДетальныеЗаписи.Док);
	КонецЦикла;
	Лиды.Отбор.Ссылка.Использование=Истина;
	Лиды.Отбор.Ссылка.ВидСравнения =ВидСравнения.ВСписке;
	Лиды.Отбор.Ссылка.Значение	  = Док;
КонецПроцедуры

Процедура СделкиЛидовПриВыводеСтроки(Элемент, ОформлениеСтроки, ДанныеСтроки)
		Если ДанныеСтроки.Ссылка.СделкаПровалена или ДанныеСтроки.Ссылка.ПометкаУдаления Тогда
			ОформлениеСтроки.ЦветТекста = WebЦвета.СветлоСерый;
		КонецЕсли; 
КонецПроцедуры


Процедура КоманднаяПанельСделокЛидовКопированиеСделки(Кнопка)
	
	текстр=ЭлементыФормы.СделкиЛидов.ТекущиеДанные;
	Если текстр.Ссылка.СделкаПровалена=Ложь тогда
		Текст="Копировать можно только ПРОВАЛЕННЫЕ сделки!!! ";
		Сообщить(Текст);
		Предупреждение(Текст,300,"Внимание!");
		возврат;
	КонецЕсли;	
	
	новБП=текстр.Ссылка.Скопировать();
//*** остановка процесса перед выполнением ПоискИСогласование_УО

	новБП.Вакансии.Очистить();
	новБП.БиографияУтверждена=Ложь;
	новБП.Дата=ТекущаяДата();
	новБП.ДатаВозврата=Дата(1,1,1);
	новБП.ДатаВыезда=Дата(1,1,1);
	новБП.ДатаЗавершения=Дата(1,1,1);
	новБП.ДатаМинТруда=Дата(1,1,1);
	новБП.ДатаОтправкиМинТруда=Дата(1,1,1);
	новБП.ДатаНачалаРаботы=ТекущаяДата();
	новБП.ДатаПоследнейОперации=Дата(1,1,1);
	новБП.ДатаСтарта=ТекущаяДата();
	новБП.Завершен=Ложь;
	новБП.ЗавершенПринудительно=Ложь;
	новБП.ИспользованоВакансий=0;
	новБП.КлиентПодтвердилИзменениеСроков=Ложь;
	новБП.Комментарий="Скопировано с "+текстр.Ссылка.Номер +" от "+текстр.Ссылка.Дата;
	новБП.КтоЗавершил=Справочники.Пользователи.ПустаяСсылка();
	новБП.МинТрудаИзменилСроки=Ложь;
	новБП.НеобходимаБиография=Ложь;
	новБП.ПометкаУдаления=Ложь;
	новБП.Предлдожение=Документы.СделкиРаботодателей.ПустаяСсылка();
	новБП.Предложения.Очистить();
	новБП.ПричинаЗавершения="";
	новБП.ПричиныЗавершенияСделки=Справочники.ПричиныЗавершенияСделокЛидов.ПустаяСсылка();
	новБП.Работодатель=Справочники.Контрагенты.ПустаяСсылка();
	новБП.РаботодательПодтвердилИзменениеСроков=Ложь;
	новБП.РаспечатанДоговорООО=Ложь;
	новБП.РаспечатанДоговорФОП=Ложь;
	новБП.РезультатПоискаСогласованияУО=Перечисления.РезультатыСогласованияВакансииЛида_УО.ПустаяСсылка();
	новБП.СделкаПровалена=Ложь;
	новБП.Сезон=Справочники.СезоныРабот.ПустаяСсылка();
//	новБП.Стартован=Истина;
	новБП.ТарифныйПакет=Справочники.НоменклатурныеГруппы.ПустаяСсылка();
	новБП.УтвержденМинТруда=Ложь;
	новБП.Записать();
//*** Реквизиты которые не надо копировать
	новБП.Старт();
	сз=ДополнительныеФункции.ПолучитьНевыполненнуюЗадачу(новБП.Ссылка);
	сз.ПолучитьОбъект().ВыполнитьЗадачуИнтерактивно();
	
	сз=ДополнительныеФункции.ПолучитьНевыполненнуюЗадачу(новБП.Ссылка);
	сз.ПолучитьОбъект().ВыполнитьЗадачуИнтерактивно();
	
	сз=ДополнительныеФункции.ПолучитьНевыполненнуюЗадачу(новБП.Ссылка);
	сз.ПолучитьОбъект().ВыполнитьЗадачуИнтерактивно();

	сз=ДополнительныеФункции.ПолучитьНевыполненнуюЗадачу(новБП.Ссылка);
	сз.ПолучитьОбъект().ВыполнитьЗадачуИнтерактивно();

	сз=ДополнительныеФункции.ПолучитьНевыполненнуюЗадачу(новБП.Ссылка);
	сз.ПолучитьОбъект().ВыполнитьЗадачуИнтерактивно();
КонецПроцедуры


Процедура СделкиЛидовПередНачаломДобавления(Элемент, Отказ, Копирование)
	 отказ = Копирование;	
 КонецПроцедуры
 
 
 Процедура СезонВЗадачахПриИзменении(Элемент)
	 Если не ЗначениеЗаполнено(Элемент.Значение) тогда 
		 Задачи.Отбор.Бизнеспроцесс.Использование	= Ложь;	
		 возврат;
	 КонецЕсли;
	 
	 Запрос = Новый Запрос;
	 Запрос.Текст = 
	 "ВЫБРАТЬ
	 |	СделкаЛида.Ссылка
	 |ИЗ
	 |	БизнесПроцесс.СделкаЛида КАК СделкаЛида
	 |ГДЕ
	 |	СделкаЛида.ПометкаУдаления = ЛОЖЬ
	 |	И СделкаЛида.Стартован = ИСТИНА
	 |	И СделкаЛида.Сезон = &Сезон";
	 
	 Запрос.УстановитьПараметр("Сезон", Элемент.Значение);
	 РезультатЗапроса = Запрос.Выполнить();
	 ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	 сз=новый СписокЗначений;
	 Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		 сз.Добавить(ВыборкаДетальныеЗаписи.Ссылка);
	 КонецЦикла;
	 Задачи.Отбор.Бизнеспроцесс.Использование	= Истина;	
	 Задачи.Отбор.Бизнеспроцесс.ВидСравнения	= ВидСравнения.ВСписке;
	 Задачи.Отбор.Бизнеспроцесс.Значение		= сз;
 КонецПроцедуры

 Процедура СезонВЗадачахОчистка(Элемент, СтандартнаяОбработка)
		ФильтрЗадачи();
		ЭлементыФормы.КоманднаяПанельЗадач.Кнопки.Исполнитель.Кнопки.ЗадачиДляВсех.Пометка=Истина;
		ЭлементыФормы.КоманднаяПанельЗадач.Кнопки.Исполнитель.Кнопки.ЗадачиДляМеня.Пометка=Ложь;
		ЭлементыФормы.КоманднаяПанельЗадач.Кнопки.Исполнитель.Кнопки.ЗадачиДляОтдела.Пометка=Ложь;
 КонецПроцедуры

 Процедура ЗадачиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа)
	 Отказ=Копирование;
 КонецПроцедуры
 
 
