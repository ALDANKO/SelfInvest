Процедура ДействияФормыКартаМаршрута(Кнопка)

	РаботаСБизнесПроцессами.ОткрытьКартумаршрута(БизнесПроцесс);

КонецПроцедуры // ДействияФормыКартаМаршрута()

Процедура ОплатаОООНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ФормаВыбора = Документы.ПлатежноеПоручениеВходящее.ПолучитьФормуВыбора();
	ФормаВыбора.Отбор.Организация.Установить(БизнесПроцесс.ОрганизацияООО);
	ФормаВыбора.Отбор.Контрагент.Установить(БизнесПроцесс.Лид);
	Элемент.Значение=ФормаВыбора.ОткрытьМодально();//***AL 180926 ### .ОткрытьМодально();
КонецПроцедуры

Процедура ОплатаФОПНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ФормаВыбора = Документы.ПлатежноеПоручениеВходящее.ПолучитьФормуВыбора();
	ФормаВыбора.Отбор.Организация.Установить(БизнесПроцесс.ОрганизацияФОП);
	ФормаВыбора.Отбор.Контрагент.Установить(БизнесПроцесс.Лид);
	Элемент.Значение=ФормаВыбора.ОткрытьМодально();//***AL 180926 ### .ОткрытьМодально();
КонецПроцедуры

Процедура ОбновлениеОтображения()
	Если ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.Оплаты_1Т тогда

	ИначеЕсли ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.ПоискСогласование тогда	
		ЭлементыФормы.СделкаРаботодателя.Доступность= РезультатСогласования_УО=Перечисления.РезультатыСогласованияВакансииЛида_УО.Утвержден;
		ЭлементыФормы.Работодатель.Доступность		= РезультатСогласования_УО=Перечисления.РезультатыСогласованияВакансииЛида_УО.Утвержден;
		ЭлементыФормы.Сезон.Доступность				= РезультатСогласования_УО=Перечисления.РезультатыСогласованияВакансииЛида_УО.ИзменениеСезона;
	ИначеЕсли ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.Оплата_2Т тогда			
		
	КонецЕсли;
	//ЭлементыФормы.КнопкаПечатьСчетФОП.Доступность=ЗначениеЗаполнено(ЭлементыФормы.СчетФОП2.Значение);
КонецПроцедуры

Процедура ПриОткрытии()
	ЭлементыФормы.ОсновнаяПанель.Страницы.Оплаты_1Т.Видимость=Ложь;	  
	ЭлементыФормы.ОсновнаяПанель.Страницы.ПоискСогласование.Видимость=Ложь;	  
	ЭлементыФормы.ОсновнаяПанель.Страницы.Выписка_2Т.Видимость=Ложь;	  
	ЭлементыФормы.ОсновнаяПанель.Страницы.Оплата_2Т.Видимость=Ложь;	  
	ЭлементыФормы.ОсновнаяПанель.Страницы.Предложения.Видимость=Ложь;	  
	ЭлементыФормы.ОсновнаяПанель.Страницы.ВозвратДенег.Видимость=Ложь;	  
	ЭлементыФормы.ОсновнаяПанель.Страницы.НовыйСезон.Видимость=Ложь;	  
	ЭлементыФормы.ОсновнаяПанель.Страницы.ВыставлениеСчтов.Видимость=Ложь;	  
	ЭлементыФормы.ОсновнаяПанель.Страницы.ПодтверждениеБиографии.Видимость=Ложь;
	ЭлементыФормы.ОсновнаяПанель.Страницы.МинТруда.Видимость=Ложь;
	ЭлементыФормы.ОсновнаяПанель.Страницы.ДатыПеремещений.Видимость=Ложь;
	ЭлементыФормы.ОсновнаяПанель.Страницы.ЗнаниеЯзыков.Видимость=Ложь;
	ЭлементыФормы.ОсновнаяПанель.Страницы.Вакансия.Видимость=Ложь;
	ЭлементыФормы.ОсновнаяПанель.Страницы.Дополнительно.Видимость=Ложь;
	
	Услуги.Загрузить(БизнесПроцесс.Услуги.Выгрузить());	
	Если ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ПроверкаОплат тогда
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.Оплаты_1Т;
		ЭлементыФормы.ОсновнаяПанель.Страницы.Оплаты_1Т.Видимость=Истина;	  
		Если ЗначениеЗаполнено(БизнесПроцесс.ОплатаООО) тогда
			ЭлементыФормы.ОплатаООО.Значение=БизнесПроцесс.ОплатаООО;
		КонецЕсли;
		Если ЗначениеЗаполнено(БизнесПроцесс.ОплатаФОП) тогда
			ЭлементыФормы.ОплатаФОП.Значение=БизнесПроцесс.ОплатаФОП;
		КонецЕсли;
	ИначеЕсли ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ПроверкаНаличияБиометрическогоПаспорта Тогда  		
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.Дополнительно;
		ЭлементыФормы.ОсновнаяПанель.Страницы.Дополнительно.Видимость=Истина;	  
		ЭлементыФормы.БиометрическийПаспортПодтвержден.Видимость=Истина;
		ЭлементыФормы.БиометрическийПаспортПодтвержден.Значение=БизнесПроцесс.БиометрическийПаспортПодтвержден;
		ЭлементыФормы.НадписьДатаПодачиНаВизу.Видимость  = Ложь;
		ЭлементыФормы.ДатаПодачиНаВизу.Видимость  = Ложь;		
		ЭлементыФормы.НадписьДатаПолученияВизы.Видимость  = Ложь;
		ЭлементыФормы.ДатаПолученияВизы.Видимость  = Ложь;		
	ИначеЕсли ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ПодачаДокументовНаВизу Тогда  		
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.Дополнительно;
		ЭлементыФормы.ОсновнаяПанель.Страницы.Дополнительно.Видимость=Истина;	  
		ЭлементыФормы.БиометрическийПаспортПодтвержден.Видимость=Ложь;
		ЭлементыФормы.НадписьДатаПодачиНаВизу.Видимость  = истина;
		ЭлементыФормы.ДатаПодачиНаВизу.Видимость  = истина;		
		ЭлементыФормы.ДатаПодачиНаВизу.Значение=БизнесПроцесс.ДатаПодачиНаВизу;		
		ЭлементыФормы.НадписьДатаПолученияВизы.Видимость  = Ложь;
		ЭлементыФормы.ДатаПолученияВизы.Видимость  = Ложь;		
	ИначеЕсли ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ПолучениеВизы Тогда  		
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.Дополнительно;
		ЭлементыФормы.ОсновнаяПанель.Страницы.Дополнительно.Видимость=Истина;	  
		ЭлементыФормы.БиометрическийПаспортПодтвержден.Видимость=Ложь;
		ЭлементыФормы.НадписьДатаПодачиНаВизу.Видимость  = Ложь;
		ЭлементыФормы.ДатаПодачиНаВизу.Видимость  = Ложь;		
		ЭлементыФормы.НадписьДатаПолученияВизы.Видимость  = истина;
		ЭлементыФормы.ДатаПолученияВизы.Видимость  = истина;		
		ЭлементыФормы.ДатаПолученияВизы.Значение=БизнесПроцесс.ДатаПолученияВизы;				
	ИначеЕсли ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.УтверждениеВакансии Тогда  		
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.Вакансия;
		ЭлементыФормы.ОсновнаяПанель.Страницы.Вакансия.Видимость=Истина;	  
		ЭлементыФормы.ВакансияПринята.Видимость=Истина;
		ЭлементыФормы.ВакансияПринята.Значение =Истина;
		ЭлементыФормы.ВакансияОтклонена.Видимость=Истина;
		ЭлементыФормы.ВакансияОтклонена.Значение =Ложь;
		ЭлементыФормы.ОтправкаВакансии.Видимость=Ложь;
		ЭлементыФормы.РаботодательВакансия.Доступность=Ложь;
		ЭлементыФормы.СделкаРаботодателяВакансия.Доступность=Ложь;
		Если БизнесПроцесс.Вакансии.Количество()>0 тогда
			ЭлементыФормы.РаботодательВакансия.Значение=БизнесПроцесс.Вакансии[БизнесПроцесс.Вакансии.Количество()-1].Работодатель;
			ЭлементыФормы.СделкаРаботодателяВакансия.Значение=БизнесПроцесс.Вакансии[БизнесПроцесс.Вакансии.Количество()-1].Предложение;
		КонецЕсли;	
	ИначеЕсли ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ПодборВакансии Тогда  		
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.Вакансия;
		ЭлементыФормы.ОсновнаяПанель.Страницы.Вакансия.Видимость=Истина;	  
		ЭлементыФормы.ВакансияПринята.Видимость=Ложь;
		ЭлементыФормы.ВакансияОтклонена.Видимость=Ложь;
		
	ИначеЕсли ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ОпределениеУровняЗнанияЯзыков Тогда  	
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.ЗнаниеЯзыков;
		ЭлементыФормы.ОсновнаяПанель.Страницы.ЗнаниеЯзыков.Видимость=Истина;	  
		ЭлементыФормы.УровеньЗнанияАнглийскогоЯзыка.Значение=БизнесПроцесс.УровеньЗнанияАнглийскогоЯзыка;
		ЭлементыФормы.УровеньЗнанияНемецкогоЯзыка.Значение=БизнесПроцесс.УровеньЗнанияНемецкогоЯзыка;
		ЭлементыФормы.ТарифныйПакет.Значение=БизнесПроцесс.ТарифныйПакет; 
		ЭлементыФормы.КолВакансий.Значение=БизнесПроцесс.НачисленоВакансий;
	ИначеЕсли ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ПокупкаБилетов Тогда  	
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.ДатыПеремещений;
		ЭлементыФормы.ОсновнаяПанель.Страницы.ДатыПеремещений.Видимость=Истина;	  
		ЭлементыФормы.ДатаВозврата.Значение	= БизнесПроцесс.ДатаВозврата;
		ЭлементыФормы.ДатаВыезда.Значение   = БизнесПроцесс.ДатаВыезда;
	ИначеЕсли ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ОтправкаВМинТруда Тогда  	
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.МинТруда;
		ЭлементыФормы.ОсновнаяПанель.Страницы.МинТруда.Видимость=Истина;	  
		ЭлементыФормы.ДатаВходМинТруда.Видимость=Истина;
		ЭлементыФормы.ДатаВыходМинТруда.Видимость=Ложь;
		ЭлементыФормы.НадписьДатаВыходМинТруда.Видимость=Ложь;
		ЭлементыФормы.НадписьДействиеРазрешенияМинТрудаС.Видимость=Ложь;
		ЭлементыФормы.ДействиеРазрешенияМинТрудаС.Видимость=Ложь;
		ЭлементыФормы.НадписьДействиеРазрешенияМинТрудаПо.Видимость=Ложь;
		ЭлементыФормы.ДействиеРазрешенияМинТрудаПо.Видимость=Ложь;
		ЭлементыФормы.УтвержденМинТруда.Видимость=Ложь;
		ЭлементыФормы.МинТрудаМеняетСроки.Видимость=Ложь;
		ЭлементыФормы.РаботодательПодтвердилИзменениеСроков.Видимость=Ложь;
		ЭлементыФормы.КлиентПодтвердилИзменениеСроков.Видимость=Ложь;
	ИначеЕсли ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ПолучениеИзМинТруда Тогда  	
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.МинТруда;
		ЭлементыФормы.ОсновнаяПанель.Страницы.МинТруда.Видимость=Истина;	  
		ЭлементыФормы.НадписьДатаВходМинТруда.Видимость=Ложь;
		ЭлементыФормы.ДатаВходМинТруда.Видимость=Ложь;
		ЭлементыФормы.НадписьДатаВыходМинТруда.Видимость=Истина;
		ЭлементыФормы.ДатаВыходМинТруда.Видимость=Истина;
		ЭлементыФормы.УтвержденМинТруда.Значение=Истина;
		ЭлементыФормы.МинТрудаМеняетСроки.Видимость=Истина;
		ЭлементыФормы.НадписьДействиеРазрешенияМинТрудаС.Видимость=Истина;
		ЭлементыФормы.ДействиеРазрешенияМинТрудаС.Видимость=Истина;
		ЭлементыФормы.ДействиеРазрешенияМинТрудаС.Значение=БизнесПроцесс.ДействиеРазрешенияМинТрудаС;
		ЭлементыФормы.ДействиеРазрешенияМинТрудаПо.Значение=БизнесПроцесс.ДействиеРазрешенияМинТрудаПо;
		ЭлементыФормы.НадписьДействиеРазрешенияМинТрудаПо.Видимость=Истина;
		ЭлементыФормы.ДействиеРазрешенияМинТрудаПо.Видимость=Истина;
		ЭлементыФормы.РаботодательПодтвердилИзменениеСроков.Видимость=Ложь;
		ЭлементыФормы.КлиентПодтвердилИзменениеСроков.Видимость=Ложь;
	ИначеЕсли ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ПодтверждениеРботодателемИзмененияСроков Тогда  	
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.МинТруда;
		ЭлементыФормы.ОсновнаяПанель.Страницы.МинТруда.Видимость=Истина;	  
		ЭлементыФормы.НадписьДатаВходМинТруда.Видимость=Ложь;
		ЭлементыФормы.ДатаВходМинТруда.Видимость=Ложь;
		ЭлементыФормы.НадписьДатаВыходМинТруда.Видимость=Ложь;
		ЭлементыФормы.ДатаВыходМинТруда.Видимость=Ложь;
		ЭлементыФормы.УтвержденМинТруда.Видимость=Ложь;
		ЭлементыФормы.МинТрудаМеняетСроки.Видимость=Ложь;
		ЭлементыФормы.РаботодательПодтвердилИзменениеСроков.Видимость=Истина;
		ЭлементыФормы.КлиентПодтвердилИзменениеСроков.Видимость		=Ложь;
		ЭлементыФормы.НадписьДействиеРазрешенияМинТрудаС.Видимость	=Ложь;
		ЭлементыФормы.ДействиеРазрешенияМинТрудаС.Видимость		=Ложь;
		ЭлементыФормы.НадписьДействиеРазрешенияМинТрудаПо.Видимость=Ложь;
		ЭлементыФормы.ДействиеРазрешенияМинТрудаПо.Видимость		=Ложь;
	ИначеЕсли ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ПодтверждениеКлиентомНовыхСроков Тогда  	
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.МинТруда;
		ЭлементыФормы.ОсновнаяПанель.Страницы.МинТруда.Видимость=Истина;	  
		ЭлементыФормы.НадписьДатаВходМинТруда.Видимость=Ложь;
		ЭлементыФормы.ДатаВходМинТруда.Видимость=Ложь;
		ЭлементыФормы.НадписьДатаВыходМинТруда.Видимость=Ложь;
		ЭлементыФормы.ДатаВыходМинТруда.Видимость=Ложь;
		ЭлементыФормы.МинТрудаМеняетСроки.Видимость=Ложь;
		ЭлементыФормы.РаботодательПодтвердилИзменениеСроков.Видимость=Ложь;
		ЭлементыФормы.КлиентПодтвердилИзменениеСроков.Видимость=Истина;
		ЭлементыФормы.УтвержденМинТруда.Видимость=Ложь;
		ЭлементыФормы.НадписьДействиеРазрешенияМинТрудаС.Видимость	=Ложь;
		ЭлементыФормы.ДействиеРазрешенияМинТрудаС.Видимость		=Ложь;
		ЭлементыФормы.НадписьДействиеРазрешенияМинТрудаПо.Видимость=Ложь;
		ЭлементыФормы.ДействиеРазрешенияМинТрудаПо.Видимость		=Ложь;
//***181123		
	ИначеЕсли ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ОтпреавитьАкт2НаПодпись Тогда  	
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.ПодтверждениеБиографии;
		ЭлементыФормы.ОсновнаяПанель.Страницы.ПодтверждениеБиографии.Видимость=Истина;	  
		ЭлементыФормы.РаботодателюНужнаБиография.Видимость=Ложь;
		ЭлементыФормы.РаботодательУтвердилБиографию.Видимость=ложь;
		ЭлементыФормы.ПросмотретьАнкету.Видимость=Ложь;
		ЭлементыФормы.ОтправкаАнкеты.Видимость=Ложь;
		ЭлементыФормы.ПросмотретьАкт.Видимость=Истина;
		ЭлементыФормы.ОтправкаАкт.Видимость=Истина;
//***181123		
		
	ИначеЕсли ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ОтправитьФормуДляЗаполнения Тогда  	
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.ПодтверждениеБиографии;
		ЭлементыФормы.ОсновнаяПанель.Страницы.ПодтверждениеБиографии.Видимость=Истина;	  
		ЭлементыФормы.РаботодателюНужнаБиография.Видимость=Ложь;
		ЭлементыФормы.РаботодательУтвердилБиографию.Видимость=ложь;
		ЭлементыФормы.ПросмотретьАнкету.Видимость=Истина;
		ЭлементыФормы.ОтправкаАнкеты.Видимость=Истина;
		ЭлементыФормы.ОсновнаяПанель.Страницы.ПодтверждениеБиографии.Заголовок="Отправка анкеты";
		ЭлементыФормы.ПросмотретьАкт.Видимость=Ложь;
		ЭлементыФормы.ОтправкаАкт.Видимость=Ложь;

		
		
	ИначеЕсли ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.УтверждениеРаботодателем Тогда  	
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.ПодтверждениеБиографии;
		ЭлементыФормы.ОсновнаяПанель.Страницы.ПодтверждениеБиографии.Видимость=Истина;	  
		ЭлементыФормы.РаботодателюНужнаБиография.Видимость=Ложь;
		ЭлементыФормы.РаботодательУтвердилБиографию.Значение=Истина;
		ЭлементыФормы.РаботодательУтвердилБиографию.Видимость=Истина;
		ЭлементыФормы.ПросмотретьАнкету.Видимость=Ложь;
		ЭлементыФормы.ОтправкаАнкеты.Видимость=Ложь;
			ЭлементыФормы.ПросмотретьАкт.Видимость=Ложь;
		ЭлементыФормы.ОтправкаАкт.Видимость=Ложь;

	ИначеЕсли ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.СоставлениеБиографии Тогда  	
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.ПодтверждениеБиографии;
		ЭлементыФормы.ОсновнаяПанель.Страницы.ПодтверждениеБиографии.Видимость=Истина;	  
		ЭлементыФормы.РаботодателюНужнаБиография.Видимость=Истина;
		ЭлементыФормы.РаботодательУтвердилБиографию.Видимость=Ложь;
		ЭлементыФормы.ПросмотретьАнкету.Видимость=Ложь;
		ЭлементыФормы.ОтправкаАнкеты.Видимость=Ложь;
		ЭлементыФормы.ПросмотретьАкт.Видимость=Ложь;
		ЭлементыФормы.ОтправкаАкт.Видимость=Ложь;
		
	ИначеЕсли ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ВыставлениеСчетов Тогда  	
		ЭлементыФормы.ОсновнаяПанель.Страницы.ВыставлениеСчтов.Видимость=Истина;
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.ВыставлениеСчтов;
	ИначеЕсли ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ПоискИСогласование_УО Тогда  
		ЭлементыФормы.ОсновнаяПанель.Страницы.ПоискСогласование.Видимость=Истина;	  
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.ПоискСогласование;
		Если ЗадачаОбъект.БизнесПроцесс.Предложения.Количество()>0 тогда
			ЭлементыФормы.ОсновнаяПанель.Страницы.Предложения.Видимость=Истина;
			ЗадачаОбъект.Предложения.Загрузить(ЗадачаОбъект.БизнесПроцесс.Предложения.Выгрузить());
			ЭлементыФормы.Предложения.Колонки.ДатаПредложения.Видимость=Ложь;
			ЭлементыФормы.Предложения.Колонки.Предложение.Доступность=Ложь;
			ЭлементыФормы.Предложения.Колонки.Работодатель.Доступность=Ложь;
		КонецЕсли;
		ЭлементыФормы.Работодатель.Значение=ЗадачаОбъект.БизнесПроцесс.Работодатель;
		ЭлементыФормы.СделкаРаботодателя.Значение=ЗадачаОбъект.БизнесПроцесс.Предлдожение;
		Если ЗадачаОбъект.БизнесПроцесс.РезультатПоискаСогласованияУО=Перечисления.РезультатыСогласованияВакансииЛида_УО.Утвержден тогда 
			ЭлементыФормы.Утвержден.Значение=Перечисления.РезультатыСогласованияВакансииЛида_УО.Утвержден;
			РезультатСогласования_УО=Перечисления.РезультатыСогласованияВакансииЛида_УО.Утвержден;
		ИначеЕсли ЗадачаОбъект.БизнесПроцесс.РезультатПоискаСогласованияУО=Перечисления.РезультатыСогласованияВакансииЛида_УО.ВозвратДенег тогда 	  
			ЭлементыФормы.ВозвратДенег.Значение =Перечисления.РезультатыСогласованияВакансииЛида_УО.ВозвратДенег;
			РезультатСогласования_УО=Перечисления.РезультатыСогласованияВакансииЛида_УО.ВозвратДенег;
		ИначеЕсли ЗадачаОбъект.БизнесПроцесс.РезультатПоискаСогласованияУО=Перечисления.РезультатыСогласованияВакансииЛида_УО.ИзменениеСезона тогда 	  
			ЭлементыФормы.ИзменениеСезона.Значение =Перечисления.РезультатыСогласованияВакансииЛида_УО.ИзменениеСезона;
			РезультатСогласования_УО=Перечисления.РезультатыСогласованияВакансииЛида_УО.ИзменениеСезона;
		ИначеЕсли ЗадачаОбъект.БизнесПроцесс.РезультатПоискаСогласованияУО=Перечисления.РезультатыСогласованияВакансииЛида_УО.ПоискРаботодателя тогда 	  
			ЭлементыФормы.ПоискРаботодателя.Значение=Перечисления.РезультатыСогласованияВакансииЛида_УО.ПоискРаботодателя;
			РезультатСогласования_УО=Перечисления.РезультатыСогласованияВакансииЛида_УО.ПоискРаботодателя;
		ИначеЕсли ЗадачаОбъект.БизнесПроцесс.РезультатПоискаСогласованияУО=Перечисления.РезультатыСогласованияВакансииЛида_УО.Согласование тогда 	  
			ЭлементыФормы.ПоискРаботодателя.Значение=Перечисления.РезультатыСогласованияВакансииЛида_УО.Согласование;
			РезультатСогласования_УО=Перечисления.РезультатыСогласованияВакансииЛида_УО.Согласование;
		Иначе
			ЭлементыФормы.Утвержден.Значение=Перечисления.РезультатыСогласованияВакансииЛида_УО.Утвержден;
			РезультатСогласования_УО=Перечисления.РезультатыСогласованияВакансииЛида_УО.Утвержден;
		КонецЕсли;
	ИначеЕсли ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ВыставлениеСчетов_2Т Тогда  		
		ЭлементыФормы.ОсновнаяПанель.Страницы.Выписка_2Т.Видимость=Истина;	  
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.Выписка_2Т;
	ИначеЕсли ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ПроверкаОплат_2Т Тогда  		
		ЭлементыФормы.ОсновнаяПанель.Страницы.Оплата_2Т.Видимость=Истина;	  
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.Оплата_2Т;
	ИначеЕсли ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ПоискРаботодателя_НО Тогда  			
		ЭлементыФормы.ОсновнаяПанель.Страницы.Предложения.Видимость=Истина;	  
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.Предложения;
		ЭлементыФормы.Предложения.Колонки.ДатаПредложения.Доступность=Ложь;
	ИначеЕсли ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ИзменениеСезона Тогда  			
		ЭлементыФормы.ОсновнаяПанель.Страницы.НовыйСезон.Видимость=Истина;	  
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.НовыйСезон;
		ЭлементыФормы.НовыйСезон.Значение=ЗадачаОбъект.БизнесПроцесс.Сезон;
	ИначеЕсли ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ВозвратДенег Тогда  			
		ЭлементыФормы.ОсновнаяПанель.Страницы.ВозвратДенег.Видимость=Истина;	  
		ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.ВозвратДенег;
	КонецЕсли;
	Если не ЭтоНовый() и не ЗначениеЗаполнено(Исполнитель) тогда
		Исполнитель=ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	Этаформа.ЭлементыФормы.Счета1йТранш.ОтборСтрок.Этап.Значение=1;
	Этаформа.ЭлементыФормы.Счета1йТранш.ОтборСтрок.Этап.Использование=Истина;
	Этаформа.ЭлементыФормы.Оплаты1йТранш.ОтборСтрок.Этап.Значение=1;
	Этаформа.ЭлементыФормы.Оплаты1йТранш.ОтборСтрок.Этап.Использование=Истина;
	Этаформа.ЭлементыФормы.Счета2йТранш.ОтборСтрок.Этап.Значение=2;
	Этаформа.ЭлементыФормы.Счета2йТранш.ОтборСтрок.Этап.Использование=Истина;
	Этаформа.ЭлементыФормы.Оплаты2йТранш.ОтборСтрок.Этап.Значение=2;
	Этаформа.ЭлементыФормы.Оплаты2йТранш.ОтборСтрок.Этап.Использование=Истина;
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	Если ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.Оплаты_1Т тогда	
	//***181001		
		//Если не ЗначениеЗаполнено(ЭлементыФормы.ДатаДоговорООО.Значение) ИЛИ
		//	не ЗначениеЗаполнено(ЭлементыФормы.ДатаДоговорФОП.Значение) тогда
		//	Предупреждение("Не заполнены даты возврата договоров!"+Символы.ПС+" Задача не может быть выполнена!",300,"Внимание!");
		//	Отказ=Истина;
		//Иначе
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ДоговорыКонтрагентов.Ссылка
			|ИЗ
			|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
			|ГДЕ
			|	ДоговорыКонтрагентов.Владелец = &Владелец
			|	И ДоговорыКонтрагентов.Организация = &Организация";
			
			Запрос.УстановитьПараметр("Владелец",БизнесПроцесс.Лид);
			Запрос.УстановитьПараметр("Организация", БизнесПроцесс.ОрганизацияООО);
			РезультатЗапроса = Запрос.Выполнить();
			Если РезультатЗапроса.Пустой() тогда
				Сообщить("Договор с ООО не найден!");
			Иначе	
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				ВыборкаДетальныеЗаписи.Следующий();
				дООО=ВыборкаДетальныеЗаписи.Ссылка;
				ДогООО=дООО.ПолучитьОбъект();
				ДогООО.Комментарий="Дата получения (возврата) договора - "+Формат(ЭлементыФормы.ДатаДоговорООО.Значение,"ДФ=dd.MM.yy");
				ДогООО.Записать();
			КонецЕсли;
			
			Запрос = Новый Запрос;
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ДоговорыКонтрагентов.Ссылка
			|ИЗ
			|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
			|ГДЕ
			|	ДоговорыКонтрагентов.Владелец = &Владелец
			|	И ДоговорыКонтрагентов.Организация = &Организация";
			
			Запрос.УстановитьПараметр("Владелец",БизнесПроцесс.Лид);
			Запрос.УстановитьПараметр("Организация", БизнесПроцесс.ОрганизацияФОП);
			РезультатЗапроса = Запрос.Выполнить();
			Если РезультатЗапроса.Пустой() тогда
				Сообщить("Договор с ФОП не найден!");
			Иначе	
				ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
				ВыборкаДетальныеЗаписи.Следующий();
				дФОП=ВыборкаДетальныеЗаписи.Ссылка;
				ДогФОП=дФОП.ПолучитьОбъект();
				ДогФОП.Комментарий="Дата получения (возврата) договора - "+Формат(ЭлементыФормы.ДатаДоговорФОП.Значение,"ДФ=dd.MM.yy");
				ДогФОП.Записать();
			КонецЕсли;
		//***181001 КонецЕсли;	
			БП=БизнесПроцесс.ПолучитьОбъект();
			БП.Услуги.Загрузить(Услуги.Выгрузить());
			БП.Записать();
	ИначеЕсли  ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.ПоискСогласование тогда			
		//Если ЗначениеЗаполнено(ЭлементыФормы.СделкаРаботодателя.Значение) И
		//	ЗначениеЗаполнено(ЭлементыФормы.Работодатель.Значение)  тогда для НО
			БП=БизнесПроцесс.ПолучитьОбъект();
			БП.Предлдожение=ЭлементыФормы.СделкаРаботодателя.Значение;
			БП.Работодатель=ЭлементыФормы.Работодатель.Значение;
			БП.РезультатПоискаСогласованияУО=РезультатСогласования_УО;
			БП.ДатаПоследнейОперации=ТекущаяДата();
			БП.Услуги.Загрузить(Услуги.Выгрузить());
			БП.Записать();
		//КонецЕсли;		
	ИначеЕсли  ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.Вакансия
		и ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.УтверждениеВакансии тогда
				БП=БизнесПроцесс.ПолучитьОбъект();
				Если БП.Вакансии.Количество()>0 тогда
					БП.Вакансии[БП.Вакансии.Количество()-1].Отказ  = ЭлементыФормы.ВакансияОтклонена.Значение;
					БП.Вакансии[БП.Вакансии.Количество()-1].Принято= ЭлементыФормы.ВакансияПринята.Значение;
					БП.Вакансии[БП.Вакансии.Количество()-1].ДатаСогласования= ТекущаяДата();
					БП.Вакансии[БП.Вакансии.Количество()-1].Задача= Ссылка;
				КонецЕсли;	
				Если ЭлементыФормы.ВакансияПринята.Значение тогда
					БП.Предлдожение=ЭлементыФормы.СделкаРаботодателяВакансия.Значение;
					БП.Работодатель=ЭлементыФормы.РаботодательВакансия.Значение;
				КонецЕсли;
				БП.Записать();
				
				сд=ЭлементыФормы.СделкаРаботодателяВакансия.Значение.ПолучитьОбъект();
				СтруктураДляПоиска = Новый Структура;
				структураДляПоиска.Вставить("Лид",БизнесПроцесс.Лид);
				структураДляПоиска.Вставить("СделкаЛида",БизнесПроцесс.Ссылка);
				МассивСтрок = сд.Работники.НайтиСтроки(структураДляПоиска);   				
				Если МассивСтрок.Количество()>0 тогда
			         МассивСтрок[0].Бронь		 = Ложь;
					 МассивСтрок[0].Дата		 = ТекущаяДата();
					 МассивСтрок[0].Ответственный= глЗначениеПеременной("глТекущийПользователь");
					 МассивСтрок[0].Утвержден    = ЭлементыФормы.ВакансияПринята.Значение;
					 МассивСтрок[0].Отказ        = ЭлементыФормы.ВакансияОтклонена.Значение;
				КонецЕсли;
				сд.Записать();
	ИначеЕсли  ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.Вакансия
		и ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ПодборВакансии тогда 				
	        отказ=не ЗначениеЗаполнено(ЭлементыФормы.РаботодательВакансия.Значение)
			или не ЗначениеЗаполнено(ЭлементыФормы.СделкаРаботодателяВакансия.Значение);
			Если не Отказ тогда
				БП=БизнесПроцесс.ПолучитьОбъект();
				мв= БП.Вакансии.Добавить();
				мв.Работодатель =ЭлементыФормы.РаботодательВакансия.Значение;
				мв.Предложение  =ЭлементыФормы.СделкаРаботодателяВакансия.Значение;
				мв.ДатаПредложения=ТекущаяДата();
				мв.Задача=Ссылка;
				БП.Записать();
				сд=ЭлементыФормы.СделкаРаботодателяВакансия.Значение.ПолучитьОбъект();
				
				СтруктураДляПоиска = Новый Структура;
				структураДляПоиска.Вставить("Лид",БП.Лид);
				структураДляПоиска.Вставить("СделкаЛида",БП.Ссылка);
				МассивСтрок = сд.Работники.НайтиСтроки(структураДляПоиска);   				
				Если МассивСтрок.Количество()>0 тогда
			         МассивСтрок[0].Бронь		  = Истина;
					 МассивСтрок[0].Дата		  = ТекущаяДата();
					 МассивСтрок[0].Ответственный = глЗначениеПеременной("глТекущийПользователь");
					 МассивСтрок[0].Утвержден     = Ложь;
					 МассивСтрок[0].Отказ         = Ложь;
				 Иначе	 
					 мр=сд.Работники.Добавить();
					 мр.Дата=ТекущаяДата();
					 мр.Лид = БизнесПроцесс.Лид;
					 мр.Ответственный 	= глЗначениеПеременной("глТекущийПользователь");
					 мр.СделкаЛида	 	= БизнесПроцесс.Ссылка;
					 мр.Бронь		 	= истина;
				КонецЕсли;
				сд.Записать();
			КонецЕсли;
			
	ИначеЕсли  ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.ЗнаниеЯзыков  тогда 				
	        отказ=не ЗначениеЗаполнено(ЭлементыФормы.УровеньЗнанияАнглийскогоЯзыка.Значение)
			или не ЗначениеЗаполнено(ЭлементыФормы.УровеньЗнанияНемецкогоЯзыка.Значение) или
			ЭлементыФормы.КолВакансий.Значение=0; 
			Если не отказ тогда
				БП=БизнесПроцесс.ПолучитьОбъект();
				БП.УровеньЗнанияАнглийскогоЯзыка=ЭлементыФормы.УровеньЗнанияАнглийскогоЯзыка.Значение;
				БП.УровеньЗнанияНемецкогоЯзыка=ЭлементыФормы.УровеньЗнанияНемецкогоЯзыка.Значение;
				БП.НачисленоВакансий=ЭлементыФормы.КолВакансий.Значение;
				БП.Записать();
				мЛид=БизнесПроцесс.Лид.ПолучитьОбъект();
				мЛид.УровеньЗнанияАнглийскогоЯзыка	=	ЭлементыФормы.УровеньЗнанияАнглийскогоЯзыка.Значение;
				мЛид.УровеньЗнанияНемецкогоЯзыка	=	ЭлементыФормы.УровеньЗнанияНемецкогоЯзыка.Значение;
				мЛид.Записать();
			Иначе
				Предупреждение("Не заполненф ключевые данные!"+Символы.ПС+"Выполнение не возможно!",300,"Внимание!");
			КонецЕсли;
	ИначеЕсли  ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.Выписка_2Т тогда 				
			БП=БизнесПроцесс.ПолучитьОбъект();
			//БП.РаспечатанСчетФОП2=ЭлементыФормы.РаспечатанСчетФОП.Значение;
			БП.Услуги.Загрузить(Услуги.Выгрузить());
			БП.ДатаПоследнейОперации=ТекущаяДата();
			БП.Записать();
	ИначеЕсли  ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.Оплата_2Т тогда 				
			БП=БизнесПроцесс.ПолучитьОбъект();
			//БП.РаспечатанСчетФОП2=ЭлементыФормы.РаспечатанСчетФОП.Значение;
			//БП.ОплатаФОП2		 =ЭлементыФормы.ОплатаФОП2.Значение;
			БП.Услуги.Загрузить(Услуги.Выгрузить());
			БП.ДатаПоследнейОперации=ТекущаяДата();
			БП.ДатаЗавершения=ТекущаяДата();
			БП.Записать();
	ИначеЕсли  	ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ПокупкаБилетов
			 И ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.ДатыПеремещений тогда
			БП=ЗадачаОбъект.БизнесПроцесс.ПолучитьОбъект();
			БП.ДатаВыезда	=ЭлементыФормы.ДатаВыезда.Значение;
			БП.ДатаВозврата	=ЭлементыФормы.ДатаВозврата.Значение;
			БП.Записать();
			 
	ИначеЕсли  ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.МинТруда
			И ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ОтправкаВМинТруда тогда 				
			БП=ЗадачаОбъект.БизнесПроцесс.ПолучитьОбъект();
			БП.ДатаОтправкиМинТруда=ЭлементыФормы.ДатаВходМинТруда.Значение;
			БП.Записать();
	ИначеЕсли  ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.МинТруда
			И ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ПолучениеИзМинТруда тогда 				
			БП=ЗадачаОбъект.БизнесПроцесс.ПолучитьОбъект();
			БП.ДатаМинТруда=ЭлементыФормы.ДатаВыходМинТруда.Значение;
			БП.УтвержденМинТруда=ЭлементыФормы.УтвержденМинТруда.Значение;
			БП.МинТрудаИзменилСроки=ЭлементыФормы.МинТрудаМеняетСроки.Значение;
			БП.ДействиеРазрешенияМинТрудаС=ЭлементыФормы.ДействиеРазрешенияМинТрудаС.Значение;
			БП.ДействиеРазрешенияМинТрудаПо=ЭлементыФормы.ДействиеРазрешенияМинТрудаПо.Значение;
			БП.Записать();
			
	ИначеЕсли  ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.МинТруда
			И ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ПодтверждениеРботодателемИзмененияСроков тогда 				
			БП=ЗадачаОбъект.БизнесПроцесс.ПолучитьОбъект();
			БП.РаботодательПодтвердилИзменениеСроков=ЭлементыФормы.РаботодательПодтвердилИзменениеСроков.Значение;
		    БП.Записать();
			
	ИначеЕсли  ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.МинТруда
			И ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ПодтверждениеКлиентомНовыхСроков тогда 				
			БП=ЗадачаОбъект.БизнесПроцесс.ПолучитьОбъект();
			БП.КлиентПодтвердилИзменениеСроков=ЭлементыФормы.КлиентПодтвердилИзменениеСроков.Значение;
		    БП.Записать();
//***181123			
	ИначеЕсли  ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.ПодтверждениеБиографии 
			И ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.УтверждениеРаботодателем	тогда 				
			БП=ЗадачаОбъект.БизнесПроцесс.ПолучитьОбъект();
			БП.БиографияУтверждена=ЭлементыФормы.РаботодательУтвердилБиографию.Значение;
			БП.Записать();
	ИначеЕсли  ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.ПодтверждениеБиографии 
			И ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.СоставлениеБиографии тогда 				
			БП=ЗадачаОбъект.БизнесПроцесс.ПолучитьОбъект();
			БП.НеобходимаБиография=ЭлементыФормы.РаботодателюНужнаБиография.Значение;
			БП.Записать();
	ИначеЕсли  ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.Предложения тогда 				
			БП=ЗадачаОбъект.БизнесПроцесс.ПолучитьОбъект();
			БП.Предложения.Загрузить(ЗадачаОбъект.Предложения.Выгрузить());
			БП.Услуги.Загрузить(Услуги.Выгрузить());
			БП.ДатаПоследнейОперации=ТекущаяДата();
			БП.Записать();
	ИначеЕсли  ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.НовыйСезон тогда 				
			БП=ЗадачаОбъект.БизнесПроцесс.ПолучитьОбъект();
			БП.ДатаЗавершения=ТекущаяДата();
			БП.ДатаПоследнейОперации=ТекущаяДата();
			БП.ПричинаЗавершения=Претензия;
			БП.РезультатПоискаСогласованияУО=РезультатСогласования_УО;
			БП.Записать();
			
			МЛ=ЗадачаОбъект.БизнесПроцесс.Лид.ПолучитьОбъект();
			МЛ.Сезон=НовыйСезон;
			МЛ.ПричинаОтказа=ПричинаОтказа;
			МЛ.Комментарий=Претензия;
			МЛ.Записать();
	ИначеЕсли  ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.ВозвратДенег тогда 				
			БП=ЗадачаОбъект.БизнесПроцесс.ПолучитьОбъект();
			БП.ДатаЗавершения=ТекущаяДата();
			БП.ДатаПоследнейОперации=ТекущаяДата();
			БП.ПричинаЗавершения=Претензия;
			БП.РезультатПоискаСогласованияУО=РезультатСогласования_УО;
			БП.ВозвратФОП=ВозвратФОП;
			БП.Записать();
			
			МЛ=ЗадачаОбъект.БизнесПроцесс.Лид.ПолучитьОбъект();
			МЛ.Сезон=НовыйСезон;
			МЛ.ПричинаОтказа=ПричинаОтказа;
			МЛ.Комментарий=Претензия;
			МЛ.Записать();
		ИначеЕсли  ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.Дополнительно 
			И ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ПодачаДокументовНаВизу тогда 				
			БП=ЗадачаОбъект.БизнесПроцесс.ПолучитьОбъект();
			БП.ДатаПоследнейОперации=ТекущаяДата();
			БП.ДатаПодачиНаВизу=ЭлементыФормы.ДатаПодачиНаВизу.Значение;
			БП.Записать();
			
		ИначеЕсли  ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.Дополнительно 
			И ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ПолучениеВизы тогда 				
			БП=ЗадачаОбъект.БизнесПроцесс.ПолучитьОбъект();
			БП.ДатаПоследнейОперации=ТекущаяДата();
			БП.ДатаПолученияВизы=ЭлементыФормы.ДатаПолученияВизы.Значение;
			БП.Записать();
	ИначеЕсли  ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.Дополнительно 
			И ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ПроверкаНаличияБиометрическогоПаспорта тогда 				
			БП=ЗадачаОбъект.БизнесПроцесс.ПолучитьОбъект();
			БП.ДатаПоследнейОперации=ТекущаяДата();
			БП.БиометрическийПаспортПодтвержден=ЭлементыФормы.БиометрическийПаспортПодтвержден.Значение;
			БП.Записать();
	КонецЕсли;	
КонецПроцедуры

Процедура ОплатаОООПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Элемент.Значение) И
		Элемент.Значение.СуммаДокумента=БизнесПроцесс.СуммаООО тогда
		БП=БизнесПроцесс.ПолучитьОбъект();
		БП.ОплатаООО=Элемент.Значение;
		БП.Записать();
	КонецЕсли;		
КонецПроцедуры

Процедура ОплатаФОППриИзменении(Элемент)
	Если ЗначениеЗаполнено(Элемент.Значение) И
		Элемент.Значение.СуммаДокумента=БизнесПроцесс.СуммаФОП тогда
		БП=БизнесПроцесс.ПолучитьОбъект();
		БП.ОплатаФОП=Элемент.Значение;
		БП.Записать();
	КонецЕсли;		
КонецПроцедуры

Процедура ОсновныеДействияФормы1Сделка(Кнопка)
	БП=БизнесПроцесс.Ссылка.ПолучитьФорму("ФормаБизнесПроцесса");
	БП.ОткрытьМодально();//***AL 180926 ### .ОткрытьМодально();
КонецПроцедуры

Процедура РаботодательНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ФормаВыбора = Справочники.Контрагенты.ПолучитьФормуВыбора();
	ФормаВыбора.Отбор.ОсновнойВидДеятельности.Установить(Справочники.ВидыДеятельностиКонтрагентов.НайтиПоКоду("000000002"));
	ФормаВыбора.ЭлементыФормы.СправочникСписок.ИерархическийПросмотр=Ложь;
	Элемент.Значение=ФормаВыбора.ОткрытьМодально();
КонецПроцедуры

Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	//Если ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ПокупкаБилетов тогда
	//	СтандартнаяОбработка=Ложь;
	//	Если не ЗначениеЗаполнено(ЭлементыФормы.ДатаВозврата.Значение) 
	//		Или не ЗначениеЗаполнено(ЭлементыФормы.ДатаВыезда.Значение) тогда
	//		Отказ = Истина;
	//		Предупреждение("Не заполнены даты!",300,"Внимание!");
	//	КонецЕсли;	
	//КонецЕсли;	
	
КонецПроцедуры

Процедура СделкаРаботодателяПриИзменении(Элемент)
	Если Элемент.Значение<> Документы.СделкиРаботодателей.ПустаяСсылка() тогда
		Работодатель=Элемент.Значение.Контрагент;
	КонецЕсли;	
КонецПроцедуры

Процедура СделкаРаботодателяНачалоВыбора(Элемент, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Работодатель) тогда
		СтандартнаяОбработка=Ложь;
		ФормаВыбора = Документы.СделкиРаботодателей.ПолучитьФормуВыбора();
		ФормаВыбора.Отбор.Контрагент.Установить(Работодатель);
		Элемент.Значение=ФормаВыбора.ОткрытьМодально();
	КонецЕсли;	
КонецПроцедуры

Процедура СчетФОП2НачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ФормаВыбора = Документы.СделкиРаботодателей.ПолучитьФормуВыбора();
	ФормаВыбора.Отбор.Контрагент.Установить(ЗадачаОбъект.БизнесПроцесс.Лид);
	Элемент.Значение=ФормаВыбора.ОткрытьМодально();//***AL 180926 ### .ОткрытьМодально();
КонецПроцедуры

Процедура КнопкаПечатьСчетФОП(Элемент)
	ЭлементыФормы.СчетФОП2.Значение.ПолучитьОбъект().Печать("Счет",1,Ложь);	
	ЭлементыФормы.РаспечатанСчетФОП.Значение=Истина;
КонецПроцедуры

Процедура ОплатаФОП2ПриИзменении(Элемент)
	Если ЗначениеЗаполнено(Элемент.Значение) И
		Элемент.Значение.СуммаДокумента=БизнесПроцесс.СуммаФОП тогда
		БП=БизнесПроцесс.ПолучитьОбъект();
		БП.ОплатаФОП=Элемент.Значение;
		БП.Записать();
	КонецЕсли;		
КонецПроцедуры

Процедура ОплатаФОП2НачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ФормаВыбора = Документы.ПлатежноеПоручениеВходящее.ПолучитьФормуВыбора();
	ФормаВыбора.Отбор.Организация.Установить(БизнесПроцесс.ОрганизацияФОП);
	ФормаВыбора.Отбор.Контрагент.Установить(БизнесПроцесс.Лид);
	Элемент.Значение=ФормаВыбора.ОткрытьМодально(); //***AL 180926 ### .ОткрытьМодально();
КонецПроцедуры

Процедура СогласованПриИзменении(Элемент)
	//РезультатСогласования_УО=Элемент.Значение;
	Если Элемент.Значение=Перечисления.РезультатыСогласованияВакансииЛида_УО.ВозвратДенег тогда
		ЭлементыФормы.Сезон.Значение=Справочники.СезоныРабот.ПустаяСсылка();
		ЭлементыФормы.Работодатель.Значение=Справочники.Контрагенты.ПустаяСсылка();
		ЭлементыФормы.СделкаРаботодателя.Значение=Документы.СделкиРаботодателей.ПустаяСсылка();
		РезультатСогласования_УО=Перечисления.РезультатыСогласованияВакансииЛида_УО.ВозвратДенег;
		
	ИначеЕсли 	Элемент.Значение=Перечисления.РезультатыСогласованияВакансииЛида_УО.ИзменениеСезона тогда
		ЭлементыФормы.Работодатель.Значение=Справочники.Контрагенты.ПустаяСсылка();
		ЭлементыФормы.СделкаРаботодателя.Значение=Документы.СделкиРаботодателей.ПустаяСсылка();
		РезультатСогласования_УО=Перечисления.РезультатыСогласованияВакансииЛида_УО.ИзменениеСезона;
		
	ИначеЕсли 	Элемент.Значение=Перечисления.РезультатыСогласованияВакансииЛида_УО.ПоискРаботодателя тогда	
		ЭлементыФормы.Сезон.Значение=Справочники.СезоныРабот.ПустаяСсылка();
		ЭлементыФормы.Работодатель.Значение=Справочники.Контрагенты.ПустаяСсылка();
		ЭлементыФормы.СделкаРаботодателя.Значение=Документы.СделкиРаботодателей.ПустаяСсылка();
		РезультатСогласования_УО=Перечисления.РезультатыСогласованияВакансииЛида_УО.ПоискРаботодателя;
		
	ИначеЕсли 	Элемент.Значение=Перечисления.РезультатыСогласованияВакансииЛида_УО.Утвержден тогда
		ЭлементыФормы.Сезон.Значение=Справочники.СезоныРабот.ПустаяСсылка();
		РезультатСогласования_УО=Перечисления.РезультатыСогласованияВакансииЛида_УО.Утвержден;
	ИначеЕсли 	Элемент.Значение=Перечисления.РезультатыСогласованияВакансииЛида_УО.Согласование тогда
		ЭлементыФормы.Сезон.Значение=Справочники.СезоныРабот.ПустаяСсылка();
		ЭлементыФормы.Работодатель.Значение=Справочники.Контрагенты.ПустаяСсылка();
		ЭлементыФормы.СделкаРаботодателя.Значение=Документы.СделкиРаботодателей.ПустаяСсылка();
		РезультатСогласования_УО=Перечисления.РезультатыСогласованияВакансииЛида_УО.Согласование;
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыполненаПриИзменении(Элемент)
	Если ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ПроверкаОплат_2Т 
		И не ЗначениеЗаполнено(ЭлементыФормы.ОплатаФОП2.Значение) И Элемент.Значение=Истина тогда
			Ответ = Вопрос("В этом случае бизнес процесс пойдет на поиск и согласование. "+Символы.ПС+
						"Вы согласны?", РежимДиалогаВопрос.ДаНет);
			Если Ответ = КодВозвратаДиалога.Нет тогда
				Элемент.Значение=Ложь;
			КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

Процедура ВакансииПриИзмененииФлажка(Элемент, Колонка)
	//Если Колонка.Имя="Отказ" тогда
	//	Элемент.ТекущиеДанные.Принято=не Элемент.ТекущиеДанные.Отказ;
	//КонецЕсли;
	//Если Колонка.Имя="Принято" тогда
	//	Элемент.ТекущиеДанные.Отказ=не Элемент.ТекущиеДанные.Принято;
	//	ЭлементыФормы.СделкаРаботодателя.Значение=Элемент.ТекущиеДанные.Предложение;
	//	ЭлементыФормы.Работодатель.Значение		 = ЭлементыФормы.СделкаРаботодателя.Значение.Контрагент;
	//	ЭлементыФормы.Утвержден.Значение		 = Перечисления.РезультатыСогласованияВакансииЛида_УО.Утвержден;
	//КонецЕсли;
КонецПроцедуры

Процедура ВакансииПередНачаломИзменения(Элемент, Отказ)
	ТекСтр=ЭлементыФормы.Предложения.ТекущаяСтрока;
	
КонецПроцедуры

Процедура ВакансииПередНачаломДобавления(Элемент, Отказ, Копирование)
	Отказ= не ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ПоискРаботодателя_НО;
	Отказ= Копирование;
КонецПроцедуры

Процедура ВакансииПередУдалением(Элемент, Отказ)
	Отказ= не ЗадачаОбъект.ТочкаМаршрута=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ПоискРаботодателя_НО;
КонецПроцедуры

Процедура ВакансииПредложениеПриИзменении(Элемент)
	ТекСтр=ЭлементыФормы.Предложения.ТекущаяСтрока;
	ТекСтр.Работодатель=ТекСтр.Предложение.Контрагент;
	ТекСтр.ДатаПредложения=ТекущаяДата();
КонецПроцедуры

Процедура ВакансииПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	ЭлементыФормы.Предложения.ТекущиеДанные.Задача=Ссылка;
КонецПроцедуры

Процедура ФозвратФОПНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ФормаВыбора = Документы.ПлатежноеПоручениеИсходящее.ПолучитьФормуВыбора();
	ФормаВыбора.Отбор.Организация.Установить(БизнесПроцесс.ОрганизацияФОП);
	ФормаВыбора.Отбор.Контрагент.Установить(БизнесПроцесс.Лид);
	Элемент.Значение=ФормаВыбора.ОткрытьМодально(); //***AL 180926 ### .ОткрытьМодально();
КонецПроцедуры

Процедура АктОООНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ФормаВыбора = Документы.РеализацияТоваровУслуг.ПолучитьФормуВыбора();
	ФормаВыбора.Отбор.Организация.Установить(БизнесПроцесс.ОрганизацияООО);
	ФормаВыбора.Отбор.Контрагент.Установить(БизнесПроцесс.Лид);
	Элемент.Значение=ФормаВыбора.ОткрытьМодально(); //***AL 180926 ### 	.ОткрытьМодально();
КонецПроцедуры

Процедура АктФОПНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ФормаВыбора = Документы.РеализацияТоваровУслуг.ПолучитьФормуВыбора();
	ФормаВыбора.Отбор.Организация.Установить(БизнесПроцесс.ОрганизацияФОП);
	ФормаВыбора.Отбор.Контрагент.Установить(БизнесПроцесс.Лид);
	Элемент.Значение=ФормаВыбора.ОткрытьМодально();//***AL 180926 ### .ОткрытьМодально();
КонецПроцедуры

Процедура СчетОООНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ФормаВыбора = Документы.СчетНаОплатуПокупателю.ПолучитьФормуВыбора();
	ФормаВыбора.Отбор.Организация.Установить(БизнесПроцесс.ОрганизацияООО);
	ФормаВыбора.Отбор.Контрагент.Установить(БизнесПроцесс.Лид);
	Элемент.Значение=ФормаВыбора.ОткрытьМодально();//***AL 180926 ### .ОткрытьМодально();
КонецПроцедуры

Процедура СчетФОПНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ФормаВыбора = Документы.СчетНаОплатуПокупателю.ПолучитьФормуВыбора();
	ФормаВыбора.Отбор.Организация.Установить(БизнесПроцесс.ОрганизацияФОП);
	ФормаВыбора.Отбор.Контрагент.Установить(БизнесПроцесс.Лид);
	Элемент.Значение=ФормаВыбора.ОткрытьМодально(); //***AL 180926 ### .ОткрытьМодально();
КонецПроцедуры

Процедура КнопкаПечатьДоговорОООНажатие(Элемент)
	ЭлементыФормы.АктООО.Значение.ПолучитьОбъект().Печать("ДоговорООО",1,Ложь);
	ЭлементыФормы.РаспечатанДоговорООО.Значение=Истина;
КонецПроцедуры

Процедура КнопкаПечатьДоговорФопНажатие(Элемент)
	ЭлементыФормы.АктФОП.Значение.ПолучитьОбъект().Печать("ДоговорФОП",1,Ложь);
	ЭлементыФормы.РаспечатанДоговорФОП.Значение=Истина;
КонецПроцедуры

Процедура КнопкаПечатьСчетОООНажатие(Элемент)
	ЭлементыФормы.СчетООО.Значение.ПолучитьОбъект().Печать("Счет",1,Ложь);
	ЭлементыФормы.РаспечатанСчетООО.Значение=Истина;
КонецПроцедуры

Процедура КнопкаПечатьСчетФОПНажатие(Элемент)
	ЭлементыФормы.СчетФОП2.Значение.ПолучитьОбъект().Печать("Счет",1,Ложь);	
	ЭлементыФормы.РаспечатанСчетФОП.Значение=Истина;
КонецПроцедуры

Процедура Счета1йТраншПередНачаломДобавления(Элемент, Отказ, Копирование)
	отказ=истина;
КонецПроцедуры

Процедура Счета1йТраншПередУдалением(Элемент, Отказ)
	Отказ=истина;
КонецПроцедуры

Процедура Оплаты2йТраншПередНачаломДобавления(Элемент, Отказ, Копирование)
	Отказ=истина;
КонецПроцедуры

Процедура Оплаты2йТраншПередУдалением(Элемент, Отказ)
	Отказ=истина;
КонецПроцедуры

Процедура Оплаты1йТраншОплатаНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ФормаВыбора = Документы.ПлатежноеПоручениеВходящее.ПолучитьФормуВыбора("ФормаВыбора");
	ФормаВыбора.Отбор.Организация.Установить(ЭлементыФормы.Оплаты1йТранш.ТекущиеДанные.Организация);
	ФормаВыбора.Отбор.Контрагент.Установить(БизнесПроцесс.Лид);
	Элемент.Значение=ФормаВыбора.ОткрытьМодально(); //***AL 180926 ### .ОткрытьМодально();	
КонецПроцедуры

Процедура Счета2йТраншАктНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ФормаВыбора = Документы.РеализацияТоваровУслуг.ПолучитьФормуВыбора("ФормаВыбора");
	ФормаВыбора.Отбор.Организация.Установить(ЭлементыФормы.Счета2йТранш.ТекущиеДанные.Организация);
	ФормаВыбора.Отбор.Контрагент.Установить(БизнесПроцесс.Лид);
	Элемент.Значение=ФормаВыбора.ОткрытьМодально();//***AL 180926 ### .ОткрытьМодально();	
КонецПроцедуры

Процедура Счета2йТраншСчетНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ФормаВыбора = Документы.СчетНаОплатуПокупателю.ПолучитьФормуВыбора("ФормаВыбора");
	ФормаВыбора.Отбор.Организация.Установить(ЭлементыФормы.Счета2йТранш.ТекущиеДанные.Организация);
	ФормаВыбора.Отбор.Контрагент.Установить(БизнесПроцесс.Лид);
	Элемент.Значение=ФормаВыбора.ОткрытьМодально(); //***AL 180926 ### .ОткрытьМодально();	
КонецПроцедуры

Процедура Оплаты2йТраншОплатаНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ФормаВыбора = Документы.ПлатежноеПоручениеВходящее.ПолучитьФормуВыбора("ФормаВыбора");
	ФормаВыбора.Отбор.Организация.Установить(ЭлементыФормы.Оплаты2йТранш.ТекущиеДанные.Организация);
	ФормаВыбора.Отбор.Контрагент.Установить(БизнесПроцесс.Лид);
	Элемент.Значение=ФормаВыбора.ОткрытьМодально(); //***AL 180926 ### .ОткрытьМодально();	
КонецПроцедуры

Процедура Счета1йТраншАктНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ФормаВыбора = Документы.РеализацияТоваровУслуг.ПолучитьФормуВыбора("ФормаВыбора");
	ФормаВыбора.Отбор.Организация.Установить(ЭлементыФормы.Счета1йТранш.ТекущиеДанные.Организация);
	ФормаВыбора.Отбор.Контрагент.Установить(ЗадачаОбъект.БизнесПроцесс.Лид);
	Элемент.Значение=ФормаВыбора.ОткрытьМодально(); //***AL 180926 ### 	.ОткрытьМодально();	
КонецПроцедуры

Процедура Счета1йТраншСчетНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ФормаВыбора = Документы.СчетНаОплатуПокупателю.ПолучитьФормуВыбора("ФормаВыбора");
	ФормаВыбора.Отбор.Организация.Установить(ЭлементыФормы.Счета1йТранш.ТекущиеДанные.Организация);
	ФормаВыбора.Отбор.Контрагент.Установить(ЗадачаОбъект.БизнесПроцесс.Лид);
	Элемент.Значение=ФормаВыбора.ОткрытьМодально(); //***AL 180926 ### .ОткрытьМодально();	
КонецПроцедуры

Процедура ДействияФормыПечать(Кнопка)
	Если ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.Выписка_2Т тогда
		ТекСтр=ЭлементыФормы.Счета2йТранш.ТекущиеДанные;
		ТекКол=ЭлементыФормы.Счета2йТранш.ТекущаяКолонка.Имя;
	ИначеЕсли 	ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.ВыставлениеСчтов тогда
		ТекСтр=ЭлементыФормы.Счета1йТранш.ТекущиеДанные;
		ТекКол=ЭлементыФормы.Счета1йТранш.ТекущаяКолонка.Имя;
	КонецЕсли;		
	Если ТекСтр<>неопределено тогда
		Если ТекКол="Акт" тогда
			 ТекСтр.Акт.ПолучитьОбъект().Печать("Акт",1,Ложь);
		КонецЕсли;	
		Если ТекКол="Счет" тогда
			 ТекСтр.Счет.ПолучитьОбъект().Печать("Счет",1,Ложь);
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

Процедура ДействияФормыСохранитьПакетДокументов(Кнопка)
	Если ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя=ЭлементыФормы.ОсновнаяПанель.Страницы.Выписка_2Т.Имя тогда
		ТекСтр=ЭлементыФормы.Счета2йТранш.ТекущиеДанные;
		ТекКол=ЭлементыФормы.Счета2йТранш.ТекущаяКолонка.Имя;
		Транш=2;
		Суффикс=?(ТекСтр.Организация=ЗадачаОбъект.БизнесПроцесс.ОрганизацияООО,"","_22");
	ИначеЕсли 	ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница.Имя=ЭлементыФормы.ОсновнаяПанель.Страницы.ВыставлениеСчтов.Имя тогда
		ТекСтр=ЭлементыФормы.Счета1йТранш.ТекущиеДанные;
		ТекКол=ЭлементыФормы.Счета1йТранш.ТекущаяКолонка.Имя;
		Транш=1;
		Суффикс=?(ТекСтр.Номенклатура.НоменклатурнаяГруппа=Справочники.НоменклатурныеГруппы.ПустаяСсылка(),"","_1");
	КонецЕсли;		

	Для Каждого стр из Услуги Цикл
		Если стр.Этап=Транш тогда
			Если ЗначениеЗаполнено(стр.Акт) тогда
				тд=Стр.Акт.ПолучитьОбъект().ПечатьАктаОбОказанииУслуг();
				ИмяФайла=ДополнительныеФункции.ПолучитьИмяФайлаДокумента(ЗадачаОбъект.БизнесПроцесс.Лид,Строка(Перечисления.ОписаниеФайла.Акт)+"-"+Формат(стр.Этап,"ЧДЦ=0; ЧН=; ЧГ=0")+"_"+СокрЛП(Стр.Организация.Наименование),".pdf");
				тд.Записать(ИмяФайла,ТипФайлаТабличногоДокумента.PDF);
			КонецЕсли;
			Если ЗначениеЗаполнено(стр.Счет) тогда
				ИмяФайла=ДополнительныеФункции.ПолучитьИмяФайлаДокумента(ЗадачаОбъект.БизнесПроцесс.Лид,Строка(Перечисления.ОписаниеФайла.Счет)+"-"+Формат(стр.НомерСтроки,"ЧДЦ=0; ЧН=; ЧГ=0")+"_"+СокрЛП(Стр.Организация.Наименование),".pdf");
				тд=стр.Счет.ПолучитьОбъект().ПечатьСчетаЗаказа("Счет");
				тд.Записать(ИмяФайла,ТипФайлаТабличногоДокумента.PDF);
			КонецЕсли;
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

Процедура ДействияФормыОтправитьДокументы(Кнопка)
		СтруктураНовогоПисьма = Новый Структура;
		СписокКому            = Новый СписокЗначений;
		СписокВложений        = Новый СписокЗначений;
		Адрес = УправлениеЭлектроннойПочтой.ОпределитьАдресПолучателя(ЗадачаОбъект.БизнесПроцесс.Лид);
		Если НЕ ПустаяСтрока(Адрес) Тогда
			СписокКому.Добавить(Адрес, ЗадачаОбъект.БизнесПроцесс.Лид.Наименование);
		ИНаче
			Предупреждение("Нет почтового адреса получателя!",300,"Внимание!");
			возврат;
		КонецЕсли;
		СтруктураНовогоПисьма.Вставить("Кому", СписокКому);
		
		ТекКаталог=УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнойКаталогФайловЛида"); 
		Если ТекКаталог<>Неопределено и  не ПустаяСтрока(ТекКаталог) тогда
			ТекКаталог=ТекКаталог+"\"+ЗадачаОбъект.БизнесПроцесс.Лид.Наименование+" ("+ЗадачаОбъект.БизнесПроцесс.Лид.Код+")";
 			КаталогНаДиске = Новый Файл(ТекКаталог);
    		Если КаталогНаДиске.Существует() Тогда				
				 ВсеФайлы=НайтиФайлы(ТекКаталог, "*.*"); 
				 Для Каждого Ф из ВсеФайлы Цикл
					  СписокВложений.Добавить(ф);
				 КонецЦикла;
			КонецЕсли;	
		КонецЕсли;	
		СтруктураНовогоПисьма.Вставить("СписокФайловВложений", СписокВложений);
		Тело="Добрый день  ! 
		| Отправлю Вам договора, с которыми необходимо ознакомиться.
		| После ознакомления необходимо распечатать два договора с дополнениями к ним, а также АКТ , 
		| подписать и  отправить Новой почтой по адресу 
		| г.Харьков, ул. Клочковская, 111-А, Бизнес центр <Тетрис>, 15 этаж, 27 офис 
		| курьерской доставкой  по безналичному расчету со стороны компании Selfinvest.
		| В течении 3-х рабочих дней, после получения договора, Вам необходимо оплатить по 2-м счетам 
		| и отправить фото чеков в Viber. Также приложите, пожалуйста, ксерокопию паспорта Украины 
		| (1-2 страницы, прописка) и идентификационный код. ";
		
		СтруктураНовогоПисьма.Вставить("Тело", Тело);
		Тема="Документы от SelfInvest";
		СтруктураНовогоПисьма.Вставить("Тема", Тема);
		УправлениеЭлектроннойПочтой.НаписатьПисьмо(ПараметрыСеанса.ТекущийПользователь, СтруктураНовогоПисьма,,, (НЕ ПустаяСтрока(Адрес)));
КонецПроцедуры

Процедура ПросмотретьАнкетуНажатие(Элемент)
	ДополнительныеФункции.ПечатьАнекты(БизнесПроцесс.Лид);	
КонецПроцедуры

Процедура ОтправкаАнкетыНажатие(Элемент)
		СтруктураНовогоПисьма = Новый Структура;
		СписокКому            = Новый СписокЗначений;
		СписокВложений        = Новый СписокЗначений;
		Адрес = УправлениеЭлектроннойПочтой.ОпределитьАдресПолучателя(ЗадачаОбъект.БизнесПроцесс.Лид);
		Если НЕ ПустаяСтрока(Адрес) Тогда
			СписокКому.Добавить(Адрес, ЗадачаОбъект.БизнесПроцесс.Лид.Наименование);
		ИНаче
			Предупреждение("Нет почтового адреса получателя!",300,"Внимание!");
			возврат;
		КонецЕсли;
		СтруктураНовогоПисьма.Вставить("Кому", СписокКому);
		ТекКаталог=УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнойКаталогФайловЛида"); 
		Если ТекКаталог<>Неопределено и  не ПустаяСтрока(ТекКаталог) тогда
			ТекКаталог=ТекКаталог+"\"+ЗадачаОбъект.БизнесПроцесс.Лид.Наименование+" ("+ЗадачаОбъект.БизнесПроцесс.Лид.Код+")";
 			КаталогНаДиске = Новый Файл(ТекКаталог);
    		Если КаталогНаДиске.Существует() Тогда				
				 ВсеФайлы=НайтиФайлы(ТекКаталог, "*.*"); 
				 Для Каждого Ф из ВсеФайлы Цикл
					Если Найти(Ф.Имя,"Анкета") >0 тогда
					  	СписокВложений.Добавить(ф);
					КонецЕсли;	
				 КонецЦикла;
			КонецЕсли;	
		КонецЕсли;	
		СтруктураНовогоПисьма.Вставить("СписокФайловВложений", СписокВложений);
		ИмяКлиента="";
		ФамилияКлиента="";
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФИОФизЛицСрезПоследних.Период,
		|	ФИОФизЛицСрезПоследних.ФизЛицо,
		|	ФИОФизЛицСрезПоследних.Фамилия,
		|	ФИОФизЛицСрезПоследних.Имя,
		|	ФИОФизЛицСрезПоследних.Отчество
		|ИЗ
		|	РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ФизЛицо = &Клиент) КАК ФИОФизЛицСрезПоследних";
		
		Запрос.УстановитьПараметр("Дата", ТекущаяДата());
		Запрос.УстановитьПараметр("Клиент", ЗадачаОбъект.БизнесПроцесс.Лид);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ИмяКлиента=ВыборкаДетальныеЗаписи.Имя;
			ФамилияКлиента=ВыборкаДетальныеЗаписи.Фамилия;
		КонецЦикла;

		Если ПустаяСтрока(ИмяКлиента) тогда
			Предупреждение("Не заполнены реквизиты клиента!");
			ИмяКлиента=ЗадачаОбъект.БизнесПроцесс.Лид.Наименование;
		КонецЕсли;
		текПольз=глЗначениеПеременной("глТекущийПользователь");
		Тело="Здравствуйте, "+ИмяКлиента+". <br> <br> <br>     В приложении находится анкета. Необходимо заполнить и отправить ее нам на электронную почту.<br>
				| Пожалуйста, указывайте только точные данные.<br> 
				| Укажите полное название ВУЗа, факультета и специальности в соответствии с официальными названиями.<br>
				| Информацию о дата поступления и дате окончания ВУЗа вы можете найти в вашем студенческом билете (при его наличие). <br>
				| При его отсутствии, данные необходимо уточнить в деканате вашего ученого заведения.<br>
				| Также, просим вас прикрепить фото или скан копию вашего загран паспорта.  <br> 
				| Перед отправкой обязательно проверьте анкету еще раз, так как на ее основе будет создано резюме и заполнены документы необходимые для оформления рабочего разрешения.<br>
				| В теме письма укажите <<Заполненная биография ("+ИмяКлиента+ " "+ФамилияКлиента+").  <br>  <br>   
				| Если возникнут вопросы, пишите.   <br>  <br>   
				|
				| С уважением,   <br>
				|  "+текПольз+".   <br>
				| Менеджер отдела сопровождения клиентов   <br>
				| Компания «Selfinvest»   <br>";
				
		СтруктураНовогоПисьма.Вставить("Тело", Тело);
		Тема="Анкета от SelfInvest для заполнения "+ЗадачаОбъект.БизнесПроцесс.Лид.Наименование;
		СтруктураНовогоПисьма.Вставить("Тема", Тема);
		УправлениеЭлектроннойПочтой.НаписатьПисьмо(ПараметрыСеанса.ТекущийПользователь, СтруктураНовогоПисьма,,, (НЕ ПустаяСтрока(Адрес)));
		//***AL 181015 ### 	создадим событие отправки письма
		ДополнительныеФункции.СоздатьСобытиеПочтаОтправлена(Ссылка.ТочкаМаршрута.НаименованиеЗадачи+"  по электронной почте "+ ЗадачаОбъект.БизнесПроцесс.Лид.Наименование,
		" ",ЗадачаОбъект.БизнесПроцесс.Лид);
		
КонецПроцедуры

Процедура ДействияФормыКлиент(Кнопка)
	МКли=БизнесПроцесс.Лид.ПолучитьФорму("ФормаЭлемента");
	МКли.ОткрытьМодально();//***AL 180926 ###
КонецПроцедуры

Процедура СделкаРаботодателяВакансияПриИзменении(Элемент)
	Если Элемент.Значение<> Документы.СделкиРаботодателей.ПустаяСсылка() тогда
		РаботодательВакансия=Элемент.Значение.Контрагент;
	КонецЕсли;	
КонецПроцедуры

Процедура СделкаРаботодателяВакансияНачалоВыбора(Элемент, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(РаботодательВакансия) тогда
		СтандартнаяОбработка=Ложь;
		ФормаВыбора = Документы.СделкиРаботодателей.ПолучитьФормуВыбора();
		ФормаВыбора.Отбор.Контрагент.Установить(Работодатель);
		Элемент.Значение=ФормаВыбора.ОткрытьМодально();
	КонецЕсли;	
КонецПроцедуры

Процедура РаботодательВакансияНачалоВыбора(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ФормаВыбора = Справочники.Контрагенты.ПолучитьФормуВыбора();
	ФормаВыбора.Отбор.ОсновнойВидДеятельности.Установить(Справочники.ВидыДеятельностиКонтрагентов.НайтиПоКоду("000000002"));
	ФормаВыбора.ЭлементыФормы.СправочникСписок.ИерархическийПросмотр=Ложь;
	Элемент.Значение=ФормаВыбора.ОткрытьМодально();
КонецПроцедуры

Процедура ОтправкаВакансииНажатие(Элемент)
		СтруктураНовогоПисьма = Новый Структура;
		СписокКому            = Новый СписокЗначений;
		СписокВложений        = Новый СписокЗначений;
		Адрес = УправлениеЭлектроннойПочтой.ОпределитьАдресПолучателя(ЗадачаОбъект.БизнесПроцесс.Лид);
		Если НЕ ПустаяСтрока(Адрес) Тогда
			СписокКому.Добавить(Адрес, ЗадачаОбъект.БизнесПроцесс.Лид.Наименование);
		ИНаче
			Предупреждение("Нет почтового адреса получателя!",300,"Внимание!");
			возврат;
		КонецЕсли;
		СтруктураНовогоПисьма.Вставить("Кому", СписокКому);
		ТекКаталог=УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнойКаталогФайловЛида"); 
		//Если ТекКаталог<>Неопределено и  не ПустаяСтрока(ТекКаталог) тогда
		//	ТекКаталог=ТекКаталог+"\"+ЗадачаОбъект.БизнесПроцесс.Лид.Наименование+" ("+ЗадачаОбъект.БизнесПроцесс.Лид.Код+")";
		//КаталогНаДиске = Новый Файл(ТекКаталог);
		//	Если КаталогНаДиске.Существует() Тогда				
		//		 ВсеФайлы=НайтиФайлы(ТекКаталог, "*.*"); 
		//		 Для Каждого Ф из ВсеФайлы Цикл
		//			Если Найти(Ф.Имя,"Анкета") >0 тогда
		//			  	СписокВложений.Добавить(ф);
		//			КонецЕсли;	
		//		 КонецЦикла;
		//	КонецЕсли;	
		//КонецЕсли;	
		//СтруктураНовогоПисьма.Вставить("СписокФайловВложений", СписокВложений);
		Тело="Здравствуйте Уважаемый  "+ЗадачаОбъект.БизнесПроцесс.Лид.Наименование+"!";
		СтруктураНовогоПисьма.Вставить("Тело", Тело);
		Тема="Описание вакансии от SelfInvest";
		СтруктураНовогоПисьма.Вставить("Тема", Тема);
		УправлениеЭлектроннойПочтой.НаписатьПисьмо(ПараметрыСеанса.ТекущийПользователь, СтруктураНовогоПисьма,,, (НЕ ПустаяСтрока(Адрес)));
		//***AL 181015 ### 	создадим событие отправки письма
		ДополнительныеФункции.СоздатьСобытиеПочтаОтправлена(Ссылка.ТочкаМаршрута.НаименованиеЗадачи+"  по электронной почте "+ ЗадачаОбъект.БизнесПроцесс.Лид.Наименование,
		" ",ЗадачаОбъект.БизнесПроцесс.Лид);
		
КонецПроцедуры

Процедура ВакансияПринятаПриИзменении(Элемент)
	ЭлементыФормы.ВакансияОтклонена.Значение= не Элемент.Значение;
КонецПроцедуры


Процедура ВакансияОтклоненаПриИзменении(Элемент)
	ЭлементыФормы.ВакансияПринята.Значение= не Элемент.Значение;	
КонецПроцедуры

Процедура ДействияФормыСнятьВыполнение(Кнопка)
	Выполнена=Ложь;
КонецПроцедуры


Процедура ПриЗаписи(Отказ)
		Если  ЭлементыФормы.ОсновнаяПанель.ТекущаяСтраница=ЭлементыФормы.ОсновнаяПанель.Страницы.ЗнаниеЯзыков И Выполнена тогда 				
	        отказ=не ЗначениеЗаполнено(ЭлементыФормы.УровеньЗнанияАнглийскогоЯзыка.Значение)
			или не ЗначениеЗаполнено(ЭлементыФормы.УровеньЗнанияНемецкогоЯзыка.Значение) или
			ЭлементыФормы.КолВакансий.Значение=0; 
			Если не отказ тогда
				БП=БизнесПроцесс.ПолучитьОбъект();
				БП.УровеньЗнанияАнглийскогоЯзыка=ЭлементыФормы.УровеньЗнанияАнглийскогоЯзыка.Значение;
				БП.УровеньЗнанияНемецкогоЯзыка=ЭлементыФормы.УровеньЗнанияНемецкогоЯзыка.Значение;
				БП.НачисленоВакансий=ЭлементыФормы.КолВакансий.Значение;
				БП.Записать();
				мЛид=БизнесПроцесс.Лид.ПолучитьОбъект();
				мЛид.УровеньЗнанияАнглийскогоЯзыка	=	ЭлементыФормы.УровеньЗнанияАнглийскогоЯзыка.Значение;
				мЛид.УровеньЗнанияНемецкогоЯзыка	=	ЭлементыФормы.УровеньЗнанияНемецкогоЯзыка.Значение;
				мЛид.Записать();
			Иначе
				Предупреждение("Не заполненф ключевые данные!"+Символы.ПС+"Выполнение не возможно!",300,"Внимание!");
			КонецЕсли;
	КонецЕсли;			
КонецПроцедуры


Процедура УтвержденМинТрудаПриИзменении(Элемент)
	Если Элемент.Значение тогда
		ЭлементыФормы.МинТрудаМеняетСроки.Значение=Ложь
	КонецЕсли;	
КонецПроцедуры


Процедура МинТрудаМеняетСрокиПриИзменении(Элемент)
	Если Элемент.Значение тогда
		ЭлементыФормы.УтвержденМинТруда.Значение=Ложь
	КонецЕсли;	
КонецПроцедуры

Процедура ПросмотретьАктНажатие(Элемент)
	//*** создание файла акта дод 2 ;		
	Для Каждого стр из Услуги Цикл
		Если стр.Этап=1 тогда
			Если Стр.Организация=БизнесПроцесс.ОрганизацияФОП 	тогда
				Если не ЗначениеЗаполнено(стр.Акт)  тогда
					стр.Акт=ДополнительныеФункции.СоздатьАкт(Стр.Организация,БизнесПроцесс.Лид,стр.Сумма,стр.Номенклатура,БизнесПроцесс.Ссылка);					
				КонецЕсли;	
				тд=Стр.Акт.ПолучитьОбъект().ПечатьАктаОбОказанииУслуг();
				ИмяФайла=ДополнительныеФункции.ПолучитьИмяФайлаДокумента(ЗадачаОбъект.БизнесПроцесс.Лид,Строка(Перечисления.ОписаниеФайла.Акт)+"-"+Формат(2,"ЧДЦ=0; ЧН=; ЧГ=0")+"_"+СокрЛП(Стр.Организация.Наименование),".pdf");
				тд.Записать(ИмяФайла,ТипФайлаТабличногоДокумента.PDF);
				ЗапуститьПриложение(ИмяФайла);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ОтправкаАктНажатие(Элемент)
		СтруктураНовогоПисьма = Новый Структура;
		СписокКому            = Новый СписокЗначений;
		СписокВложений        = Новый СписокЗначений;
		Адрес = УправлениеЭлектроннойПочтой.ОпределитьАдресПолучателя(ЗадачаОбъект.БизнесПроцесс.Лид);
		Если НЕ ПустаяСтрока(Адрес) Тогда
			СписокКому.Добавить(Адрес, ЗадачаОбъект.БизнесПроцесс.Лид.Наименование);
		ИНаче
			Предупреждение("Нет почтового адреса получателя!",300,"Внимание!");
			возврат;
		КонецЕсли;
		СтруктураНовогоПисьма.Вставить("Кому", СписокКому);
		ТекКаталог=УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнойКаталогФайловЛида"); 
		Если ТекКаталог<>Неопределено и  не ПустаяСтрока(ТекКаталог) тогда
			ТекКаталог=ТекКаталог+"\"+ЗадачаОбъект.БизнесПроцесс.Лид.Наименование+" ("+ЗадачаОбъект.БизнесПроцесс.Лид.Код+")";
 			КаталогНаДиске = Новый Файл(ТекКаталог);
			
			Если КаталогНаДиске.Существует() Тогда	
				 ИмяФайла=ДополнительныеФункции.ПолучитьИмяФайлаДокумента(ЗадачаОбъект.БизнесПроцесс.Лид,Строка(Перечисления.ОписаниеФайла.Акт)+"-"+Формат(2,"ЧДЦ=0; ЧН=; ЧГ=0")+"_"+СокрЛП(БизнесПроцесс.ОрганизацияФОП.Наименование),".pdf");
				 МойФ=Новый Файл(ИмяФайла);
				 ВсеФайлы=НайтиФайлы(ТекКаталог, "*.*"); 
				 Для Каждого Ф из ВсеФайлы Цикл
					Если Найти(Ф.Имя,МойФ.Имя) >0 тогда
					  	СписокВложений.Добавить(ф);
					КонецЕсли;	
				 КонецЦикла;
			КонецЕсли;	
		КонецЕсли;	
		СтруктураНовогоПисьма.Вставить("СписокФайловВложений", СписокВложений);
		ИмяКлиента="";
		ФамилияКлиента="";
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФИОФизЛицСрезПоследних.Период,
		|	ФИОФизЛицСрезПоследних.ФизЛицо,
		|	ФИОФизЛицСрезПоследних.Фамилия,
		|	ФИОФизЛицСрезПоследних.Имя,
		|	ФИОФизЛицСрезПоследних.Отчество
		|ИЗ
		|	РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ФизЛицо = &Клиент) КАК ФИОФизЛицСрезПоследних";
		
		Запрос.УстановитьПараметр("Дата", ТекущаяДата());
		Запрос.УстановитьПараметр("Клиент", ЗадачаОбъект.БизнесПроцесс.Лид);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ИмяКлиента=ВыборкаДетальныеЗаписи.Имя;
			ФамилияКлиента=ВыборкаДетальныеЗаписи.Фамилия;
		КонецЦикла;

		Если ПустаяСтрока(ИмяКлиента) тогда
			Предупреждение("Не заполнены реквизиты клиента!");
			ИмяКлиента=ЗадачаОбъект.БизнесПроцесс.Лид.Наименование;
		КонецЕсли;
		текПольз=глЗначениеПеременной("глТекущийПользователь");
		Тело="Здравствуйте, "+ИмяКлиента+". <br> <br> <br>     В приложении находится акт в соответствии с условиями договора его необходимо распечатать, подписать и сделать сканкопию.   Бумажный экземпляр необходимо отправить нам почтой, а сканкопию на электронную почту.<br>
				| В теме письма укажите <<Акт 2  ("+ИмяКлиента+ " "+ФамилияКлиента+").  <br>  <br>   
				| Если возникнут вопросы, пишите.   <br>  <br>   
				|
				| С уважением,   <br>
				|  "+текПольз+".   <br>
				| Менеджер отдела сопровождения клиентов   <br>
				| Компания «Selfinvest»   <br>";
				
		СтруктураНовогоПисьма.Вставить("Тело", Тело);
		Тема="Акт от SelfInvest для подписи "+ЗадачаОбъект.БизнесПроцесс.Лид.Наименование;
		СтруктураНовогоПисьма.Вставить("Тема", Тема);
		УправлениеЭлектроннойПочтой.НаписатьПисьмо(ПараметрыСеанса.ТекущийПользователь, СтруктураНовогоПисьма,,, (НЕ ПустаяСтрока(Адрес)));
		//***AL 181015 ### 	создадим событие отправки письма
		ДополнительныеФункции.СоздатьСобытиеПочтаОтправлена(Ссылка.ТочкаМаршрута.НаименованиеЗадачи+"  по электронной почте "+ ЗадачаОбъект.БизнесПроцесс.Лид.Наименование,
		" ",ЗадачаОбъект.БизнесПроцесс.Лид);
КонецПроцедуры


