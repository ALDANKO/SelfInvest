Функция ВерхнийРодитель(Ссылка) Экспорт
	Возврат ?(Ссылка.Родитель.Пустая(), Ссылка, ВерхнийРодитель(Ссылка.Родитель));
КонецФункции

Функция СоздатьСчет(ОрганизацияАкта,КонтрагентАкта,СуммаАкта,ЮрУслуга,Док) Экспорт
	ДокСчет=Документы.СчетНаОплатуПокупателю.СоздатьДокумент();
	ДокСчет.АвторасчетНДС=Ложь;
	ДокСчет.ВалютаДокумента=Справочники.Валюты.НайтиПоКоду("980");
	ДокСчет.Дата=ТекущаяДата();
	ДокСчет.ДатаОплаты=ТекущаяДата();
	ДокСчет.ДатаОтгрузки=ТекущаяДата();
	ДокСчет.Организация=ОрганизацияАкта;
	ДокСчет.Контрагент = КонтрагентАкта;
	ДокСчет.КратностьВзаиморасчетов=1;
	ДокСчет.СтруктурнаяЕдиница=ДокСчет.Организация.ОсновнойБанковскийСчет;
	ДокСчет.КурсВзаиморасчетов=1;
	ДокСчет.Ответственный=глЗначениеПеременной("глТекущийПользователь");
	ДокСчет.ДоговорКонтрагента=НайтиДоговор(ОрганизацияАкта,ДокСчет.Контрагент,Док);
	ДокСчет.Комментарий=" Сделка Лида № "+Док.Номер;
	ДокСчет.Склад=Справочники.Склады.НайтиПоКоду("000000001");
	ДокСчет.СуммаДокумента=СуммаАкта;
	услуга=ДокСчет.Услуги.Добавить();
	услуга.Количество=1;
	услуга.Номенклатура=ЮрУслуга;
	услуга.Содержание  =СокрЛП(ЮрУслуга.ДополнительноеОписаниеНоменклатуры);
	услуга.СтавкаНДС=Перечисления.СтавкиНДС.БезНДС;
	услуга.Цена=СуммаАкта;
	услуга.Сумма=СуммаАкта;
	ДокСчет.Записать(РежимЗаписиДокумента.Запись);
	Возврат ДокСчет.Ссылка;
КонецФункции

Функция СоздатьАкт(ОрганизацияАкта,КонтрагентАкта,СуммаАкта,ЮрУслуга,Док) Экспорт
	ДокРеал=Документы.РеализацияТоваровУслуг.СоздатьДокумент();
	ДокРеал.АвторасчетНДС=Ложь;
	ДокРеал.ВалютаДокумента=Справочники.Валюты.НайтиПоКоду("980");
	ДокРеал.ВидОперации=Перечисления.ВидыОперацийРеализацияТоваров.ПродажаКомиссия;
	ДокРеал.ВидПередачи=Перечисления.ВидыПередачиТоваров.СоСклада;
	ДокРеал.Дата=ТекущаяДата();
	ДокРеал.Организация=ОрганизацияАкта;
	ДокРеал.Контрагент = КонтрагентАкта;
	ДокРеал.КурсВзаиморасчетов=1;
	ДокРеал.КратностьВзаиморасчетов=1;
	ДокРеал.Ответственный=глЗначениеПеременной("глТекущийПользователь");
	ДокРеал.ДоговорКонтрагента= НайтиДоговор(ОрганизацияАкта,ДокРеал.Контрагент,Док);
	ДокРеал.Комментарий=" Сделка Лида № "+Док.Номер;
	ДокРеал.ОтражатьВУправленческомУчете=Истина;
	ДокРеал.ОтражатьВБухгалтерскомУчете=Истина;
	ДокРеал.Склад=Справочники.Склады.НайтиПоКоду("000000001");
	ДокРеал.СуммаДокумента=СуммаАкта;
	услуга=ДокРеал.Услуги.Добавить();
	услуга.Количество=1;
	услуга.Номенклатура=ЮрУслуга;
	услуга.Содержание  = услуга.Номенклатура.ДополнительноеОписаниеНоменклатуры;
	услуга.СтавкаНДС=Перечисления.СтавкиНДС.БезНДС;
	услуга.Цена=СуммаАкта;
	услуга.Сумма=СуммаАкта;
	ДокРеал.Записать(РежимЗаписиДокумента.Проведение,РежимПроведенияДокумента.Оперативный);
	Возврат ДокРеал.Ссылка;
КонецФункции

Функция НайтиДоговор(ОрганизацияДог,КАДог,Док) Экспорт
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Владелец = &Владелец
		|	И ДоговорыКонтрагентов.Организация = &Организация";
	
	Запрос.УстановитьПараметр("Владелец",КАДог);
	Запрос.УстановитьПараметр("Организация", ОрганизацияДог);
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() тогда
		Договор=СоздатьДоговор(КАДог,ОрганизацияДог,Док);
	Иначе	
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		Договор=ВыборкаДетальныеЗаписи.Ссылка;
		Если ТипЗнч(Док)=Тип("БизнесПроцессСсылка.СделкаЛида") тогда
			    Дог=Договор.ПолучитьОбъект();
				Если ОрганизацияДог=Док.ОрганизацияООО Тогда 
					Дог.Дата = Док.ДатаДогООО;
					Дог.Номер= Док.ДоговорООО;
				ИначеЕсли 	ОрганизацияДог=Док.ОрганизацияФОП Тогда 
					Дог.Дата = Док.ДатаДогФОП;
					Дог.Номер= Док.ДоговорФОП;
				КонецЕсли;
				Дог.Записать()
		КонецЕсли;			
		
	КонецЕсли;
	возврат Договор;
КонецФункции

Функция СоздатьДоговор(КА,ОрганизацияДог,Док) Экспорт
	Если ТипЗНч(КА.Ссылка)<>Тип("СправочникСсылка.Контрагенты") или 
		КА.Ссылка=Справочники.Контрагенты.ПустаяСсылка() или
		ТипЗНч(ОрганизацияДог.Ссылка)<>Тип("СправочникСсылка.Организации") или 
		ОрганизацияДог.Ссылка=Справочники.Организации.ПустаяСсылка() тогда
		Сообщить("Не заполнены ключевые реквизиты!");
		Возврат неопределено;	
	КонецЕсли;	
	Дог=Справочники.ДоговорыКонтрагентов.СоздатьЭлемент();
	Дог.ВалютаВзаиморасчетов=Справочники.Валюты.НайтиПоКоду("980");
	Дог.ВедениеВзаиморасчетов=Перечисления.ВедениеВзаиморасчетовПоДоговорам.ПоДоговоруВЦелом;
	Дог.ВидДоговора=Перечисления.ВидыДоговоровКонтрагентов.СПокупателем;
	Дог.Наименование=КА.Наименование+" по сделке  № "+Док.Номер+" с "+Док.Работодатель.Наименование;
	Дог.Владелец=КА;
	Дог.Организация=ОрганизацияДог;
	Дог.ВидУсловийДоговора=Перечисления.ВидыУсловийДоговоровВзаиморасчетов.БезДополнительныхУсловий;
	Если ТипЗнч(Док)=Тип("БизнесПроцессСсылка.СделкаЛида") тогда
		Если ОрганизацияДог=Док.ОрганизацияООО Тогда 
			Дог.Дата =Док.ДатаДогООО;
			Дог.Номер=Док.ДоговорООО;
		ИначеЕсли 	ОрганизацияДог=Док.ОрганизацияФОП Тогда 
			Дог.Дата = Док.ДатаДогФОП;
			Дог.Номер= Док.ДоговорФОП;
		КонецЕсли;
	КонецЕсли;
	Дог.Записать();
	
	Возврат Дог.Ссылка;
КонецФункции

Функция ВыборДатыВремениИзВыпадающегоСписка(Элемент, СтандартнаяОбработка, Форма) Экспорт

	СтандартнаяОбработка = Ложь;

	СписокВремен = Новый СписокЗначений;

	Если Не ЗначениеЗаполнено(Элемент.Значение) Тогда
		Элемент.Значение = НачалоМинуты(ТекущаяДата());
	КонецЕсли;

	Если ДеньГода(Элемент.Значение) = ДеньГода(ТекущаяДата()) Тогда

		Если Минута(ТекущаяДата()) > 30 Тогда
			ВремяСписка = НачалоМинуты(КонецЧаса(ТекущаяДата()) + 60);
		Иначе
			ВремяСписка = НачалоМинуты(КонецЧаса(ТекущаяДата()) - 29*60);
		КонецЕсли;

	Иначе
		ВремяСписка = НачалоДня(Элемент.Значение);
	КонецЕсли;

	Пока НачалоЧаса(ВремяСписка) < КонецДня(Элемент.Значение) Цикл

		СписокВремен.Добавить(ВремяСписка, Формат(ВремяСписка,"ДФ='дд.ММ.гггг ЧЧ:мм'"));
		ВремяСписка = ВремяСписка + 30*60;

	КонецЦикла;

	ВыбранноеВремя = Форма.ВыбратьИзСписка(СписокВремен, Элемент);

	Возврат ВыбранноеВремя;

КонецФункции // ВыборДатыВремениИзВыпадающегоСписка()

Функция ПечатьДоговорФОП(Лид,Организация,Сумма,Сумма2) Экспорт 
	Попытка
		//Получаем макет из двоичных данных
		Шаблон =ПолучитьОбщийМакет("ДогФОП_д1");
		ИмяФайла=ПолучитьИмяФайлаДокумента(Лид,СокрЛП(Организация.Наименование)+"_"+Строка(Перечисления.ОписаниеФайла.ДоговорФОП)+"_1",".doc");
		ИмяФайлаPDF=ПолучитьИмяФайлаДокумента(Лид,СокрЛП(Организация.Наименование)+"_"+Строка(Перечисления.ОписаниеФайла.ДоговорФОП)+"_1",".pdf");
		//ИмяФайла = ПолучитьИмяВременногоФайла(".doc");
		Шаблон.Записать(ИмяФайла);
		Word = Шаблон.Получить();
		СсылкаМакет = Word.Application.Documents(1); 
		СсылкаМакет.Activate();  
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Дата,
		|	ДоговорыКонтрагентов.Номер
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Владелец = &Лид
		|	И ДоговорыКонтрагентов.Организация = &Организация";
		
		Запрос.УстановитьПараметр("Лид", Лид);
		Запрос.УстановитьПараметр("Организация", Организация);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		НомерДоговора="";
		ДатаДоговора=Дата(1,1,1);
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			НомерДоговора=СокрЛП(ВыборкаДетальныеЗаписи.Номер);
			ДатаДоговора=ВыборкаДетальныеЗаписи.Дата;
		КонецЦикла;
		
		Word.Bookmarks("Номер").Select(); 
		Word.Application.Selection.TypeText(НомерДоговора); 
		
		Word.Bookmarks("Номер1").Select(); 
		Word.Application.Selection.TypeText(НомерДоговора); 
		
		Word.Bookmarks("Номер2").Select(); 
		Word.Application.Selection.TypeText(НомерДоговора); 

		Word.Bookmarks("Дата").Select(); 
		Word.Application.Selection.TypeText(СокрЛП(Формат(ДатаДоговора, "Л=uk_UA; ДЛФ=DD")));
		
		Word.Bookmarks("Дата1").Select(); 
		Word.Application.Selection.TypeText(СокрЛП(Формат(ДатаДоговора, "Л=uk_UA; ДЛФ=DD")));
		
		Word.Bookmarks("Дата2").Select(); 
		Word.Application.Selection.TypeText(СокрЛП(Формат(ДатаДоговора, "Л=uk_UA; ДЛФ=DD")));
		
		ИмяЛида="";
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФИОФизЛицСрезПоследних.Период,
		|	ФИОФизЛицСрезПоследних.ФизЛицо,
		|	ФИОФизЛицСрезПоследних.Фамилия КАК Фамилия,
		|	ФИОФизЛицСрезПоследних.Имя КАК Имя,
		|	ФИОФизЛицСрезПоследних.Отчество КАК Отчество
		|ИЗ
		|	РегистрСведений.ФИОФизЛиц.СрезПоследних(&ТекДата, ФизЛицо = &Лид) КАК ФИОФизЛицСрезПоследних";
		
		Запрос.УстановитьПараметр("Лид", Лид);
		Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ИмяЛида=ВыборкаДетальныеЗаписи.Фамилия+" "+
				ВыборкаДетальныеЗаписи.Имя+" "+
				ВыборкаДетальныеЗаписи.Отчество;
		КонецЦикла;
		
		Если не ЗначениеЗаполнено(ИмяЛида) тогда
				ИмяЛида=Лид.НаименованиеПолное;
				Сообщить("Внимание по "+ Лид.Наименование + "не внесены ФИО!!",СтатусСообщения.Внимание);
		КонецЕсли;		
		// в метод Bookmarks передаем название "закладки" 
		Word.Bookmarks("Лид").Select(); 
		Word.Application.Selection.TypeText(ИмяЛида); 
		
		Word.Bookmarks("Лид1").Select(); 
		Word.Application.Selection.TypeText(ИмяЛида); 
		
		Word.Bookmarks("Лид2").Select(); 
		Word.Application.Selection.TypeText(ИмяЛида); 
		
		Word.Bookmarks("Лид3").Select(); 
		Word.Application.Selection.TypeText(ИмяЛида); 

		ДатаРождения=Формат(Лид.ДатаРождения,"ДФ=dd.MM.yyyy");
		
		Word.Bookmarks("ДатаРождения1").Select(); 
		Word.Application.Selection.TypeText(ДатаРождения); 
		
		Word.Bookmarks("ДатаРождения2").Select(); 
		Word.Application.Selection.TypeText(ДатаРождения); 

		Word.Bookmarks("ДатаРождения3").Select(); 
		Word.Application.Selection.TypeText(ДатаРождения); 
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтрагентыДокументыЛида.Ссылка,
		|	КонтрагентыДокументыЛида.НомерСтроки,
		|	КонтрагентыДокументыЛида.ДокументВид,
		|	КонтрагентыДокументыЛида.ДокументСерия,
		|	КонтрагентыДокументыЛида.ДокументНомер,
		|	КонтрагентыДокументыЛида.ДокументДатаВыдачи,
		|	КонтрагентыДокументыЛида.ДокументКемВыдан,
		|	КонтрагентыДокументыЛида.ДатаРегистрации,
		|	КонтрагентыДокументыЛида.Гражданство
		|ИЗ
		|	Справочник.Контрагенты.ДокументыЛида КАК КонтрагентыДокументыЛида
		|ГДЕ
		|	КонтрагентыДокументыЛида.Ссылка = &Лид
		|	И КонтрагентыДокументыЛида.ДокументВид.Наименование = ""Паспорт Украины""";
		
		Запрос.УстановитьПараметр("Лид", Лид.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() тогда
			Сообщить("Внимание по "+ Лид.Наименование + "не внесены данные паспорта!",СтатусСообщения.Внимание);
		КонецЕсли;	
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		СерияПаспорта="";
		НомерПаспорта="";
		ПаспортКемВыдан="";
		ПаспортДата= "";
		СерияНомерПаспорта="";
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СерияПаспорта=ВыборкаДетальныеЗаписи.ДокументСерия;
			НомерПаспорта=ВыборкаДетальныеЗаписи.ДокументНомер;
			ПаспортКемВыдан=ВыборкаДетальныеЗаписи.ДокументКемВыдан;
			ПаспортДата= ВыборкаДетальныеЗаписи.ДокументДатаВыдачи;
		КонецЦикла;
		Word.Bookmarks("СерияПаспорта").Select(); 
		Word.Application.Selection.TypeText(СерияПаспорта); 
		
		Word.Bookmarks("НомерПаспорта").Select(); 
		Word.Application.Selection.TypeText(НомерПаспорта); 
		
		СерияНомерПаспорта=СерияПаспорта+" "+НомерПаспорта;
		ПаспортКемВыдан=СокрЛП(ПаспортКемВыдан)+" "+Формат(ПаспортДата,"ДФ=dd.MM.yyyy");
		Word.Bookmarks("ПаспортВыдан").Select(); 
		Word.Application.Selection.TypeText(ПаспортКемВыдан); 
		
		Word.Bookmarks("ПаспортВыдан1").Select(); 
		Word.Application.Selection.TypeText(ПаспортКемВыдан); 
		
		Word.Bookmarks("ПаспортВыдан2").Select(); 
		Word.Application.Selection.TypeText(ПаспортКемВыдан); 
		
		Word.Bookmarks("ПаспортВыдан3").Select(); 
		Word.Application.Selection.TypeText(ПаспортКемВыдан); 
		
		
		Word.Bookmarks("ФОП").Select(); 
		//устанавливаем новое значение текста 
		Word.Application.Selection.TypeText(Организация.НаименованиеПолное); 
		
		Word.Bookmarks("Лицензия").Select(); 
		Word.Application.Selection.TypeText(Организация.Лицензия); 
		
	
		Word.Bookmarks("ФОП2").Select(); 
		Word.Application.Selection.TypeText(Организация.НаименованиеПолное); 
		
		Word.Bookmarks("ФОП3").Select(); 
		Word.Application.Selection.TypeText(Организация.НаименованиеПолное); 
		
		Word.Bookmarks("ФОП4").Select(); 
		Word.Application.Selection.TypeText(Организация.НаименованиеПолное); 
		
		Word.Bookmarks("ИНН").Select(); 
		Word.Application.Selection.TypeText(Организация.ИНН); 
		
		Word.Bookmarks("ИНН3").Select(); 
		Word.Application.Selection.TypeText(Организация.ИНН); 
		
		Word.Bookmarks("ИНН4").Select(); 
		Word.Application.Selection.TypeText(Организация.ИНН); 
		
		Word.Bookmarks("РасчСчет").Select(); 
		Word.Application.Selection.TypeText(Организация.ОсновнойБанковскийСчет.НомерСчета); 
		
		Word.Bookmarks("РасчСчет3").Select(); 
		Word.Application.Selection.TypeText(Организация.ОсновнойБанковскийСчет.НомерСчета); 
		
		Word.Bookmarks("РасчСчет4").Select(); 
		Word.Application.Selection.TypeText(Организация.ОсновнойБанковскийСчет.НомерСчета); 
		
		БанкОрганизации=СокрЛП(Организация.ОсновнойБанковскийСчет.Банк.Наименование)+" в м. Харків, код банку "+
		СокрЛП(Организация.ОсновнойБанковскийСчет.Банк.Код);
		
		Word.Bookmarks("Банк").Select(); 
		//ПАТ КБ «Приватбанк» в м. Харків, код банку 351533
		Word.Application.Selection.TypeText(БанкОрганизации); 
		
		Word.Bookmarks("Банк3").Select(); 
		Word.Application.Selection.TypeText(БанкОрганизации); 
		
		Word.Bookmarks("Банк4").Select(); 
		Word.Application.Selection.TypeText(БанкОрганизации); 
		
		Word.Bookmarks("ЮрАдрес").Select(); 
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтактнаяИнформация.Объект,
		|	КонтактнаяИнформация.Представление,
		|	КонтактнаяИнформация.Тип,
		|	КонтактнаяИнформация.Вид
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Объект = &Объект
		|	И КонтактнаяИнформация.Тип = &Тип
		|	И (КонтактнаяИнформация.Вид = &ВидЮр ИЛИ КонтактнаяИнформация.Вид = &ВидФакт)";
		
		
		ВидЮр=Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("000000011");
		ВидФакт=Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("000000009");
		Запрос.УстановитьПараметр("ВидЮр", ВидЮр);
		Запрос.УстановитьПараметр("ВидФакт",ВидФакт);
		Запрос.УстановитьПараметр("Объект", Организация);
		Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Адрес);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ЮрАдрес="";
		ФактАдрес="";
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ВыборкаДетальныеЗаписи.Вид=ВидЮр тогда
				ЮрАдрес=ВыборкаДетальныеЗаписи.Представление;
			ИначеЕсли 	ВыборкаДетальныеЗаписи.Вид=ВидФакт тогда
				ФактАдрес=ВыборкаДетальныеЗаписи.Представление;
			КонецЕсли;
		КонецЦикла;
		ЮрАдрес=СтрЗаменить(ЮрАдрес,"дом"," будинок ");
		Word.Application.Selection.TypeText(ЮрАдрес); 
		
		Word.Bookmarks("ЮрАдрес3").Select(); 
		Word.Application.Selection.TypeText(ЮрАдрес); 
		
		Word.Bookmarks("ЮрАдрес4").Select(); 
		Word.Application.Selection.TypeText(ЮрАдрес); 
		
		ФактАдрес=СтрЗаменить(ФактАдрес,"дом"," будинок ");
		Word.Bookmarks("ФактАдрес").Select(); 
		Word.Application.Selection.TypeText(ФактАдрес); 
		
		Word.Bookmarks("ФактАдрес3").Select(); 
		Word.Application.Selection.TypeText(ФактАдрес); 
		
		Word.Bookmarks("ФактАдрес4").Select(); 
		Word.Application.Selection.TypeText(ФактАдрес); 
		
		
		Word.Bookmarks("СерияНомерПаспорта1").Select(); 
		Word.Application.Selection.TypeText(СерияНомерПаспорта); 
		
		Word.Bookmarks("СерияНомерПаспорта2").Select(); 
		Word.Application.Selection.TypeText(СерияНомерПаспорта); 
		
		Word.Bookmarks("СерияНомерПаспорта3").Select(); 
		Word.Application.Selection.TypeText(СерияНомерПаспорта); 
		
		Word.Bookmarks("ИННЛида1").Select(); 
		Word.Application.Selection.TypeText(СокрЛП(Лид.ИНН)); 
		
		Word.Bookmarks("ИННЛида2").Select(); 
		Word.Application.Selection.TypeText(СокрЛП(Лид.ИНН)); 
		
		Word.Bookmarks("ИННЛида3").Select(); 
		Word.Application.Selection.TypeText(СокрЛП(Лид.ИНН)); 
		
		Word.Bookmarks("ИННЛида4").Select(); 
		Word.Application.Selection.TypeText(СокрЛП(Лид.ИНН)); 
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтактнаяИнформация.Объект,
		|	КонтактнаяИнформация.Представление,
		|	КонтактнаяИнформация.Тип,
		|	КонтактнаяИнформация.Вид
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Объект = &Объект
		|	И КонтактнаяИнформация.Тип = &Тип
		|	И КонтактнаяИнформация.Вид = &ВидЮр";
		
		
		ВидЮр=Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента;
		Запрос.УстановитьПараметр("ВидЮр", ВидЮр);
		Запрос.УстановитьПараметр("Объект", Лид);
		Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Адрес);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ЮрАдрес="";
		АдресЛида="";
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				АдресЛида=ВыборкаДетальныеЗаписи.Представление;
		КонецЦикла;
		
		АдресЛида=СтрЗаменить(АдресЛида,"дом"," будинок ");
		Word.Bookmarks("АдресЛида1").Select(); 
		Word.Application.Selection.TypeText(СокрЛП(АдресЛида)); 
		
		Word.Bookmarks("АдресЛида2").Select(); 
		Word.Application.Selection.TypeText(СокрЛП(АдресЛида)); 
		
		Word.Bookmarks("АдресЛида3").Select(); 
		Word.Application.Selection.TypeText(СокрЛП(АдресЛида)); 
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтактнаяИнформация.Объект,
		|	КонтактнаяИнформация.Представление,
		|	КонтактнаяИнформация.Тип,
		|	КонтактнаяИнформация.Вид
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Объект = &Объект
		|	И КонтактнаяИнформация.Тип = &Тип
		|	И КонтактнаяИнформация.Вид = &Вид";
		
		Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента);
		Запрос.УстановитьПараметр("Объект", Лид);
		Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Телефон);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ТелефонЛида="";
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				ТелефонЛида=ВыборкаДетальныеЗаписи.Представление;
		КонецЦикла;
		
		Word.Bookmarks("ТелефонЛида1").Select(); 
		Word.Application.Selection.TypeText(СокрЛП(ТелефонЛида)); 
		
		Word.Bookmarks("ТелефонЛида2").Select(); 
		Word.Application.Selection.TypeText(СокрЛП(ТелефонЛида)); 
		
		Word.Bookmarks("ТелефонЛида3").Select(); 
		Word.Application.Selection.TypeText(СокрЛП(ТелефонЛида)); 
		
		Word.Bookmarks("Сумма").Select(); 
		Word.Application.Selection.TypeText(Формат(Сумма,"ЧДЦ=2; ЧН=; ЧГ=3,0")); 
		
		Word.Bookmarks("Сумма2").Select(); 
		Word.Application.Selection.TypeText(Формат(Сумма2,"ЧДЦ=2; ЧН=; ЧГ=3,0")); 
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтактнаяИнформация.Объект,
		|	КонтактнаяИнформация.Представление,
		|	КонтактнаяИнформация.Тип,
		|	КонтактнаяИнформация.Вид
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Объект = &Объект
		|	И КонтактнаяИнформация.Тип = &Тип
		|	И КонтактнаяИнформация.Вид = &Вид";
		
		Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.АдресЭлектроннойПочтыКонтрагентаДляОбменаДокументами);
		Запрос.УстановитьПараметр("Объект", Лид);
		Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ПочтаЛида="";
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				ПочтаЛида=ВыборкаДетальныеЗаписи.Представление;
		КонецЦикла;

		Word.Bookmarks("EmailЛида2").Select(); 
		Word.Application.Selection.TypeText(СокрЛП(ПочтаЛида)); 
		Word.Bookmarks("EmailЛида3").Select(); 
		Word.Application.Selection.TypeText(СокрЛП(ПочтаЛида)); 
		Word.Bookmarks("EmailЛида4").Select(); 
		Word.Application.Selection.TypeText(СокрЛП(ПочтаЛида)); 

		
		Запрос = Новый Запрос; 
		Запрос.УстановитьПараметр("Объект", Организация.Ссылка); 
		Запрос.Текст = "ВЫБРАТЬ
		|	ХранилищеДополнительнойИнформации.ИмяФайла КАК ИмяФайла,
		|	ХранилищеДополнительнойИнформации.Объект,
		|	ХранилищеДополнительнойИнформации.Хранилище,
		|	ХранилищеДополнительнойИнформации.ОписаниеФайла,
		|	ХранилищеДополнительнойИнформации.Наименование,
		|	ХранилищеДополнительнойИнформации.ВидДанных
		|ИЗ
		|	Справочник.ХранилищеДополнительнойИнформации КАК ХранилищеДополнительнойИнформации
		|ГДЕ
		|	ХранилищеДополнительнойИнформации.Объект = &Объект
		|	И ХранилищеДополнительнойИнформации.ОписаниеФайла = ЗНАЧЕНИЕ(Перечисление.ОписаниеФайла.ПодписьПечать)
		|	И ХранилищеДополнительнойИнформации.ВидДанных = ЗНАЧЕНИЕ(Перечисление.ВидыДополнительнойИнформацииОбъектов.Изображение)"; 
		
		ИзображениеПечати = Запрос.Выполнить().Выбрать(); 
		Если ИзображениеПечати.Количество()>0 тогда 
			ИзображениеПечати.Следующий(); 
			ИмяФайлаКартинки =  КаталогВременныхФайлов()+"\"+ИзображениеПечати.ИмяФайла;
			моеХранилище 	= ИзображениеПечати.Хранилище;
			ФайлНаДиске = Новый Файл(ИмяФайлаКартинки);
			Если ТипЗнч(моеХранилище) <> Тип("ДвоичныеДанные") Тогда
				ДвоичныеДанные = ИзображениеПечати.Хранилище.Получить();
			Иначе
				ДвоичныеДанные = ИзображениеПечати.Хранилище;
			КонецЕсли;		
			ДвоичныеДанные.Записать(ИмяФайлаКартинки);
			Word.Bookmarks("Печать1").Select(); 
			НашаКартинка = Word.Application.Selection.Range.InlineShapes.AddPicture(ИмяФайлаКартинки);
			НашаКартинка.Height = 45;  
       		НашаКартинка.Width = 80;
			НашаКартинка.LockAspectRatio = Истина;
			
			Word.Bookmarks("Печать2").Select(); 
			НашаКартинка = Word.Application.Selection.Range.InlineShapes.AddPicture(ИмяФайлаКартинки);
			НашаКартинка.Height = 45;  
			НашаКартинка.Width = 80;
			НашаКартинка.LockAspectRatio = Истина;
			
			Word.Bookmarks("Печать3").Select(); 
			НашаКартинка = Word.Application.Selection.Range.InlineShapes.AddPicture(ИмяФайлаКартинки);
			НашаКартинка.Height = 45;  
			НашаКартинка.Width = 80;
			НашаКартинка.LockAspectRatio = Истина;

		КонецЕсли;
		//включаем видимость приложения 
		//СсылкаМакет.SaveAs(ИмяФайла);
		СсылкаМакет.SaveAs(ИмяФайлаPDF,17);
		СсылкаМакет.Application.Visible = Ложь;  
		СсылкаМакет.Close(0); 
		ЗапуститьПриложение(ИмяФайлаPDF);
	Исключение 
		Сообщить("Ошибка при запуске приложения "+ОписаниеОшибки());
	КонецПопытки;
КонецФункции

Функция ПечатьДоговорТОВ(Лид,Сумма,Пакет,Курс) Экспорт 
	Попытка
		//Получаем макет из двоичных данных
		Суфф=Прав(СокрЛП(Пакет.Наименование),3);
		Шаблон =ПолучитьОбщийМакет("ДогТОВ"+Суфф);
		ИмяФайла	=ПолучитьИмяФайлаДокумента(Лид,Перечисления.ОписаниеФайла.ДоговорТОВ,".doc");
		ИмяФайлаPDF	=ПолучитьИмяФайлаДокумента(Лид,Перечисления.ОписаниеФайла.ДоговорТОВ,".pdf");
		//Sleep(30);
		Шаблон.Записать(ИмяФайла);
		//Sleep(3);
		Word = Шаблон.Получить();
		СсылкаМакет = Word.Application.Documents(1); 
		СсылкаМакет.Activate();  
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Дата,
		|	ДоговорыКонтрагентов.Номер
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Владелец = &Лид
		|	И ДоговорыКонтрагентов.Организация = &Организация";
		
		Запрос.УстановитьПараметр("Лид", Лид);
		Запрос.УстановитьПараметр("Организация", Справочники.Организации.НайтиПоКоду("000000001"));
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		НомерДоговора="";
		ДатаДоговора=Дата(1,1,1);
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			НомерДоговора=СокрЛП(ВыборкаДетальныеЗаписи.Номер);
			ДатаДоговора=ВыборкаДетальныеЗаписи.Дата;
		КонецЦикла;
		Word.Bookmarks("Номер").Select(); 
		Word.Application.Selection.TypeText(НомерДоговора); 
		
		Word.Bookmarks("Дата").Select(); 
		Word.Application.Selection.TypeText(СокрЛП(Формат(ДатаДоговора, "Л=uk_UA; ДЛФ=DD")));
		
	//***
	//ЧислоМесяц = СокрЛП(Формат(ДатаДоговора, "Л="+КодЯзыкаПечать+"; ДФ=ддММММ"));
	//ОбластьМакета.Параметры.Месяц = Прав(ЧислоМесяц, СтрДлина(ЧислоМесяц)-2);
	//ОбластьМакета.Параметры.Число = Лев(ЧислоМесяц, 2);
	//ОбластьМакета.Параметры.Год = СокрЛП(Формат(Шапка.ДатаДокумента, "Л=uk_UA; ДЛФ=DD"));

		
		
		
		ИмяЛида="";
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФИОФизЛицСрезПоследних.Период,
		|	ФИОФизЛицСрезПоследних.ФизЛицо,
		|	ФИОФизЛицСрезПоследних.Фамилия КАК Фамилия,
		|	ФИОФизЛицСрезПоследних.Имя КАК Имя,
		|	ФИОФизЛицСрезПоследних.Отчество КАК Отчество
		|ИЗ
		|	РегистрСведений.ФИОФизЛиц.СрезПоследних(&ТекДата, ФизЛицо = &Лид) КАК ФИОФизЛицСрезПоследних";
		
		Запрос.УстановитьПараметр("Лид", Лид);
		Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ИмяЛида=ВыборкаДетальныеЗаписи.Фамилия+" "+
				ВыборкаДетальныеЗаписи.Имя+" "+
				ВыборкаДетальныеЗаписи.Отчество;
		КонецЦикла;
		Если не ЗначениеЗаполнено(ИмяЛида) тогда
				ИмяЛида=Лид.НаименованиеПолное;
				Сообщить("Внимание по "+ Лид.Наименование + "не внесены ФИО!!",СтатусСообщения.Внимание);
		КонецЕсли;		
		// в метод Bookmarks передаем название "закладки" 
		Word.Bookmarks("Лид").Select(); 
		Word.Application.Selection.TypeText(ИмяЛида); 
		Word.Bookmarks("Лид2").Select(); 
		Word.Application.Selection.TypeText(ИмяЛида); 
		ДатаРождения=Формат(Лид.ДатаРождения,"ДФ=dd.MM.yyyy");
		Word.Bookmarks("ДатаРождения2").Select(); 
		Word.Application.Selection.TypeText(ДатаРождения); 
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтрагентыДокументыЛида.Ссылка,
		|	КонтрагентыДокументыЛида.НомерСтроки,
		|	КонтрагентыДокументыЛида.ДокументВид,
		|	КонтрагентыДокументыЛида.ДокументСерия,
		|	КонтрагентыДокументыЛида.ДокументНомер,
		|	КонтрагентыДокументыЛида.ДокументДатаВыдачи,
		|	КонтрагентыДокументыЛида.ДокументКемВыдан,
		|	КонтрагентыДокументыЛида.ДатаРегистрации,
		|	КонтрагентыДокументыЛида.Гражданство
		|ИЗ
		|	Справочник.Контрагенты.ДокументыЛида КАК КонтрагентыДокументыЛида
		|ГДЕ
		|	КонтрагентыДокументыЛида.Ссылка = &Лид
		|	И КонтрагентыДокументыЛида.ДокументВид.Наименование = ""Паспорт Украины""";
		
		Запрос.УстановитьПараметр("Лид", Лид.Ссылка);
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() тогда
			Сообщить("Внимание по "+ Лид.Наименование + "не внесены данные паспорта!",СтатусСообщения.Внимание);
		КонецЕсли;	
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		СерияПаспорта="";
		НомерПаспорта="";
		ПаспортКемВыдан="";
		ПаспортДата= "";
		СерияНомерПаспорта="";
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СерияПаспорта=ВыборкаДетальныеЗаписи.ДокументСерия;
			НомерПаспорта=ВыборкаДетальныеЗаписи.ДокументНомер;
			ПаспортКемВыдан=ВыборкаДетальныеЗаписи.ДокументКемВыдан;
			ПаспортДата= ВыборкаДетальныеЗаписи.ДокументДатаВыдачи;
		КонецЦикла;
		Word.Bookmarks("СерияПаспорта").Select(); 
		Word.Application.Selection.TypeText(СерияПаспорта); 
		
		Word.Bookmarks("НомерПаспорта").Select(); 
		Word.Application.Selection.TypeText(НомерПаспорта); 
		
		СерияНомерПаспорта=СерияПаспорта+" "+НомерПаспорта;
		ПаспортКемВыдан=СокрЛП(ПаспортКемВыдан)+" "+Формат(ПаспортДата,"ДФ=dd.MM.yyyy");
		Word.Bookmarks("ПаспортВыдан").Select(); 
		Word.Application.Selection.TypeText(ПаспортКемВыдан); 
		
		Word.Bookmarks("СерияНомерПаспорта2").Select(); 
		Word.Application.Selection.TypeText(СерияНомерПаспорта); 
		
		Word.Bookmarks("ПаспортВыдан2").Select(); 
		Word.Application.Selection.TypeText(ПаспортКемВыдан); 
		
		Word.Bookmarks("ИННЛида2").Select(); 
		Word.Application.Selection.TypeText(СокрЛП(Лид.ИНН)); 
		
		Word.Bookmarks("ИННЛида3").Select(); 
		Word.Application.Selection.TypeText(СокрЛП(Лид.ИНН)); 
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтактнаяИнформация.Объект,
		|	КонтактнаяИнформация.Представление,
		|	КонтактнаяИнформация.Тип,
		|	КонтактнаяИнформация.Вид
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Объект = &Объект
		|	И КонтактнаяИнформация.Тип = &Тип
		|	И КонтактнаяИнформация.Вид = &ВидЮр";
		
		ВидЮр=Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента;
		Запрос.УстановитьПараметр("ВидЮр", ВидЮр);
		Запрос.УстановитьПараметр("Объект", Лид);
		Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Адрес);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ЮрАдрес="";
		АдресЛида="";
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				АдресЛида=ВыборкаДетальныеЗаписи.Представление;
		КонецЦикла;
		АдресЛида=СтрЗаменить(АдресЛида,"дом"," будинок ");	
		Word.Bookmarks("АдресЛида2").Select(); 
		Word.Application.Selection.TypeText(СокрЛП(АдресЛида)); 
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтактнаяИнформация.Объект,
		|	КонтактнаяИнформация.Представление,
		|	КонтактнаяИнформация.Тип,
		|	КонтактнаяИнформация.Вид
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Объект = &Объект
		|	И КонтактнаяИнформация.Тип = &Тип
		|	И КонтактнаяИнформация.Вид = &Вид";
		
		Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента);
		Запрос.УстановитьПараметр("Объект", Лид);
		Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Телефон);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ТелефонЛида="";
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				ТелефонЛида=ВыборкаДетальныеЗаписи.Представление;
		КонецЦикла;
		Word.Bookmarks("ТелефонЛида2").Select(); 
		Word.Application.Selection.TypeText(СокрЛП(ТелефонЛида)); 
		Word.Bookmarks("Сумма").Select(); 
		Word.Application.Selection.TypeText(Формат(Сумма,"ЧДЦ=2; ЧН=; ЧГ=3,0")); 
		Word.Bookmarks("Курс").Select(); 
		Word.Application.Selection.TypeText(Формат(Курс,"ЧДЦ=6; ЧН=; ЧГ=3,0")); 		
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтактнаяИнформация.Объект,
		|	КонтактнаяИнформация.Представление,
		|	КонтактнаяИнформация.Тип,
		|	КонтактнаяИнформация.Вид
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Объект = &Объект
		|	И КонтактнаяИнформация.Тип = &Тип
		|	И КонтактнаяИнформация.Вид = &Вид";
		
		Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.АдресЭлектроннойПочтыКонтрагентаДляОбменаДокументами);
		Запрос.УстановитьПараметр("Объект", Лид);
		Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ПочтаЛида="";
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				ПочтаЛида=ВыборкаДетальныеЗаписи.Представление;
		КонецЦикла;

		Word.Bookmarks("EmailЛида2").Select(); 
		Word.Application.Selection.TypeText(СокрЛП(ПочтаЛида)); 
		
		//включаем видимость приложения 
		//СсылкаМакет.SaveAs(ИмяФайла);
		СсылкаМакет.SaveAs(ИмяФайлаPDF,17);
		СсылкаМакет.Application.Visible = Ложь;  
		СсылкаМакет.Close(0); 
		ЗапуститьПриложение(ИмяФайлаPDF);
		
	Исключение 
		Сообщить("Ошибка при запуске приложения "+ОписаниеОшибки());
	КонецПопытки;
КонецФункции

Функция ПечатьДод2ФОП(Лид,Организация,Пакет,Сумма) Экспорт 
	Попытка
		Суфф=Прав(СокрЛП(Пакет.Наименование),3);
		Шаблон =ПолучитьОбщийМакет("Дод2_"+Суфф);
		//ИмяФайла = ПолучитьИмяВременногоФайла(".doc");
		ИмяФайла=ПолучитьИмяФайлаДокумента(Лид,СокрЛП(Организация.Наименование)+"_"+Строка(Перечисления.ОписаниеФайла.ДоговорФОП)+"_3",".doc");
		ИмяФайлаPDF=ПолучитьИмяФайлаДокумента(Лид,СокрЛП(Организация.Наименование)+"_"+Строка(Перечисления.ОписаниеФайла.ДоговорФОП)+"_3",".pdf");
		Шаблон.Записать(ИмяФайла);
		Word = Шаблон.Получить();
		СсылкаМакет = Word.Application.Documents(1); 
		СсылкаМакет.Activate();  
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Дата,
		|	ДоговорыКонтрагентов.Номер
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|ГДЕ
		|	ДоговорыКонтрагентов.Владелец = &Лид
		|	И ДоговорыКонтрагентов.Организация = &Организация";
		
		Запрос.УстановитьПараметр("Лид", Лид);
		Запрос.УстановитьПараметр("Организация", Организация);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		НомерДоговора="";
		ДатаДоговора=Дата(1,1,1);
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			НомерДоговора=СокрЛП(ВыборкаДетальныеЗаписи.Номер);
			ДатаДоговора=ВыборкаДетальныеЗаписи.Дата;
		КонецЦикла;
		Word.Bookmarks("Номер").Select(); 
		Word.Application.Selection.TypeText(НомерДоговора); 
		
		Word.Bookmarks("Дата").Select(); 
		Word.Application.Selection.TypeText(СокрЛП(Формат(ДатаДоговора, "Л=uk_UA; ДЛФ=DD")));
		
		ИмяЛида="";
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФИОФизЛицСрезПоследних.Период,
		|	ФИОФизЛицСрезПоследних.ФизЛицо,
		|	ФИОФизЛицСрезПоследних.Фамилия КАК Фамилия,
		|	ФИОФизЛицСрезПоследних.Имя КАК Имя,
		|	ФИОФизЛицСрезПоследних.Отчество КАК Отчество
		|ИЗ
		|	РегистрСведений.ФИОФизЛиц.СрезПоследних(&ТекДата, ФизЛицо = &Лид) КАК ФИОФизЛицСрезПоследних";
		
		Запрос.УстановитьПараметр("Лид", Лид);
		Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ИмяЛида=ВыборкаДетальныеЗаписи.Фамилия+" "+
				ВыборкаДетальныеЗаписи.Имя+" "+
				ВыборкаДетальныеЗаписи.Отчество;
		КонецЦикла;
		
		Если не ЗначениеЗаполнено(ИмяЛида) тогда
				ИмяЛида=Лид.НаименованиеПолное;
				Сообщить("Внимание по "+ Лид.Наименование + "не внесены ФИО!!",СтатусСообщения.Внимание);
		КонецЕсли;		
		// в метод Bookmarks передаем название "закладки" 
		Word.Bookmarks("Лид1").Select(); 
		Word.Application.Selection.TypeText(ИмяЛида); 
		
		ДатаРождения=Формат(Лид.ДатаРождения,"ДФ=dd.MM.yyyy");
		
		Word.Bookmarks("ДатаРождения1").Select(); 
		Word.Application.Selection.TypeText(ДатаРождения); 
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтрагентыДокументыЛида.Ссылка,
		|	КонтрагентыДокументыЛида.НомерСтроки,
		|	КонтрагентыДокументыЛида.ДокументВид,
		|	КонтрагентыДокументыЛида.ДокументСерия,
		|	КонтрагентыДокументыЛида.ДокументНомер,
		|	КонтрагентыДокументыЛида.ДокументДатаВыдачи,
		|	КонтрагентыДокументыЛида.ДокументКемВыдан,
		|	КонтрагентыДокументыЛида.ДатаРегистрации,
		|	КонтрагентыДокументыЛида.Гражданство
		|ИЗ
		|	Справочник.Контрагенты.ДокументыЛида КАК КонтрагентыДокументыЛида
		|ГДЕ
		|	КонтрагентыДокументыЛида.Ссылка = &Лид
		|	И КонтрагентыДокументыЛида.ДокументВид.Наименование = ""Паспорт Украины""";
		
		Запрос.УстановитьПараметр("Лид", Лид.Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() тогда
			Сообщить("Внимание по "+ Лид.Наименование + "не внесены данные паспорта!",СтатусСообщения.Внимание);
		КонецЕсли;	
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		СерияПаспорта="";
		НомерПаспорта="";
		ПаспортКемВыдан="";
		ПаспортДата= "";
		СерияНомерПаспорта="";
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			СерияПаспорта=ВыборкаДетальныеЗаписи.ДокументСерия;
			НомерПаспорта=ВыборкаДетальныеЗаписи.ДокументНомер;
			ПаспортКемВыдан=ВыборкаДетальныеЗаписи.ДокументКемВыдан;
			ПаспортДата= ВыборкаДетальныеЗаписи.ДокументДатаВыдачи;
		КонецЦикла;
		
		ПаспортКемВыдан=СокрЛП(ПаспортКемВыдан)+" "+Формат(ПаспортДата,"ДФ=dd.MM.yyyy");
		Word.Bookmarks("ПаспортВыдан1").Select(); 
		Word.Application.Selection.TypeText(ПаспортКемВыдан); 
		
		СерияНомерПаспорта=СерияПаспорта+" "+НомерПаспорта;				
		Word.Bookmarks("СерияНомерПаспорта1").Select(); 
		Word.Application.Selection.TypeText(СерияНомерПаспорта); 
		
		Word.Bookmarks("ФОП2").Select(); 
		Word.Application.Selection.TypeText(Организация.НаименованиеПолное); 
		
		
		Word.Bookmarks("ИНН").Select(); 
		Word.Application.Selection.TypeText(Организация.ИНН); 
		
		
		Word.Bookmarks("РасчСчет").Select(); 
		Word.Application.Selection.TypeText(Организация.ОсновнойБанковскийСчет.НомерСчета); 
		
		БанкОрганизации=СокрЛП(Организация.ОсновнойБанковскийСчет.Банк.Наименование)+" в м. Харків, код банку "+
		СокрЛП(Организация.ОсновнойБанковскийСчет.Банк.Код);
		
		Word.Bookmarks("Банк").Select(); 
		//ПАТ КБ «Приватбанк» в м. Харків, код банку 351533
		Word.Application.Selection.TypeText(БанкОрганизации); 
		
		
		Word.Bookmarks("ЮрАдрес").Select(); 
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтактнаяИнформация.Объект,
		|	КонтактнаяИнформация.Представление,
		|	КонтактнаяИнформация.Тип,
		|	КонтактнаяИнформация.Вид
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Объект = &Объект
		|	И КонтактнаяИнформация.Тип = &Тип
		|	И (КонтактнаяИнформация.Вид = &ВидЮр ИЛИ КонтактнаяИнформация.Вид = &ВидФакт)";
		
		
		ВидЮр=Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("000000011");
		ВидФакт=Справочники.ВидыКонтактнойИнформации.НайтиПоКоду("000000009");
		Запрос.УстановитьПараметр("ВидЮр", ВидЮр);
		Запрос.УстановитьПараметр("ВидФакт",ВидФакт);
		Запрос.УстановитьПараметр("Объект", Организация);
		Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Адрес);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ЮрАдрес="";
		ФактАдрес="";
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			Если ВыборкаДетальныеЗаписи.Вид=ВидЮр тогда
				ЮрАдрес=ВыборкаДетальныеЗаписи.Представление;
			ИначеЕсли 	ВыборкаДетальныеЗаписи.Вид=ВидФакт тогда
				ФактАдрес=ВыборкаДетальныеЗаписи.Представление;
			КонецЕсли;
		КонецЦикла;
		ЮрАдрес=СтрЗаменить(ЮрАдрес,"дом"," будинок ");	
		Word.Application.Selection.TypeText(ЮрАдрес); 
		
		ФактАдрес=СтрЗаменить(ФактАдрес,"дом"," будинок ");			
		Word.Bookmarks("ФактАдрес").Select(); 
		Word.Application.Selection.TypeText(ФактАдрес); 
		
		Word.Bookmarks("ИННЛида1").Select(); 
		Word.Application.Selection.TypeText(СокрЛП(Лид.ИНН)); 
		
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтактнаяИнформация.Объект,
		|	КонтактнаяИнформация.Представление,
		|	КонтактнаяИнформация.Тип,
		|	КонтактнаяИнформация.Вид
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Объект = &Объект
		|	И КонтактнаяИнформация.Тип = &Тип
		|	И КонтактнаяИнформация.Вид = &ВидЮр";
		
		
		ВидЮр=Справочники.ВидыКонтактнойИнформации.ЮрАдресКонтрагента;
		Запрос.УстановитьПараметр("ВидЮр", ВидЮр);
		Запрос.УстановитьПараметр("Объект", Лид);
		Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Адрес);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ЮрАдрес="";
		АдресЛида="";
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				АдресЛида=ВыборкаДетальныеЗаписи.Представление;
		КонецЦикла;
		АдресЛида=СтрЗаменить(АдресЛида,"дом"," будинок ");			
		Word.Bookmarks("АдресЛида1").Select(); 
		Word.Application.Selection.TypeText(СокрЛП(АдресЛида)); 
				
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтактнаяИнформация.Объект,
		|	КонтактнаяИнформация.Представление,
		|	КонтактнаяИнформация.Тип,
		|	КонтактнаяИнформация.Вид
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Объект = &Объект
		|	И КонтактнаяИнформация.Тип = &Тип
		|	И КонтактнаяИнформация.Вид = &Вид";
		
		Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.ТелефонКонтрагента);
		Запрос.УстановитьПараметр("Объект", Лид);
		Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.Телефон);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ТелефонЛида="";
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				ТелефонЛида=ВыборкаДетальныеЗаписи.Представление;
		КонецЦикла;
		
		Word.Bookmarks("ТелефонЛида1").Select(); 
		Word.Application.Selection.TypeText(СокрЛП(ТелефонЛида)); 
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтактнаяИнформация.Объект,
		|	КонтактнаяИнформация.Представление,
		|	КонтактнаяИнформация.Тип,
		|	КонтактнаяИнформация.Вид
		|ИЗ
		|	РегистрСведений.КонтактнаяИнформация КАК КонтактнаяИнформация
		|ГДЕ
		|	КонтактнаяИнформация.Объект = &Объект
		|	И КонтактнаяИнформация.Тип = &Тип
		|	И КонтактнаяИнформация.Вид = &Вид";
		
		Запрос.УстановитьПараметр("Вид", Справочники.ВидыКонтактнойИнформации.АдресЭлектроннойПочтыКонтрагентаДляОбменаДокументами);
		Запрос.УстановитьПараметр("Объект", Лид);
		Запрос.УстановитьПараметр("Тип", Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ПочтаЛида="";
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				ПочтаЛида=ВыборкаДетальныеЗаписи.Представление;
		КонецЦикла;

		Word.Bookmarks("EmailЛида2").Select(); 
		Word.Application.Selection.TypeText(СокрЛП(ПочтаЛида)); 
		
		Word.Bookmarks("Сумма").Select(); 
		Word.Application.Selection.TypeText(Формат(Сумма,"ЧДЦ=2; ЧН=; ЧГ=3,0")); 
		
		Запрос = Новый Запрос; 
		Запрос.УстановитьПараметр("Объект", Организация.Ссылка); 
		Запрос.Текст = "ВЫБРАТЬ
		|	ХранилищеДополнительнойИнформации.ИмяФайла КАК ИмяФайла,
		|	ХранилищеДополнительнойИнформации.Объект,
		|	ХранилищеДополнительнойИнформации.Хранилище,
		|	ХранилищеДополнительнойИнформации.ОписаниеФайла,
		|	ХранилищеДополнительнойИнформации.Наименование,
		|	ХранилищеДополнительнойИнформации.ВидДанных
		|ИЗ
		|	Справочник.ХранилищеДополнительнойИнформации КАК ХранилищеДополнительнойИнформации
		|ГДЕ
		|	ХранилищеДополнительнойИнформации.Объект = &Объект
		|	И ХранилищеДополнительнойИнформации.ОписаниеФайла = ЗНАЧЕНИЕ(Перечисление.ОписаниеФайла.ПодписьПечать)
		|	И ХранилищеДополнительнойИнформации.ВидДанных = ЗНАЧЕНИЕ(Перечисление.ВидыДополнительнойИнформацииОбъектов.Изображение)"; 
		
		ИзображениеПечати = Запрос.Выполнить().Выбрать(); 
		Если ИзображениеПечати.Количество()>0 тогда 
			ИзображениеПечати.Следующий(); 
			ИмяФайлаКартинки =  КаталогВременныхФайлов()+"\"+ИзображениеПечати.ИмяФайла;
			моеХранилище 	= ИзображениеПечати.Хранилище;
			ФайлНаДиске = Новый Файл(ИмяФайлаКартинки);
			Если ТипЗнч(моеХранилище) <> Тип("ДвоичныеДанные") Тогда
				ДвоичныеДанные = ИзображениеПечати.Хранилище.Получить();
			Иначе
				ДвоичныеДанные = ИзображениеПечати.Хранилище;
			КонецЕсли;		
			ДвоичныеДанные.Записать(ИмяФайлаКартинки);
			Word.Bookmarks("Печать1").Select(); 
			НашаКартинка = Word.Application.Selection.Range.InlineShapes.AddPicture(ИмяФайлаКартинки);
			НашаКартинка.Height = 45;  
       		НашаКартинка.Width = 80;
			НашаКартинка.LockAspectRatio = Истина;
		КонецЕсли;
		
		//включаем видимость приложения 
		//СсылкаМакет.SaveAs(ИмяФайла);
		СсылкаМакет.SaveAs(ИмяФайлаPDF,17);
		СсылкаМакет.Application.Visible = Ложь;  
		СсылкаМакет.Close(0); 
		ЗапуститьПриложение(ИмяФайлаPDF);
	Исключение 
		Сообщить("Ошибка при запуске приложения "+ОписаниеОшибки());
	КонецПопытки;
КонецФункции

Функция ПолучитьИмяФайлаДокумента(Лид,ВидДокумента,РасширениеФайла) Экспорт
	ТекКаталог=УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"),"ОсновнойКаталогФайловЛида"); 
	Если ТекКаталог=Неопределено или ПустаяСтрока(ТекКаталог) тогда
			ИмяФайла = ПолучитьИмяВременногоФайла(РасширениеФайла);
	Иначе
			ТекКаталог=ТекКаталог+"\"+Лид.Наименование+" ("+Лид.Код+")";
 			КаталогНаДиске = Новый Файл(ТекКаталог);
    		Если не КаталогНаДиске.Существует() Тогда				
				СоздатьКаталог(ТекКаталог);
			КонецЕсли;	
			ИмяФайла =ТекКаталог+"\"+Лид.Наименование+" ("+Лид.Код+")_"+ВидДокумента+"_"+Формат(ТекущаяДата(),"ДФ=ггММдд")+РасширениеФайла;
	КонецЕсли;
		
	Возврат ИмяФайла;
КонецФункции

Функция ПечатьАнекты(Лид) Экспорт 
	Попытка
		//Получаем макет из двоичных данных
		Шаблон =ПолучитьОбщийМакет("Анкета");
		ИмяФайла=ПолучитьИмяФайлаДокумента(Лид,Перечисления.ОписаниеФайла.Анкета,".doc");
		Шаблон.Записать(ИмяФайла);
		Word = Шаблон.Получить();
		СсылкаМакет = Word.Application.Documents(1); 
		СсылкаМакет.Activate();  
		ИмяЛида="";
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ФИОФизЛицСрезПоследних.Период,
		|	ФИОФизЛицСрезПоследних.ФизЛицо,
		|	ФИОФизЛицСрезПоследних.Фамилия КАК Фамилия,
		|	ФИОФизЛицСрезПоследних.Имя КАК Имя,
		|	ФИОФизЛицСрезПоследних.Отчество КАК Отчество
		|ИЗ
		|	РегистрСведений.ФИОФизЛиц.СрезПоследних(&ТекДата, ФизЛицо = &Лид) КАК ФИОФизЛицСрезПоследних";
		
		Запрос.УстановитьПараметр("Лид", Лид);
		Запрос.УстановитьПараметр("ТекДата", ТекущаяДата());
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ИмяЛида=ВыборкаДетальныеЗаписи.Фамилия+" "+
				ВыборкаДетальныеЗаписи.Имя+" "+
				ВыборкаДетальныеЗаписи.Отчество;
		КонецЦикла;
		Если не ЗначениеЗаполнено(ИмяЛида) тогда
				ИмяЛида=Лид.НаименованиеПолное;
				Сообщить("Внимание по "+ Лид.Наименование + "не внесены ФИО!!",СтатусСообщения.Внимание);
		КонецЕсли;		
		// в метод Bookmarks передаем название "закладки" 
		Word.Bookmarks("ФИО").Select(); 
		Word.Application.Selection.TypeText(ИмяЛида); 
		
		ДатаРождения=Формат(Лид.ДатаРождения,"ДФ=dd.MM.yyyy");
		Word.Bookmarks("ДатаРождения").Select(); 
		Word.Application.Selection.TypeText(ДатаРождения); 
		
		Word.Bookmarks("Английский").Select(); 
		Word.Application.Selection.TypeText(Строка(Лид.УровеньЗнанияАнглийскогоЯзыка)); 
		
		Word.Bookmarks("Немецкий").Select(); 
		Word.Application.Selection.TypeText(Строка(Лид.УровеньЗнанияНемецкогоЯзыка)); 
		
		//включаем видимость приложения 
		СсылкаМакет.SaveAs(ИмяФайла);
		СсылкаМакет.Application.Visible = Истина;  
	Исключение 
		Сообщить("Ошибка при запуске приложения "+ОписаниеОшибки());
	КонецПопытки;
КонецФункции

Процедура Sleep(сек) Экспорт
    нач=ТекущаяДата();
    Пока ТекущаяДата() - нач < сек Цикл
    КонецЦикла;    
КонецПроцедуры
//***AL 180925 ### 
Функция ЭтоНомерТелефона(СтрПоиска) Экспорт
	Результат=ложь;	
	СтрПоиска=Э_ТелефонияBinotel.Э_ПреобразоватьНомерТелефонаБезРазделителей(СтрПоиска);
	Если СтрДлина(СтрПоиска)>6 тогда
		Если СтрДлина(Число(СтрПоиска)) и СтрДлина(СтрПоиска) тогда
			Результат=Истина;	 
			возврат Результат;
		КонецЕсли;	 
	КонецЕсли;	 
	возврат Результат;
КонецФункции

Функция НайтиОтветственногоЗаВыпставлениеСчетов(Ссылка) Экспорт
	Ктоэто=Справочники.Пользователи.ПустаяСсылка();
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ   РАЗРЕШЕННЫЕ
		|	ЗадачиПользователя.Исполнитель,
		|	ЗадачиПользователя.Ссылка,
		|	ЗадачиПользователя.БизнесПроцесс,
		|	ЗадачиПользователя.ТочкаМаршрута,
		|	ЗадачиПользователя.Выполнена
		|ИЗ
		|	Задача.ЗадачиПользователя КАК ЗадачиПользователя
		|ГДЕ
		|	ЗадачиПользователя.ПометкаУдаления = ЛОЖЬ
		|	И ЗадачиПользователя.БизнесПроцесс = &БизнесПроцесс
		|	И ЗадачиПользователя.ТочкаМаршрута = &ТочкаМаршрута";
	
	Запрос.УстановитьПараметр("БизнесПроцесс", Ссылка);
	Запрос.УстановитьПараметр("ТочкаМаршрута", БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ВыставлениеСчетов);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Ктоэто=ВыборкаДетальныеЗаписи.Исполнитель;
	КонецЦикла;
	Возврат Ктоэто; 
КонецФункции

// Функция возвращает возможные счета учета расчетов с контрагентом
//
// Параметры:
//  Организация - по которой выполняется поиск
//  Контрагент  - по которому выполняется поиск
//  Договор     - по которому выполняется поиск
//
// Возвращаемое значение:
//  Структура - структура содержащая счета учета расчетов
// 
Функция ПолучитьСчетаРасчетовСКонтрагентом(Организация, Контрагент, Договор, ВалютаРегламентированногоУчета = Неопределено) Экспорт

	Если НЕ ЗначениеЗаполнено(ВалютаРегламентированногоУчета) тогда
		ВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	КонецЕсли;

	Результат = Новый Структура("
	|СчетРасчетов, СчетАвансов,
	|СчетРасчетовПокупателя, СчетАвансовПокупателя,
	|СчетУчетаТары, СчетУчетаТарыПокупателя,
	|СчетАвансовПоТаре, СчетАвансовПоТареПокупателя,
	|СчетРасчетовПриБартере, СчетАвансовПриБартере,
	|СчетРасчетовПокупателяПриБартере, СчетАвансовПокупателяПриБартере,
	|СчетУчетаНДСПриобретений,СчетУчетаНДСПриобретенийПодтвержденный,
	|СчетУчетаНДСПродаж,СчетУчетаНДСПродажПодтвержденный,
	|НалоговоеНазначениеПриобретений,НалоговоеНазначениеПриобретенийПоТаре,
	|НалоговоеНазначениеПродаж, НалоговоеНазначениеПродажПоТаре,
	|СтавкаНДСПриобретений,СтавкаНДСПродаж,
	|Организация, Контрагент, Договор, Амортизируется");
	//|Организация, Контрагент, Договор, ВидРасчетовПоДоговору, Амортизируется");

	//ВидРасчетовПоДоговору = ОпределениеВидаРасчетовПоПараметрамДоговора(Договор,ВалютаРегламентированногоУчета);

	СписокГруппКонтрагентов = ОбщегоНазначения.ПолучитьСписокВышестоящихГрупп(Контрагент);
	
	СписокГруппДоговоров = ОбщегоНазначения.ПолучитьСписокВышестоящихГрупп(Договор);
	
	Запрос    = Новый Запрос();
	Запрос.УстановитьПараметр("Организация",       Организация);
	Запрос.УстановитьПараметр("Контрагент",        Контрагент);
	Запрос.УстановитьПараметр("Договор",           Договор);
	//Запрос.УстановитьПараметр("ВидРасчетов",       ВидРасчетовПоДоговору);
	Запрос.УстановитьПараметр("ПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойКонтрагент",  Справочники.Контрагенты.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойДоговор",     Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	//Запрос.УстановитьПараметр("ПустойВидРасчетов", Перечисления.ВидыРасчетовПоДоговорам.ПустаяСсылка());
	
	ШаблонЗапросаБезГде =",
	|	СчетУчетаРасчетовСПоставщиком,
	|	СчетУчетаАвансовВыданных,
	|	СчетУчетаРасчетовСПокупателем,
	|	СчетУчетаАвансовПолученных,
	|	СчетУчетаРасчетовПоТареСПоставщиком,
	|	СчетУчетаАвансовПоТареВыданных,
	|	СчетУчетаРасчетовПоТареСПокупателем,
	|	СчетУчетаАвансовПоТареПолученных,
	|	СчетУчетаРасчетовСПоставщикомПриБартере,
	|	СчетУчетаРасчетовСПокупателемПриБартере,
	|	СчетУчетаНДСПриобретений,
	|	СчетУчетаНДСПриобретенийПодтвержденный,
	|	СчетУчетаНДСПродаж,
	|	СчетУчетаНДСПродажПодтвержденный,
	|	НалоговоеНазначениеПриобретений,
	|	НалоговоеНазначениеПриобретенийПоТаре,
	|	НалоговоеНазначениеПродаж,
	|   НалоговоеНазначениеПродажПоТаре,
	|	СтавкаНДСПриобретений,
	|	СтавкаНДСПродаж,
	|	Организация,
	|	Контрагент,
	|	Договор,
	|	Амортизируется
//	|  	,ВидРасчетовПоДоговору
	|
	|ИЗ
	|	РегистрСведений.СчетаУчетаРасчетовСКонтрагентами
	|";
	
	Индекс = 1;
		
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	" + Формат(Индекс,"ЧГ=0") + " КАК Приоритет" +
	ШаблонЗапросаБезГде + "
	|ГДЕ
	|	
	|	Организация = &Организация И
	|	Контрагент  = &Контрагент И
	|	Договор     = &Договор И НЕ &Договор = &ПустойДоговор
	|";
	
	Индекс = Индекс + 1;
	
	Для Каждого ГруппаДоговоров Из СписокГруппДоговоров Цикл
		
		Запрос.УстановитьПараметр("ГруппаДоговоров" + Индекс, ГруппаДоговоров);
		
		ТекстЗапроса = ТекстЗапроса + "
		|ОБЪЕДИНИТЬ ВСЕ	
		|
		|ВЫБРАТЬ
		|	" + Формат(Индекс,"ЧГ=0") +
		ШаблонЗапросаБезГде + "
		|ГДЕ
//		|	ВидРасчетовПоДоговору = &ВидРасчетов И
		|	Организация 		  = &Организация И
		|	Контрагент  		  = &Контрагент И
		|	Договор     		  = &ГруппаДоговоров" + Индекс + "
		|";
	
		Индекс = Индекс + 1;
	
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ОБЪЕДИНИТЬ ВСЕ	
	|
	|ВЫБРАТЬ
	|	" + Формат(Индекс,"ЧГ=0") +
	ШаблонЗапросаБезГде + "
	|ГДЕ
//	|	ВидРасчетовПоДоговору = &ВидРасчетов И
	|	Организация 		  = &Организация И
	|	Контрагент  		  = &Контрагент И
	|	Договор     		  = &ПустойДоговор
	|";
	
	Индекс = Индекс + 1;
	
	Для Каждого ГруппаКонтрагентов Из СписокГруппКонтрагентов Цикл
		
		Запрос.УстановитьПараметр("ГруппаКонтрагентов" + Индекс, ГруппаКонтрагентов);
		
		ТекстЗапроса = ТекстЗапроса + "
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	" + Формат(Индекс,"ЧГ=0") +
		ШаблонЗапросаБезГде + "
		|ГДЕ
//		|	ВидРасчетовПоДоговору = &ВидРасчетов И
		|	Организация 		  = &Организация И
		|	Контрагент            = &ГруппаКонтрагентов" + Индекс + " И
		|	Договор     		  = &ПустойДоговор
		|";
	
		Индекс = Индекс + 1;
	
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	" + Формат(Индекс,"ЧГ=0") +
	ШаблонЗапросаБезГде + "
	|ГДЕ
//	|	ВидРасчетовПоДоговору = &ВидРасчетов И
	|	Организация 		  = &Организация И
	|	Контрагент  		  = &ПустойКонтрагент И
	|	Договор     		  = &ПустойДоговор
	|";
	
	Индекс = Индекс + 1;
	
	Для Каждого ГруппаДоговоров Из СписокГруппДоговоров Цикл
		
		Запрос.УстановитьПараметр("ГруппаДоговоров" + Индекс, ГруппаДоговоров);
		
		ТекстЗапроса = ТекстЗапроса + "
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	" + Формат(Индекс,"ЧГ=0") +
		ШаблонЗапросаБезГде + "
		|ГДЕ
//		|	ВидРасчетовПоДоговору = &ВидРасчетов И
		|	Организация 	 	  = &ПустаяОрганизация И
		|	Контрагент            = &Контрагент И
		|	Договор               = &ГруппаДоговоров" + Индекс + "
	    |";
		
		Индекс = Индекс + 1;
	
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	" + Формат(Индекс,"ЧГ=0") +
	ШаблонЗапросаБезГде + "
	|ГДЕ
//	|	ВидРасчетовПоДоговору = &ВидРасчетов И
	|	Организация 		  = &ПустаяОрганизация И
	|	Контрагент 			  = &Контрагент И
	|	Договор     		  = &ПустойДоговор
	|";
	
	Индекс = Индекс + 1;
	
	Для Каждого ГруппаКонтрагентов Из СписокГруппКонтрагентов Цикл
		
		Запрос.УстановитьПараметр("ГруппаКонтрагентов" + Индекс, ГруппаКонтрагентов);
		
		ТекстЗапроса = ТекстЗапроса + "
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	" + Формат(Индекс,"ЧГ=0") +
		ШаблонЗапросаБезГде + "
		|ГДЕ
//		|	ВидРасчетовПоДоговору = &ВидРасчетов И
		|	Организация           = &ПустаяОрганизация И
		|	Контрагент            = &ГруппаКонтрагентов" + Индекс + " И
		|	Договор               = &ПустойДоговор
		|";
		
		Индекс = Индекс + 1;
	
	КонецЦикла;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	" + Формат(Индекс,"ЧГ=0") +
	ШаблонЗапросаБезГде + "
	|ГДЕ
//	|	ВидРасчетовПоДоговору = &ВидРасчетов И
	|	Организация           = &ПустаяОрганизация И
	|	Контрагент            = &ПустойКонтрагент И
	|	Договор               = &ПустойДоговор
	|";
	
	Индекс = Индекс + 1;
	
	ТекстЗапроса = ТекстЗапроса + "
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	" + Формат(Индекс,"ЧГ=0") +
	ШаблонЗапросаБезГде + "
	|ГДЕ
//	|	ВидРасчетовПоДоговору = &ПустойВидРасчетов И
	|	Организация           = &ПустаяОрганизация И
	|	Контрагент            = &ПустойКонтрагент И
	|	Договор               = &ПустойДоговор
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет";
	
	Запрос.Текст = ТекстЗапроса;
	
	Выборка = Запрос.Выполнить().Выбрать();

	Если Выборка.Следующий() Тогда

		Результат.СчетРасчетов                     = Выборка.СчетУчетаРасчетовСПоставщиком;
		Результат.СчетАвансов                      = Выборка.СчетУчетаАвансовВыданных;
		Результат.СчетРасчетовПокупателя           = Выборка.СчетУчетаРасчетовСПокупателем;
		Результат.СчетАвансовПокупателя            = Выборка.СчетУчетаАвансовПолученных;
		
		Результат.СчетУчетаТары                    = Выборка.СчетУчетаРасчетовПоТареСПоставщиком;
		Результат.СчетАвансовПоТаре                = Выборка.СчетУчетаАвансовПоТареВыданных;
		Результат.СчетУчетаТарыПокупателя          = Выборка.СчетУчетаРасчетовПоТареСПокупателем;
		Результат.СчетАвансовПоТареПокупателя      = Выборка.СчетУчетаАвансовПоТареПолученных;
		
		Результат.СчетРасчетовПриБартере           = Выборка.СчетУчетаРасчетовСПоставщикомПриБартере;
		Результат.СчетАвансовПриБартере            = Выборка.СчетУчетаРасчетовСПокупателемПриБартере;
		Результат.СчетРасчетовПокупателяПриБартере = Выборка.СчетУчетаРасчетовСПокупателемПриБартере;
		Результат.СчетАвансовПокупателяПриБартере  = Выборка.СчетУчетаРасчетовСПоставщикомПриБартере;
		
		Результат.СчетУчетаНДСПриобретений            		= Выборка.СчетУчетаНДСПриобретений;
		Результат.СчетУчетаНДСПриобретенийПодтвержденный 	= Выборка.СчетУчетаНДСПриобретенийПодтвержденный;
		Результат.СчетУчетаНДСПродаж             			= Выборка.СчетУчетаНДСПродаж;
		Результат.СчетУчетаНДСПродажПодтвержденный          = Выборка.СчетУчетаНДСПродажПодтвержденный;
		
		Результат.НалоговоеНазначениеПриобретений    		= Выборка.НалоговоеНазначениеПриобретений;
		Результат.НалоговоеНазначениеПриобретенийПоТаре     = Выборка.НалоговоеНазначениеПриобретенийПоТаре;
		Результат.НалоговоеНазначениеПродаж    			    = Выборка.НалоговоеНазначениеПродаж;
		Результат.НалоговоеНазначениеПродажПоТаре           = Выборка.НалоговоеНазначениеПродажПоТаре;
		
		Результат.СтавкаНДСПриобретений	                = Выборка.СтавкаНДСПриобретений;
		Результат.СтавкаНДСПродаж            			= Выборка.СтавкаНДСПродаж;
		
		Результат.Амортизируется            			= Выборка.Амортизируется;
		
		Результат.Организация						= Выборка.Организация;
		Результат.Контрагент            			= Выборка.Контрагент;
		Результат.Договор            				= Выборка.Договор;
//		Результат.ВидРасчетовПоДоговору            	= Выборка.ВидРасчетовПоДоговору;
		
	КонецЕсли;

	Возврат Результат;

КонецФункции // ПолучитьСчетаРасчетовСКонтрагентом()

//Функция возвращает вид расчетов по договору
// Параметры
//		ДоговорКонтрагента 				- СправочникСсылка.ДоговорыКонтраентов
//		ВалютаРегламентированногоУчета 	- СправочникСсылка.Валюты
//
// Возвращаемое значение
//      ПеречилениеСсылка.ВидыРасчетовПоДоговорам
//
Функция ОпределениеВидаРасчетовПоПараметрамДоговора(ДоговорКонтрагента,ВалютаРегламентированногоУчета) Экспорт

	Если ДоговорКонтрагента.ВалютаВзаиморасчетов = ВалютаРегламентированногоУчета 
	 ИЛИ НЕ ЗначениеЗаполнено(ДоговорКонтрагента.ВалютаВзаиморасчетов) Тогда
		ВидРасчетовПоДоговору = Перечисления.ВидыРасчетовПоДоговорам.РасчетыВВалютеРегламентированногоУчета;

	Иначе
		ВидРасчетовПоДоговору = Перечисления.ВидыРасчетовПоДоговорам.РасчетыВИностраннойВалюте;

	Конецесли;

	Возврат ВидРасчетовПоДоговору;

КонецФункции

// Функция возвращает курс ставку НДС
//
// Параметры:
//  Валюта - СправочникСсылка.Валюты, валюта, по которой необходимо получить курс
//  ДатаКурса - Дата, календарная дата, на которую необходимо получить курс валюты
//
// Возвращаемое значение:
//	Курс переданной валюты на переданную дату, 1 в случае отсутствия значения.
//
Функция ПолучитьСтавкуНДС(СтавкаНДС) Экспорт

	Если СтавкаНДС = Перечисления.СтавкиНДС.НДС20 Тогда
		Возврат 20;
	КонецЕсли;
	
	Если СтавкаНДС = Перечисления.СтавкиНДС.НДС7 Тогда
		Возврат 7;
	КонецЕсли;
	
	Возврат 0;

КонецФункции // ПолучитьСтавкуНДС()

Функция НайтиБизнесПроцесс(Организация,Контрагент,Сумма) Экспорт 
	МойБП=Неопределено;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СделкаЛидаУслуги.Ссылка,
		|	СделкаЛидаУслуги.Сумма,
		|	СделкаЛидаУслуги.Организация,
		|	СделкаЛидаУслуги.Этап,
		|	СделкаЛидаУслуги.Оплата,
		|	СделкаЛидаУслуги.Ссылка.Лид
		|ИЗ
		|	БизнесПроцесс.СделкаЛида.Услуги КАК СделкаЛидаУслуги
		|ГДЕ
		|	СделкаЛидаУслуги.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И СделкаЛидаУслуги.Ссылка.Стартован = ИСТИНА
		|	И СделкаЛидаУслуги.Ссылка.Лид = &Контрагент
		|	И СделкаЛидаУслуги.Организация = &Организация
		|	И СделкаЛидаУслуги.Сумма = &Сумма 		
		|	И (СделкаЛидаУслуги.Оплата = ЗНАЧЕНИЕ(Документ.ПлатежноеПоручениеВходящее.ПустаяСсылка)
		|			ИЛИ СделкаЛидаУслуги.Оплата = ЗНАЧЕНИЕ(Документ.ПриходныйКассовыйОрдер.ПустаяСсылка)
		|			ИЛИ СделкаЛидаУслуги.Оплата = НЕОПРЕДЕЛЕНО)
		|	И СделкаЛидаУслуги.Ссылка.Завершен = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Сумма", Сумма);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		МойБП=ВыборкаДетальныеЗаписи.Ссылка;
	КонецЦикла;
	Возврат  МойБП;
КонецФункции

Процедура ЗаполнениеБП(БизнесПр,Док) Экспорт 
	
	Если БизнесПр=Неопределено тогда
		Возврат;
	КонецЕсли;	
	ЗаписатьБП=Ложь;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СделкаЛидаУслуги.Ссылка,
		|	СделкаЛидаУслуги.Сумма,
		|	СделкаЛидаУслуги.Организация,
		|	СделкаЛидаУслуги.Этап,
		|	СделкаЛидаУслуги.Оплата,
		|	СделкаЛидаУслуги.Ссылка.Лид
		|ПОМЕСТИТЬ БП
		|ИЗ
		|	БизнесПроцесс.СделкаЛида.Услуги КАК СделкаЛидаУслуги
		|ГДЕ
		|	СделкаЛидаУслуги.Ссылка.ПометкаУдаления = ЛОЖЬ
		|	И СделкаЛидаУслуги.Ссылка.Стартован = ИСТИНА
		|	И СделкаЛидаУслуги.Ссылка.Лид = &Контрагент
		|	И СделкаЛидаУслуги.Организация = &Организация
		|	И СделкаЛидаУслуги.Сумма = &Сумма
		|	И (СделкаЛидаУслуги.Оплата = ЗНАЧЕНИЕ(Документ.ПлатежноеПоручениеВходящее.ПустаяСсылка)
		|			ИЛИ СделкаЛидаУслуги.Оплата = ЗНАЧЕНИЕ(Документ.ПриходныйКассовыйОрдер.ПустаяСсылка)
		|			ИЛИ СделкаЛидаУслуги.Оплата = НЕОПРЕДЕЛЕНО)

		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗадачиПользователя.Ссылка,
		|	ЗадачиПользователя.Дата,
		|	ЗадачиПользователя.БизнесПроцесс,
		|	ЗадачиПользователя.ТочкаМаршрута,
		|	ЗадачиПользователя.Наименование,
		|	ЗадачиПользователя.Выполнена,
		|	ВЫБОР
		|		КОГДА ЗадачиПользователя.ТочкаМаршрута = &ТочкаМаршрута
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ КАК Этап,
		|	ЗадачиПользователя.Объект
		|ПОМЕСТИТЬ Здч
		|ИЗ
		|	Задача.ЗадачиПользователя КАК ЗадачиПользователя
		|ГДЕ
		|	ЗадачиПользователя.ПометкаУдаления = ЛОЖЬ
		|	И ЗадачиПользователя.Выполнена = ЛОЖЬ
		|	И ЗадачиПользователя.Объект = &Контрагент
		|	И ЗадачиПользователя.БизнесПроцесс = &БизнесПроцесс
		|	И (ЗадачиПользователя.ТочкаМаршрута = &ТочкаМаршрута
		|			ИЛИ ЗадачиПользователя.ТочкаМаршрута = &ТочкаМаршрута2)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	БП.Ссылка КАК СсылкаБизнесПроцесса,
		|	БП.Сумма,
		|	БП.Организация,
		|	БП.Этап КАК Этап,
		|	БП.Оплата,
		|	БП.Лид,
		|	Здч.Ссылка КАК СсылкаЗадачи,
		|	Здч.Дата,
		|	Здч.ТочкаМаршрута,
		|	Здч.Наименование,
		|	Здч.Выполнена,
		|	Здч.Этап КАК ЭтапЗадачи,
		|	Здч.Объект
		|ИЗ
		|	БП КАК БП
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Здч КАК Здч
		|		ПО БП.Ссылка = Здч.БизнесПроцесс.Ссылка
		|			И БП.Лид = Здч.Объект
		|			И БП.Этап = Здч.Этап
		|
		|УПОРЯДОЧИТЬ ПО
		|	Этап";
	
	Запрос.УстановитьПараметр("БизнесПроцесс", БизнесПр);
	Запрос.УстановитьПараметр("Контрагент", Док.Контрагент);
	Запрос.УстановитьПараметр("Организация", Док.Организация);
	Запрос.УстановитьПараметр("Сумма", Док.СуммаДокумента);
	Запрос.УстановитьПараметр("ТочкаМаршрута", БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ПроверкаОплат);
	Запрос.УстановитьПараметр("ТочкаМаршрута2", БизнесПроцессы.СделкаЛида.ТочкиМаршрута.ПроверкаОплат_2Т);
	РезультатЗапроса = Запрос.Выполнить();
	Если не РезультатЗапроса.Пустой() тогда
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		МояЗадача=ВыборкаДетальныеЗаписи.СсылкаЗадачи;
		МойЭтап	 =	 ВыборкаДетальныеЗаписи.Этап;
		Сообщить("Найден БП  "+ВыборкаДетальныеЗаписи.СсылкаБизнесПроцесса + " и задача проверки оплаты "+МояЗадача+" на этапе "+МойЭтап);
		БП=БизнесПр.ПолучитьОбъект();
		Для каждого стр Из БП.Услуги  Цикл
			Если стр.Организация=Док.Организация
				и  БП.Лид=Док.Контрагент 
				и стр.Сумма=Док.СуммаДокумента				
				и не ЗначениеЗаполнено(стр.Оплата)
				и стр.Этап=МойЭтап тогда
				стр.Оплата=Док.Ссылка;		
				ЗаписатьБП=Истина;
				Прервать;		
			КонецЕсли;
		КонецЦикла;	
		Если ЗаписатьБП тогда
			НачатьТранзакцию();
			#Если Клиент Тогда
				Состояние("Начало транзакции");
			#КонецЕсли
			БП.Записать();	
			//*** все ли платежи выполнены
			ОплатыЗаполнены=Ложь;
			//Для каждого стрУ из БП.Услуги Цикл
			//	Если стрУ.Этап=МойЭтап и не ЗначениеЗаполнено(стрУ.Оплата)
			//		И СтрУ.Сумма>0.01 тогда
			//		ОплатыЗаполнены=Ложь;
			//		Прервать;
			//	ИначеЕсли  стрУ.Этап=1 и ЗначениеЗаполнено(стрУ.Оплата) И СтрУ.Сумма>0.01 тогда
			//		ОплатыЗаполнены=Истина;
			//	КонецЕсли;
			//КонецЦикла;
			Для каждого стрУ из БП.Услуги Цикл
				Если стрУ.Этап=МойЭтап и не ЗначениеЗаполнено(стрУ.Оплата) тогда
					//И СтрУ.Сумма>0.01 тогда
					ОплатыЗаполнены=Ложь;
					Прервать;
				ИначеЕсли  стрУ.Этап=МойЭтап и ЗначениеЗаполнено(стрУ.Оплата) тогда
					//И СтрУ.Сумма>0.01 тогда //***181106
					ОплатыЗаполнены=Истина;
				КонецЕсли;
			КонецЦикла;
			
			Если ОплатыЗаполнены тогда
				мз=МояЗадача.ПолучитьОбъект();
				мз.ВыполнитьЗадачуИнтерактивно();
				Сообщить("Задача проверки оплат "+МояЗадача+" на этапе "+МойЭтап+ " - выполнена!");
			КонецЕсли;	
			ЗафиксироватьТранзакцию();			
		Иначе
			Сообщить("Не найден приемник оплаты!");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры
//***AL 181015 ### 
Процедура СоздатьСобытиеПочтаОтправлена(Тема="",ОписаниеСобытия="",Контрагент) Экспорт
	ДокОбъектСобытие = Документы.Событие.СоздатьДокумент();
	ДокОбъектСобытие.УстановитьСсылкуНового(Документы.Событие.ПолучитьСсылку(Новый УникальныйИдентификатор()));	
	ДокОбъектСобытие.ВидСобытия = Перечисления.ВидыСобытий.ЭлектронноеПисьмо;
	ДокОбъектСобытие.ТипСобытия = Перечисления.ВходящееИсходящееСобытие.Исходящее;
	ДокОбъектСобытие.СостояниеСобытия=Перечисления.СостоянияСобытий.Завершено;
	ДокОбъектСобытие.ОписаниеСобытия   = Тема;
	ДокОбъектСобытие.СодержаниеСобытия = "Автоматическая запись события при отправке почты из выполненной задачи. "+
	Символы.ПС +Тема+" "+Символы.ПС +ОписаниеСобытия;
	ДокОбъектСобытие.Ответственный=глЗначениеПеременной("глТекущийПользователь");
	ДокОбъектСобытие.Дата=ТекущаяДата();
	ДокОбъектСобытие.ВидОбъекта=Перечисления.ВидыОбъектовСобытия.Контрагент;
	ДокОбъектСобытие.Контрагент=Контрагент;
	ДокОбъектСобытие.НачалоСобытия=ТекущаяДата();
	ДокОбъектСобытие.ОкончаниеСобытия=ТекущаяДата();
	Если ДокОбъектСобытие.Модифицированность() Тогда
		Попытка
			ДокОбъектСобытие.Записать(РежимЗаписиДокумента.Проведение);
			//#Если Не Клиент Тогда
			//ЗаписьЖурналаРегистрации(" ", УровеньЖурналаРегистрации.Информация, ,ДокОбъектСобытие.Ссылка,"Binotel IP-телефония:Запись нового события");
			//#КонецЕсли
		Исключение
			Э_ТелефонияBinotel.СообщитьИнформацию(НСтр("ru='Не удалось записать событие : ';uk='Не вдалося записати подію  '")+ОписаниеОшибки()); 
		КонецПопытки;
	КонецЕсли;

	
КонецПроцедуры

Функция  ПолучитьНевыполненнуюЗадачу(БП) Экспорт
	Если БП=неопределено тогда
		возврат БП;
	КонецЕсли;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ЗадачиПользователя.Ссылка КАК Задача
		|ИЗ
		|	Задача.ЗадачиПользователя КАК ЗадачиПользователя
		|ГДЕ
		|	ЗадачиПользователя.ПометкаУдаления = ЛОЖЬ
		|	И ЗадачиПользователя.Выполнена = ЛОЖЬ
		|	И ЗадачиПользователя.БизнесПроцесс = &БизнесПроцесс
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЗадачиПользователя.Дата";
	
	Запрос.УстановитьПараметр("БизнесПроцесс", БП);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() тогда
		возврат Неопределено;
	КонецЕсли;	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	ВыборкаДетальныеЗаписи.Следующий();
	возврат ВыборкаДетальныеЗаписи.Задача
КонецФункции


