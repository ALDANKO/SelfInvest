Перем РуководительОтделаСопровождения;
Перем ГлавБух; //*** Резвая

Процедура СогласованиеВакансииОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	Если РезультатПоискаСогласованияУО=Перечисления.РезультатыСогласованияВакансииЛида_УО.ВозвратДенег тогда
		Результат	=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.СогласованиеВакансии.Варианты.ВариантВозвратДенег;
	ИначеЕсли 	РезультатПоискаСогласованияУО=Перечисления.РезультатыСогласованияВакансииЛида_УО.ИзменениеСезона тогда
		Результат	=БизнесПроцессы.СделкаЛида.ТочкиМаршрута.СогласованиеВакансии.Варианты.ВариантИзменениеСезона;
	ИначеЕсли 	РезультатПоискаСогласованияУО=Перечисления.РезультатыСогласованияВакансииЛида_УО.ПоискРаботодателя тогда	
		Результат =БизнесПроцессы.СделкаЛида.ТочкиМаршрута.СогласованиеВакансии.Варианты.ВариантПоискРаботодателя;
	ИначеЕсли 	РезультатПоискаСогласованияУО=Перечисления.РезультатыСогласованияВакансииЛида_УО.Утвержден тогда	
		Результат =БизнесПроцессы.СделкаЛида.ТочкиМаршрута.СогласованиеВакансии.Варианты.ВариантУтвержден;
	ИначеЕсли 	РезультатПоискаСогласованияУО=Перечисления.РезультатыСогласованияВакансииЛида_УО.Согласование тогда	
		Результат =БизнесПроцессы.СделкаЛида.ТочкиМаршрута.СогласованиеВакансии.Варианты.ВариантСогласование;
	КонецЕсли;	
КонецПроцедуры

Процедура ПечатьКомплекта1() 
	 СчетООО.ПолучитьОбъект().Печ("Счет",1,Ложь);
	 РаспечатанСчетООО=Истина;
	 СчетФОП.ПолучитьОбъект().Печать("Счет",1,Ложь);
	 РаспечатанСчетФОП=Истина;
	 АктООО.ПолучитьОбъект().Печать("ДоговорООО",1,Ложь);
	 РаспечатанДоговорООО=Истина;
	 АктФОП.ПолучитьОбъект().Печать("ДоговорФОП",1,Ложь);
	 РаспечатанДоговорФОП=Истина;
	 Записать();
КонецПроцедуры

Процедура СтартПередСтартом(ТочкаМаршрутаБизнесПроцесса, Отказ)
КонецПроцедуры

Процедура ВыставлениеСчетовПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	мо = Ссылка.ПолучитьОбъект();
	мо.ОтветственныйОПУ=Задача.Исполнитель;
	мо.Записать();
	МойЛид=Ссылка.Лид.ПолучитьОбъект();
	МойЛид.СтатусЛида=Перечисления.СтатусСостоянияЛида.ОжиданиеПервойОплаты;
	МойЛид.Записать();
	
КонецПроцедуры

Процедура ВыставлениеСчетовПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Оформление догворов. По "+Лид.Наименование;
		МояЗадача.Наименование="Оформление догворов  "+Лид.Наименование;
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000002");//*** Отдел продаж
		МояЗадача.ДатаИсполнения	=ДатаНачалаРаботы+300;
		МояЗадача.СрокИсполнения	=ДатаНачалаРаботы+300;
		МояЗадача.Объект			=Лид;
		МояЗадача.Исполнитель		=ОтветственныйОПУ;
		МояЗадача.Записать();	
	КонецЦикла;
	//УслугаООО=Справочники.Номенклатура.НайтиПоКоду("00000000003"); //Оформление документов ООО 
	//АктООО=ДополнительныеФункции.СоздатьАкт(ОрганизацияООО,Лид,СуммаООО,УслугаООО,Ссылка);
	//УслугаФОП=Справочники.Номенклатура.НайтиПоКоду("00000000004"); //Оформление документов ФОП - 1
	//АктФОП=ДополнительныеФункции.СоздатьАкт(ОрганизацияФОП,Лид,СуммаФОП,УслугаФОП,Ссылка);
	////*** 00000000005 Оформление документов ФОП - 2	
	//СчетООО=ДополнительныеФункции.СоздатьСчет(ОрганизацияООО,Лид,СуммаООО,УслугаООО,Ссылка);
	//СчетФОП=ДополнительныеФункции.СоздатьСчет(ОрганизацияФОП,Лид,СуммаФОП,УслугаФОП,Ссылка);
	Для каждого стр из Услуги Цикл
		Если стр.Этап=1 тогда
			Если  не ЗначениеЗаполнено(стр.Номенклатура.НоменклатурнаяГруппа)
							и не ЗначениеЗаполнено(стр.Акт) тогда
				стр.Акт=ДополнительныеФункции.СоздатьАкт(стр.Организация,Лид,стр.Сумма,стр.Номенклатура,Ссылка);
			КонецЕсли;
			Если не ЗначениеЗаполнено(стр.Счет) тогда
				стр.Счет=ДополнительныеФункции.СоздатьСчет(стр.Организация,Лид,стр.Сумма,стр.Номенклатура,Ссылка);
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;	
	
	Записать();
КонецПроцедуры

Процедура ПроверкаОплатПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Проверка оплат 1й транш. По "+Лид.Наименование+
		" Откройте сделку и выбирите на вкладке <<Оплаты 1й транш >> документы оплаты.";
		МояЗадача.Наименование="Проверка оплат 1й транш  "+Лид.Наименование;
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000008");//*** Бухгалтерия
		МояЗадача.Исполнитель		=ГлавБух;
		МояЗадача.ДатаИсполнения	=ДатаНачалаРаботы+3*24*3600;
		МояЗадача.СрокИсполнения	=ДатаНачалаРаботы+3*24*3600;
		МояЗадача.Объект			=Лид;
		МояЗадача.Записать();	
	КонецЦикла;
КонецПроцедуры

Процедура ПроверкаОплатПередВыполнением(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	ОплатыЗаполнены=Ложь;
	Для каждого стр из Услуги Цикл
		Если стр.Этап=1 и не ЗначениеЗаполнено(стр.Оплата) тогда
			ОплатыЗаполнены=Ложь;
			Прервать;
		ИначеЕсли  стр.Этап=1 и ЗначениеЗаполнено(стр.Оплата) тогда
			ОплатыЗаполнены=Истина;
		КонецЕсли;
	КонецЦикла;
	//***181001
	ОплатыЗаполнены=Истина;
	Если не ОплатыЗаполнены Тогда 
		Ответ = Вопрос("Оплаты не заполнены! Вы хотите завершить работу с задачей и со сделкой лида?", РежимДиалогаВопрос.ДаНет);
		Отказ = (Ответ = КодВозвратаДиалога.Нет);
	КонецЕсли;
КонецПроцедуры

Процедура ПроверкаОплатОбработкаПроверкиВыполнения(ТочкаМаршрутаБизнесПроцесса, Задача, Результат)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура ПроверкаОплатПередИнтерактивнымВыполнением(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	// Вставить содержимое обработчика.
КонецПроцедуры

Процедура УсловиеОплаты_1ТПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	ОплатыЗаполнены=ложь;
	Для каждого стр из Услуги Цикл
		Если стр.Этап=1 и не ЗначениеЗаполнено(стр.Оплата) тогда
			ОплатыЗаполнены=Ложь;
			Прервать;
		ИначеЕсли	стр.Этап=1 и ЗначениеЗаполнено(стр.Оплата) тогда
			ОплатыЗаполнены=Истина;
		КонецЕсли;
	КонецЦикла;
//***181001
ОплатыЗаполнены=Истина;
	
Результат=ОплатыЗаполнены;
КонецПроцедуры

Процедура ПоискРаботодателя_НОПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Поиск работодателя и вакансии для "+Лид.Наименование+
		". Он ждет предложения вакансий.";
		МояЗадача.Наименование="Поиск работодателя и вакансии для "+Лид.Наименование;
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000005");//*** Отдел продаж Германия
		//МояЗадача.ДатаИсполнения	=ДатаНачалаРаботы+3*24*3600;
		МояЗадача.СрокИсполнения	=ДатаНачалаРаботы+15*24*3600;
		МояЗадача.Объект			=Лид;
		МояЗадача.Записать();	
	КонецЦикла;
КонецПроцедуры

Процедура ПоискИСогласование_УОПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Поиск работодателя и вакансии для "+Лид.Наименование+
		". Откройте сделку и установите работодателя и его сделку.";
		МояЗадача.Наименование="Поиск работодателя и вакансии для "+Лид.Наименование;
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000003");//*** Отдел сопровождения Украины
		МояЗадача.СрокИсполнения	=ДатаНачалаРаботы+3*24*3600;
		МояЗадача.Исполнитель		=?(ЗначениеЗаполнено(Ссылка.ОтветственныйОСУ),Ссылка.ОтветственныйОСУ,глЗначениеПеременной("глТекущийПользователь"));
		МояЗадача.Объект			=Лид;
		МояЗадача.Записать();	
	КонецЦикла;
КонецПроцедуры

Процедура ВыставлениеСчетов_2ТПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Создание счетов 2го транша "+Лид.Наименование+
		". Откройте сделку и установите работодателя и его сделку.";
		МояЗадача.Наименование="Создание счетов 2го транша "+Лид.Наименование;
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000002");//*** Отдел продаж
		МояЗадача.Исполнитель		=?(ЗначениеЗаполнено(Ссылка.ОтветственныйОПУ),Ссылка.ОтветственныйОПУ,ДополнительныеФункции.НайтиОтветственногоЗаВыпставлениеСчетов(Ссылка));
		МояЗадача.ДатаИсполнения	=ДатаНачалаРаботы+1*24*3600;
		МояЗадача.СрокИсполнения	=ДатаНачалаРаботы+1*24*3600;
		МояЗадача.Объект			=Лид;
		МояЗадача.Записать();	
	КонецЦикла;
	//*** 00000000005 Оформление документов ФОП - 2	
	//УслугаФОП2=Справочники.Номенклатура.НайтиПоКоду("00000000005"); 
	//СчетФОП2=ДополнительныеФункции.СоздатьСчет(ОрганизацияФОП,Лид,СуммаФОП2,УслугаФОП2,Ссылка);
	Если Сезон=Справочники.СезоныРабот.НайтиПоКоду("000000002") тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СделкаЛидаУслуги.Номенклатура,
		|	Итог2.Сумма КАК Сумма
		|ИЗ
		|	БизнесПроцесс.СделкаЛида.Услуги КАК СделкаЛидаУслуги
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СУММА(СделкаЛидаУслугиИтого.Сумма) КАК Сумма
		|		ИЗ
		|			БизнесПроцесс.СделкаЛида.Услуги КАК СделкаЛидаУслугиИтого
		|		ГДЕ
		|			СделкаЛидаУслугиИтого.Номенклатура.НоменклатурнаяГруппа <> ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
		|			И СделкаЛидаУслугиИтого.Ссылка = &Ссылка) КАК Итог2
		|		ПО (ИСТИНА)
		|ГДЕ
		|	СделкаЛидаУслуги.Этап = 2
		|	И СделкаЛидаУслуги.Номенклатура.НоменклатурнаяГруппа <> ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
		|	И СделкаЛидаУслуги.Ссылка = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		ВыборкаДетальныеЗаписи.Следующий();
		//*** АктФОП=ДополнительныеФункции.СоздатьАкт(ОрганизацияФОП,Лид,СуммаФОП,ВыборкаДетальныеЗаписи.номенклатура,Ссылка);
		АктФОП=ДополнительныеФункции.СоздатьАкт(ОрганизацияФОП,Лид,ВыборкаДетальныеЗаписи.Сумма,ВыборкаДетальныеЗаписи.номенклатура,Ссылка);
		Для каждого стр из Услуги Цикл
			Если стр.Этап=2 тогда
				стр.Счет=ДополнительныеФункции.СоздатьСчет(стр.Организация,Лид,стр.Сумма,стр.Номенклатура,Ссылка);
				Если стр.Организация=ОрганизацияООО тогда 			
					стр.Акт=ДополнительныеФункции.СоздатьАкт(стр.Организация,Лид,стр.Сумма,стр.номенклатура,Ссылка);		
				КонецЕсли;
			КонецЕсли;
			Если ЗначениеЗаполнено(стр.Номенклатура.НоменклатурнаяГруппа) тогда
				стр.Акт=АктФОП;		
			КонецЕсли;	
		КонецЦикла;	
	Иначе
		
		Для каждого стр из Услуги Цикл
			Если стр.Этап=2 тогда
				стр.Счет=ДополнительныеФункции.СоздатьСчет(стр.Организация,Лид,стр.Сумма,стр.Номенклатура,Ссылка);
				Если стр.Организация=ОрганизацияООО тогда 			
					стр.Акт=ДополнительныеФункции.СоздатьАкт(стр.Организация,Лид,стр.Сумма,стр.номенклатура,Ссылка);		
				ИначеЕсли стр.Организация=ОрганизацияФОП тогда 			
					стр.Акт=ДополнительныеФункции.СоздатьАкт(ОрганизацияФОП,Лид,стр.Сумма,стр.номенклатура,Ссылка);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;	
	Записать();
	
КонецПроцедуры

Процедура ПроверкаОплат_2ТПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Проверка оплат 2й транш. По "+Лид.Наименование+
		" Откройте сделку и выбирите на вкладке <<Оплаты 2й транш >> документы оплаты.";
		МояЗадача.Наименование="Проверка оплат 2й транш  "+Лид.Наименование;
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000008");//*** Бухгалтерия
		//*** Справочники.Подразделения.НайтиПоКоду("000000002");//*** УО продаж
		//МояЗадача.Исполнитель		=?(ЗначениеЗаполнено(Ссылка.ОтветственныйОПУ),Ссылка.ОтветственныйОПУ,ДополнительныеФункции.НайтиОтветственногоЗаВыпставлениеСчетов(Ссылка));
		МояЗадача.Исполнитель		=ГлавБух;
		МояЗадача.ДатаИсполнения	=ДатаНачалаРаботы+3*24*3600;
		МояЗадача.СрокИсполнения	=ДатаНачалаРаботы+3*24*3600;
		МояЗадача.Объект			=Лид;
		МояЗадача.Записать();	
	КонецЦикла;
КонецПроцедуры

Процедура УсловиеОплаты_2ТПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	ОплатыЗаполнены=Ложь;
	Для каждого стр из Услуги Цикл
		Если стр.Этап=2 и не ЗначениеЗаполнено(стр.Оплата) тогда
			ОплатыЗаполнены=Ложь;
			Прервать;
		ИначеЕсли стр.Этап=2 и ЗначениеЗаполнено(стр.Оплата) тогда	
			ОплатыЗаполнены=Истина;
		КонецЕсли;
	КонецЦикла;
	Результат=ОплатыЗаполнены;
КонецПроцедуры



Процедура Завершение2ПриЗавершении(ТочкаМаршрутаБизнесПроцесса, Отказ)
	//регистрируем лид в сделке работодателя
	СР=Предлдожение.ПолучитьОбъект();
	Найден=Ложь;
	Для Каждого стр из 	СР.Работники Цикл
		Если стр.Лид=Лид Тогда
			Найден=Истина;
			Прервать;
		КонецЕсли;	
	КонецЦикла;
	
	Если не Найден тогда
		стр=Ср.Работники.Добавить();
	КонецЕсли;
	
	стр.Дата=ТекущаяДата();
	стр.СделкаЛида=Ссылка;
	стр.Утвержден=Истина;    //***180906
	стр.Ответственный=глЗначениеПеременной("глТекущийПользователь");
	СР.Записать();    //***180906
	Записать();
КонецПроцедуры

Процедура ИзменениеСезонаПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Изменение сезона поиска работы. По "+Лид.Наименование+
		" Просто изменить сезон в данной форме.";
		МояЗадача.Наименование="Изменение сезона поиска работы для  "+Лид.Наименование;
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000002");//*** Отдел продаж
		МояЗадача.Исполнитель		=глЗначениеПеременной("глТекущийПользователь");
		МояЗадача.СрокИсполнения	=ДатаНачалаРаботы+1*24*3600;
		МояЗадача.Объект			=Лид;
		МояЗадача.Записать();	
	КонецЦикла;
КонецПроцедуры

Процедура ВозвратДенегПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Возврат денег. По "+Лид.Наименование+
		" Заполните платежное поручение.";
		МояЗадача.Наименование="Возврат денег "+Лид.Наименование;
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000002");//*** Отдел продаж
		МояЗадача.Исполнитель		=глЗначениеПеременной("глТекущийПользователь");
		МояЗадача.СрокИсполнения	=ДатаНачалаРаботы+1*24*3600;
		МояЗадача.Объект			=Лид;
		МояЗадача.Записать();	
	КонецЦикла;
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	Если не ЗначениеЗаполнено(ТипЦены) тогда
		ТипЦены=Справочники.ТипыЦенНоменклатуры.НайтиПоКоду("000000001");
	КонецЕсли;	
	СуммаСделки=0;
	СуммаООО=0;
	СуммаФОП=0;
	СуммаФОП2=0;
	Для каждого стр из  Услуги Цикл
		//СуммаООО
		//СуммаФОП
		//СуммаФОП21
		//СуммаФОП22
		СуммаСделки=СуммаСделки+стр.Сумма;
		Если стр.Организация=ОрганизацияООО тогда
			СуммаООО=СуммаООО+стр.Сумма;
		ИначеЕсли стр.Организация=ОрганизацияФОП 	 тогда
			СуммаФОП=СуммаФОП+стр.Сумма;
		КонецЕсли;	
	КонецЦикла;
	масВак=новый массив;
	Для каждого стр из  Вакансии Цикл
		Если масВак.Найти(стр.Предложение)=Неопределено и (стр.Принято=Истина или стр.Отказ) тогда
			 масВак.Добавить(стр.Предложение);
		КонецЕсли;
	КонецЦикла;	
	ИспользованоВакансий=масВак.Количество();//*** Вакансии.Количество();
КонецПроцедуры

Процедура ПроверкаОплат_2ТПередВыполнением(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	ОплатыЗаполнены=Ложь;
	Для каждого стр из Услуги Цикл
		Если стр.Этап=2 и не ЗначениеЗаполнено(стр.Оплата) тогда
			ОплатыЗаполнены=Ложь;
			Прервать;
		ИначеЕсли  стр.Этап=2 и ЗначениеЗаполнено(стр.Оплата) тогда
			ОплатыЗаполнены=Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если не ОплатыЗаполнены Тогда 
		Ответ = Вопрос("Оплаты не заполнены! Вы хотите вернуть сделку лида на согласование?", РежимДиалогаВопрос.ДаНет);
		Отказ = (Ответ = КодВозвратаДиалога.Нет);
    КонецЕсли;
КонецПроцедуры

Процедура РаботодателюНужнаБиографияПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	  Результат=НеобходимаБиография;
КонецПроцедуры

Процедура ЛидУтвержденПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	  Результат=БиографияУтверждена;
КонецПроцедуры

Процедура ЛидПрошелМинТрудаПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	  Результат=УтвержденМинТруда;
КонецПроцедуры

Процедура ОтправитьФормуДляЗаполненияПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Если Вы отправили анкету для заполнения лиду "+Лид.Наименование+", то проставьте выполнение задачи!";
		МояЗадача.Наименование="Отправка анкеты лиду "+Лид.Наименование;
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000003");//*** Отдел сопровождения Украина
		МояЗадача.СрокИсполнения	=МояЗадача.Дата+7200;
		МояЗадача.Исполнитель		=?(ЗначениеЗаполнено(Ссылка.ОтветственныйОСУ),Ссылка.ОтветственныйОСУ,глЗначениеПеременной("глТекущийПользователь"));
		МояЗадача.Объект			=Лид;
		МояЗадача.Записать();	
	КонецЦикла;
КонецПроцедуры

Процедура ПолучитьФормуДляЗаполнееияПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Если лид "+Лид.Наименование+" прислал анкету для составления справок и биографий, то проставьте выполнение задачи!";
		МояЗадача.Наименование="Лид "+Лид.Наименование+" должен прислать анкету для заполнения биографии и справок.";
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000003");//*** Отдел сопровождения Украина
		МояЗадача.СрокИсполнения	=МояЗадача.Дата+24*3600;
		МояЗадача.Исполнитель		=?(ЗначениеЗаполнено(Ссылка.ОтветственныйОСУ),Ссылка.ОтветственныйОСУ,глЗначениеПеременной("глТекущийПользователь"));
		МояЗадача.Объект			=Лид;
		МояЗадача.Записать();	
	КонецЦикла;
КонецПроцедуры

Процедура СоставлениеБиографииПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Если необходима биография работодателю подтвердите это. Если биография для лид "+Лид.Наименование+" составлена, то проставьте выполнение задачи! ";
		МояЗадача.Наименование="Составление биографии для "+Лид.Наименование+".";
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000004");//*** Отдел продаж Германия
		МояЗадача.СрокИсполнения	=МояЗадача.Дата+24*3600;
		МояЗадача.Исполнитель	=Ссылка.Предлдожение.ОтветственныйМенеджер;
		МояЗадача.Объект		=Лид;
		МояЗадача.Записать();	
	КонецЦикла;
КонецПроцедуры

Процедура ОтправилиНаПодтверждениеПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Если биография лида "+Лид.Наименование+" отправлена работодателю - "+ СокрЛП(Работодатель.Наименование) + ", то проставьте выполнение задачи! ";
		МояЗадача.Наименование="Отправка биографии "+Лид.Наименование+" работодателю.";
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение		=Справочники.Подразделения.НайтиПоКоду("000000004");//*** Отдел сопровождения Германия
		МояЗадача.СрокИсполнения	=МояЗадача.Дата+2*3600;
		МояЗадача.Исполнитель		=Ссылка.Предлдожение.ОтветственныйМенеджер;
		МояЗадача.Объект			=Лид;
		МояЗадача.Записать();	
	КонецЦикла;
КонецПроцедуры

Процедура УтверждениеРаботодателемПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Если биография лида "+Лид.Наименование+" утверждена, то проставьте выполнение задачи! ";
		МояЗадача.Наименование="Утверждение биографии "+Лид.Наименование+" работодателем.";
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000004");//*** Отдел сопр. Германия
		МояЗадача.Исполнитель	=Ссылка.Предлдожение.ОтветственныйМенеджер;
		МояЗадача.СрокИсполнения	=МояЗадача.Дата+2*24*3600;
		МояЗадача.Объект			=Лид;
		МояЗадача.Записать();	
	КонецЦикла;
КонецПроцедуры

Процедура СоставлениеСправкиПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Если справка лида "+Лид.Наименование+" составлена, то проставьте выполнение задачи! ";
		МояЗадача.Наименование="Составление справки для лида "+Лид.Наименование+".";
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000004");//*** Отдел сопров. Германия
		МояЗадача.Исполнитель	=Ссылка.Предлдожение.ОтветственныйМенеджер;
		МояЗадача.СрокИсполнения	=МояЗадача.Дата+24*3600;
		МояЗадача.Объект			=Лид;
		МояЗадача.Записать();	
	КонецЦикла;
КонецПроцедуры

Процедура ОтправкаСправкиПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Если справка лида "+Лид.Наименование+" отправлена  для подписи, то проставьте выполнение задачи! ";
		МояЗадача.Наименование="Отправка справки лиду "+Лид.Наименование+".";
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000003");//*** Отдел сопровождения Украина
		МояЗадача.Исполнитель		=?(ЗначениеЗаполнено(Ссылка.ОтветственныйОСУ),Ссылка.ОтветственныйОСУ,РуководительОтделаСопровождения);
		МояЗадача.СрокИсполнения	=МояЗадача.Дата+2*3600;
		МояЗадача.Объект			=Лид;
		МояЗадача.Записать();	
	КонецЦикла;
КонецПроцедуры

Процедура ПолучениеСправкиПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Если справка от лида "+Лид.Наименование+" получена, то проставьте выполнение задачи! ";
		МояЗадача.Наименование="Получение справки от лида "+Лид.Наименование+".";
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000003");//*** Отдел сопровождения Украина
		МояЗадача.Исполнитель		=?(ЗначениеЗаполнено(Ссылка.ОтветственныйОСУ),Ссылка.ОтветственныйОСУ,РуководительОтделаСопровождения);
		МояЗадача.СрокИсполнения	=МояЗадача.Дата+48*3600;
		МояЗадача.Объект			=Лид;
		МояЗадача.Записать();	
	КонецЦикла;
КонецПроцедуры

Процедура ОтправкаСправкиРаботодателюПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Если справка лида "+Лид.Наименование+" отправлена работодателю "+СокрЛП(Работодатель.Наименование) +", то проставьте выполнение задачи! ";
		МояЗадача.Наименование="Отправка справки "+Лид.Наименование+"на утверждение работодателю "+ СокрЛП(Работодатель.Наименование) + ".";
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000004");//*** Отдел продаж Германия
		МояЗадача.Исполнитель		=?(ЗначениеЗаполнено(Ссылка.ОтветственныйОСГ),Ссылка.ОтветственныйОСГ,Ссылка.Предлдожение.ОтветственныйМенеджер);
		МояЗадача.СрокИсполнения	=МояЗадача.Дата+2*3600;
		МояЗадача.Объект			=Лид;
		МояЗадача.Записать();	
	КонецЦикла;
КонецПроцедуры

Процедура ОтправкаВМинТрудаПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Если документы лида "+Лид.Наименование+" отправлена в мин-во труда, то проставьте ДАТУ и  выполнение задачи! ";
		МояЗадача.Наименование="Отправка документов "+Лид.Наименование+" в мин-во труда.";
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000005");//*** Отдел продаж Германия
		МояЗадача.Исполнитель		=?(ЗначениеЗаполнено(Ссылка.ОтветственныйОСГ),Ссылка.ОтветственныйОСГ,Ссылка.Предлдожение.ОтветственныйМенеджер);
		МояЗадача.СрокИсполнения	=МояЗадача.Дата+2*3600;
		МояЗадача.Объект			=Лид;
		МояЗадача.Записать();	
	КонецЦикла;
КонецПроцедуры

Процедура ПолучениеИзМинТрудаПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Если документы лида "+Лид.Наименование+" получены из мин-ва труда, то проставьте ДАТУ и  выполнение задачи! ";
		МояЗадача.Наименование="Получение из мин-ва труда документов по "+Лид.Наименование+".";
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000005");//*** Отдел продаж Германия
		МояЗадача.Исполнитель		=?(ЗначениеЗаполнено(Ссылка.ОтветственныйОСГ),Ссылка.ОтветственныйОСГ,Ссылка.Предлдожение.ОтветственныйМенеджер);
		МояЗадача.СрокИсполнения	=МояЗадача.Дата+7*24*3600;
		МояЗадача.Объект			=Лид;
		МояЗадача.Записать();	
	КонецЦикла;
КонецПроцедуры

Процедура ПолучениеСправкиПочтойПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Если справка  лида "+Лид.Наименование+" получена, то проставьте выполнение задачи! ";
		МояЗадача.Наименование="Получение справки "+Лид.Наименование+".";
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000005");//*** Отдел продаж Германия
		МояЗадача.Исполнитель		=?(ЗначениеЗаполнено(Ссылка.ОтветственныйОСГ),Ссылка.ОтветственныйОСГ,Ссылка.Предлдожение.ОтветственныйМенеджер);
		МояЗадача.СрокИсполнения	=МояЗадача.Дата+24*3600;
		МояЗадача.Объект			=Лид;
		МояЗадача.Записать();	
	КонецЦикла;
КонецПроцедуры

Процедура ОформлениеСтраховкиПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Если страховка оформлена для лида "+Лид.Наименование+", то проставьте выполнение задачи! ";
		МояЗадача.Наименование="Оформление страховки "+Лид.Наименование+".";
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение		=Справочники.Подразделения.НайтиПоКоду("000000003");//*** Отдел сопровождения Украина
		МояЗадача.Исполнитель		=?(ЗначениеЗаполнено(Ссылка.ОтветственныйОСУ),Ссылка.ОтветственныйОСУ,РуководительОтделаСопровождения);
		МояЗадача.СрокИсполнения	=МояЗадача.Дата+24*3600;
		МояЗадача.Объект			=Лид;
		МояЗадача.Записать();	
	КонецЦикла;
КонецПроцедуры

Процедура ПокупкаБилетовПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Если билеты куплены для лида "+Лид.Наименование+", то проставьте ДАТЫ выезда/возврата и выполнение задачи! ";
		МояЗадача.Наименование="Покупка билетов "+Лид.Наименование+".";
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000003");//*** Отдел сопровождения Украина
		МояЗадача.Исполнитель		=?(ЗначениеЗаполнено(Ссылка.ОтветственныйОСУ),Ссылка.ОтветственныйОСУ,РуководительОтделаСопровождения);
		МояЗадача.СрокИсполнения	=МояЗадача.Дата+2*3600;
		МояЗадача.Объект			=Лид;
		МояЗадача.Записать();	
	КонецЦикла;
КонецПроцедуры

Процедура ПроверкаВозвращенияПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Если лид "+Лид.Наименование+" вернулся в Украину, то проставьте выполнение задачи! ";
		МояЗадача.Наименование="Возвращение "+Лид.Наименование+".";
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000003");//*** Отдел сопровождения Украина
		МояЗадача.Исполнитель		=?(ЗначениеЗаполнено(Ссылка.ОтветственныйОСУ),Ссылка.ОтветственныйОСУ,РуководительОтделаСопровождения);
		МояЗадача.СрокИсполнения	=МояЗадача.Дата+2*3600;
		МояЗадача.Объект			=Лид;
		МояЗадача.Записать();	
	КонецЦикла;
КонецПроцедуры

Процедура ОпределениеУровняЗнанияЯзыковПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="На этом этапе необходимо проверить знание языков и на основании этого установить кол-во вакансиий для сделки!";
		МояЗадача.Наименование="Проверка знания языков "+Лид.Наименование+".";
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000003");//*** Отдел сопровождения Украина
		МояЗадача.СрокИсполнения	=МояЗадача.Дата+2*3600;
		МояЗадача.Объект			=Лид;
		МояЗадача.Исполнитель		= РуководительОтделаСопровождения;
		МояЗадача.Записать();	
	КонецЦикла;
КонецПроцедуры

Процедура ПодборВакансииПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="На этом этапе необходимо предложить клиенту вакансию для сделки!";
		МояЗадача.Наименование="Предложение вакансии "+Лид.Наименование+".";
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000003");//*** Отдел сопровождения Украина
		МояЗадача.СрокИсполнения	=МояЗадача.Дата+2*3600;
		МояЗадача.Объект			=Лид;
		МояЗадача.Исполнитель		=?(ЗначениеЗаполнено(Ссылка.ОтветственныйОСУ),Ссылка.ОтветственныйОСУ,глЗначениеПеременной("глТекущийПользователь"));
		МояЗадача.Записать();	
	КонецЦикла;
КонецПроцедуры

Процедура УтверждениеВакансииПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Необходимо получить от клиента соглашение или отказ от предложенной вакансии !";
		МояЗадача.Наименование="Согласование вакансии с "+Лид.Наименование+".";
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000003");//*** Отдел сопровождения Украина
		МояЗадача.СрокИсполнения	=МояЗадача.Дата+48*3600;
		МояЗадача.Исполнитель		=?(ЗначениеЗаполнено(Ссылка.ОтветственныйОСУ),Ссылка.ОтветственныйОСУ,глЗначениеПеременной("глТекущийПользователь"));
		МояЗадача.Объект			=Лид;
		МояЗадача.Записать();	
	КонецЦикла;
КонецПроцедуры

Процедура ПокупкаБилетовПередВыполнением(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	Если не ЗначениеЗаполнено(ДатаВозврата) 
		Или не ЗначениеЗаполнено(ДатаВыезда) тогда
		Отказ = Истина;
		Предупреждение("Не заполнены даты!",300,"Внимание!");
	КонецЕсли;	
КонецПроцедуры

Процедура ОпределениеУровняЗнанияЯзыковПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	мо = Ссылка.ПолучитьОбъект();
	мо.ОтветственныйОСУ=Задача.Исполнитель;
	мо.Записать();
КонецПроцедуры

Процедура СоставлениеБиографииПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	мо = Ссылка.ПолучитьОбъект();
	мо.ОтветственныйОСГ=Задача.Исполнитель;
	мо.Записать();
КонецПроцедуры

Процедура СтрокиИзмененыПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат=МинТрудаИзменилСроки;
КонецПроцедуры

Процедура ПодтвержденоКлиентомПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат=КлиентПодтвердилИзменениеСроков;
КонецПроцедуры

Процедура ПодтвержденоРаботодателемПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат=РаботодательПодтвердилИзменениеСроков;
КонецПроцедуры

Процедура ПодтверждениеРботодателемИзмененияСроковПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Если работодатель "+Ссылка.Работодатель.Наименование+" подтвердил изменение сроков по решению мин-ва труда для "+Лид.Наименование+" , то проставьте  подтверждение и выполните задачу! ";
		МояЗадача.Наименование="Подтверждение сроков работодателем "+Ссылка.Работодатель.Наименование+" для "+Лид.Наименование+".";
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000005");//*** Отдел продаж Германия
		МояЗадача.Исполнитель		=?(ЗначениеЗаполнено(Ссылка.ОтветственныйОСГ),Ссылка.ОтветственныйОСГ,Ссылка.Предлдожение.ОтветственныйМенеджер);
		МояЗадача.СрокИсполнения	=МояЗадача.Дата+1*24*3600;
		МояЗадача.Объект			=Лид;
		МояЗадача.Записать();	
	КонецЦикла;
КонецПроцедуры

Процедура ПодтверждениеКлиентомНовыхСроковПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Если клиент "+Лид.Наименование+" подтвердил изменение сроков по решению мин-ва труда, то проставьте подтверждение и выполните задачу! ";
		МояЗадача.Наименование="Подтверждение сроков клиентом "+Лид.Наименование+".";
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000003");//*** Отдел сопровождения Украины
		МояЗадача.Исполнитель		=?(ЗначениеЗаполнено(Ссылка.ОтветственныйОСУ),Ссылка.ОтветственныйОСУ,глЗначениеПеременной("глТекущийПользователь"));
		МояЗадача.СрокИсполнения	=МояЗадача.Дата+1*24*3600;
		МояЗадача.Объект			=Лид;
		МояЗадача.Записать();	
	КонецЦикла;
КонецПроцедуры

Процедура ОтправитьАкт2НаПодписьПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Если Вы отправили акт 2 для подписания "+Лид.Наименование+", то проставьте выполнение задачи!";
		МояЗадача.Наименование="Отправка акта 2 "+Лид.Наименование;
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000003");//*** Отдел сопровождения Украина
		МояЗадача.СрокИсполнения	=МояЗадача.Дата+7200;
		МояЗадача.Исполнитель		=?(ЗначениеЗаполнено(Ссылка.ОтветственныйОСУ),Ссылка.ОтветственныйОСУ,глЗначениеПеременной("глТекущийПользователь"));
		МояЗадача.Объект			=Лид;
		МояЗадача.Записать();	
	КонецЦикла;
	мс=Ссылка.ПолучитьОбъект();
	Для каждого стр из мс.Услуги Цикл
		Если стр.Этап=1 и  ЗначениеЗаполнено(стр.Номенклатура.НоменклатурнаяГруппа) и не ЗначениеЗаполнено(стр.Акт) тогда
				стр.Акт=ДополнительныеФункции.СоздатьАкт(стр.Организация,Лид,стр.Сумма,стр.Номенклатура,Ссылка);
		КонецЕсли;
	КонецЦикла;	
	мс.Записать();
КонецПроцедуры

Процедура ПолучитьАкт2ПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Если Вы получили подписанный акт 2 от  "+Лид.Наименование+", то проставьте выполнение задачи!";
		МояЗадача.Наименование="Получение акта 2 от  "+Лид.Наименование;
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000003");//*** Отдел сопровождения Украина
		МояЗадача.СрокИсполнения	=МояЗадача.Дата+4*24*3600;
		МояЗадача.Исполнитель		=?(ЗначениеЗаполнено(Ссылка.ОтветственныйОСУ),Ссылка.ОтветственныйОСУ,глЗначениеПеременной("глТекущийПользователь"));
		МояЗадача.Объект			=Лид;
		МояЗадача.Записать();	
	КонецЦикла;
КонецПроцедуры

Процедура ПроверкаНаличияБиометрическогоПаспортаПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Если лид "+Лид.Наименование+" имеет в наличии биометрический паспорт, то проставьте выполнение задачи!";
		МояЗадача.Наименование="Проверка биометрического паспорта у "+Лид.Наименование+" .";
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000003");//*** Отдел сопровождения Украина
		МояЗадача.СрокИсполнения	=МояЗадача.Дата+2*3600;
		МояЗадача.Исполнитель		=?(ЗначениеЗаполнено(Ссылка.ОтветственныйОСУ),Ссылка.ОтветственныйОСУ,глЗначениеПеременной("глТекущийПользователь"));
		МояЗадача.Объект			=Лид;
		МояЗадача.Записать();	
	КонецЦикла;
КонецПроцедуры

Процедура БиометрическийПаспортВНаличииПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат=БиометрическийПаспортПодтвержден;
КонецПроцедуры

Процедура ПодачаДокументовНаВизуПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Впишите дату подачи документов на визу для "+Лид.Наименование+" и проставьте выполнение задачи!";
		МояЗадача.Наименование="Подача на визу документов "+Лид.Наименование+" .";
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000003");//*** Отдел сопровождения Украина
		МояЗадача.СрокИсполнения	=МояЗадача.Дата+2*24*3600;
		МояЗадача.Исполнитель		=?(ЗначениеЗаполнено(Ссылка.ОтветственныйОСУ),Ссылка.ОтветственныйОСУ,глЗначениеПеременной("глТекущийПользователь"));
		МояЗадача.Объект			=Лид;
		МояЗадача.Записать();	
	КонецЦикла;
КонецПроцедуры

Процедура ПолучениеВизыПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Для Каждого МояЗадача из ФормируемыеЗадачи Цикл
		МояЗадача.Описание  ="Впишите дату получения визы "+Лид.Наименование+" и проставьте выполнение задачи!";
		МояЗадача.Наименование="Получение визы  для "+Лид.Наименование+" .";
		МояЗадача.БизнесПроцесс=Ссылка;
		МояЗадача.ТочкаМаршрута=ТочкаМаршрутаБизнесПроцесса;
		МояЗадача.Дата=ТекущаяДата();
		МояЗадача.Подразделение	=Справочники.Подразделения.НайтиПоКоду("000000003");//*** Отдел сопровождения Украина
		МояЗадача.СрокИсполнения	=МояЗадача.Дата+2*24*3600;
		МояЗадача.Исполнитель		=?(ЗначениеЗаполнено(Ссылка.ОтветственныйОСУ),Ссылка.ОтветственныйОСУ,глЗначениеПеременной("глТекущийПользователь"));
		МояЗадача.Объект			=Лид;
		МояЗадача.Записать();	
	КонецЦикла;
КонецПроцедуры

Процедура ПодачаДокументовНаВизуПередВыполнением(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	Если ДатаПодачиНаВизу=Дата(1,1,1) тогда 
		Отказ=Истина;
		Предупреждение("Дата должна быть заполнена!",300,"Внимание!");
	КонецЕсли;	
КонецПроцедуры

Процедура ПолучениеВизыПередВыполнением(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	Если ДатаПолученияВизы=Дата(1,1,1) тогда 
		Отказ=Истина;
		Предупреждение("Дата должна быть заполнена!",300,"Внимание!");
	КонецЕсли;
КонецПроцедуры

Процедура ПолучениеИзМинТрудаПередВыполнением(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	Если ДействиеРазрешенияМинТрудаС=Дата(1,1,1) или 
		ДействиеРазрешенияМинТрудаПо=Дата(1,1,1) или 
		ДатаМинТруда=Дата(1,1,1) тогда
		Отказ=Истина;			
		Предупреждение("Все значения должны быть заполнены!",300,"Внимание!");
	КонецЕсли;
КонецПроцедуры
//***181130
Процедура ПроверкаОплатПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	МойЛид=Ссылка.Лид.ПолучитьОбъект();
	МойЛид.СтатусЛида=Перечисления.СтатусСостоянияЛида.ПредоплатаВнесена;
	МойЛид.Записать();
КонецПроцедуры

Процедура УтверждениеРаботодателемПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	Если не БиографияУтверждена тогда
		//*** найти предложение снять "Приянято" установить "отклонено работодателем"
		//*** найти
		Работодатель=Справочники.Контрагенты.ПустаяСсылка();
		Предлдожение=Документы.СделкиРаботодателей.ПустаяСсылка();
		Для каждого стр из Вакансии Цикл
			Если стр.Принято и стр.Предложение=Предлдожение тогда
				 стр.Принято=Ложь;
				 стр.ОтклоненоРаботодателем=Истина;
				Прервать;
			КонецЕсли;	
		КонецЦикла;
		Записать();
	КонецЕсли;
КонецПроцедуры

РуководительОтделаСопровождения	=Справочники.Пользователи.НайтиПоНаименованию("Баран Марина");
ГлавБух							=Справочники.Пользователи.НайтиПоНаименованию("Резвая Виктория");